@model HR.Models.Applicant_Previous_Experiences_Profile
@using HR.Resource;
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}

@Scripts.Render("~/bundles/jqueryval")
<div class="content-wrapper">



    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Create", "Applicant_Previous_Experiences_Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                <div class="sec-nav">
                    <div><i class="far fa-save"></i><button type="submit" class="create-btn" />@organ.create</div>
                    <div><i class="fas fa-plus"></i><a href="@Url.Action("create", "Applicant_Previous_Experiences_Profile")" class="create-btn">@pers_2.new_</a></div>
                    <div><i class="far fa-trash-alt"></i><input type="button" href="@Url.Action("index","Applicant_Previous_Experiences_Profile")" class="create-btn" value=@organ.delete /></div>
                    <div><i class="fas fa-undo"></i><a style="" href="@Url.Action("index", "Applicant_Previous_Experiences_Profile",new {id=ViewBag.idemp})" class="create-btn"> @pers_2.Back</a></div>
                    <div><i class="far fa-save"></i> <button type="submit" id="btnSubmit" name="Command" value="Submit" class="create-btn" />@Personnel.ApplicantProfile</div>
                </div>
                    <hr /><hr /><hr />
                    <section class="content-header">
                        <h1>
                            @Personnel.CreateApplicantPreviousExperiencesProfile
                        </h1>
                    </section>
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Employee_ProfileId);
                    <div class="form-horizontal">
                        <hr />
                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <div class="col-md-4">
                                <label style="color:red">@Personnel.ApplicantName</label>
                                @Html.DropDownListFor(m => m.Employee_ProfileId, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), "Select Employee", new { @class = "select2", @onchange = "employee()", id = "employeeId", @style = "margin-bottom: 15px;" })
                                @*@Html.ValidationMessageFor(model => model.Employee_ProfileId, "", new { @class = "text-danger" })*@
                            </div>
                            <div class="col-md-4">
                                <label style="color:red">@Personnel.ExperienceprofileNo</label>
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", id = "codeid", @readonly = true, @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Companycode</label>
                                @Html.DropDownListFor(m => m.External_compainesId, new SelectList(ViewBag.External_compaines, "ID", "Code"), Personnel.SelectCompany, new { @class = "select2", @onchange = "company()", id = "companyId", @style = "margin-bottom: 15px;" })
                                @Html.ValidationMessageFor(model => model.External_compainesId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Companytype</label>
                                @Html.EditorFor(model => model.Company_type, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Company_type, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Jobtitle</label>
                                @Html.EditorFor(model => model.Job_title, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Job_title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                <label>@Personnel.Startdate</label>
                                @Html.EditorFor(model => model.Start_date, new { htmlAttributes = new { @class = "form-control StartDate", @id = "Start", @onchange = "Save()", @autocomplete = "off", @type = "date", @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Start_date, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Years</label>
                                @Html.EditorFor(model => model.Years, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "Yearr", @type = "number", @min = 0, @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Years, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Enddate</label>
                                @Html.EditorFor(model => model.End_date, new { htmlAttributes = new { @class = "form-control EndDate", @id = "End", @onchange = "Save2()", @autocomplete = "off", @type = "date", @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.End_date, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label >@Personnel.Months</label>
                                @Html.EditorFor(model => model.Months, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "months", @type = "number", @min = 0, @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Months, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label >@Personnel.Days</label>
                                @Html.EditorFor(model => model.Days, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "Days", @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Days, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-4">
                                <label>@Personnel.Totalsalary</label>
                                @Html.EditorFor(model => model.Total_salary, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Total_salary, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Reasonofleave</label>
                                @Html.DropDownListFor(m => m.Rejection_ReasonsId, new SelectList(ViewBag.Rejection_Reasons, "ID", "Code"), Personnel.SelectReasonofleave, new { @class = "select2", @onchange = "Reasons()", id = "ReasonsId", @style = "margin-bottom: 15px;" })
                                @Html.ValidationMessageFor(model => model.Rejection_ReasonsId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Addedyears</label>
                                @Html.EditorFor(model => model.Added_years, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Added_years, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Approveddate</label>
                                @Html.EditorFor(model => model.Approval_date, new { htmlAttributes = new { @class = "form-control", @id = "Approval_date", @autocomplete = "off", @type = "date", @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Approval_date, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Addedmonths</label>
                                @Html.EditorFor(model => model.Added_months, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Added_months, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                <label>@Personnel.Consideredperiod</label>
                                @Html.EditorFor(model => model.Considered_period, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Considered_period, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Addeddays</label>
                                @Html.EditorFor(model => model.Added_days, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Added_days, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group" hidden>
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="@Personnel.Create" class="btn btn-success" />
                                <a href="@Url.Action("index","Applicant_Previous_Experiences_Profile",new {id=ViewBag.idemp})" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>@Personnel.Back</a>

                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>

    </section>
</div>
@section scripts{}
<script>
    $(document).ready(function () {
        $("#employeeId").attr("disabled", true);
            GetDataById5('@Model.Start_date', "Start");
        GetDataById5('@Model.End_date', "End");
        GetDataById5('@Model.Approval_date', "Approval_date");


    });
</script>
<script>
    function employee() {

        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetApplicant",
            data: { "id": id },
            success: function (result) {

                $("#employeename").val(result.Name);
                $("#codeid").val(result.Applicant_Previous_Experiences_Profile.Code);
                $("#employeeId").prop("readonly", true);
                $("#employeeId").attr("readonly", true);

            },
            error: function () {

                $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }

    function company() {

        var id = $("#companyId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetExternalcompaines",
            data: { "id": id },
            success: function (result) {

                $("#Companyname").val(result.Name);

            },
            error: function () {

                $("#Companyname").val(" ");

            }
        });
    }
    function Reasons() {

        var id = $("#ReasonsId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetRejectionReasons",
            data: { "id": id },
            success: function (result) {

                $("#Reasonsname").val(result.Name);

            },
            error: function () {

                $("#Reasonsname").val(" ");

            }
        });
    }

    function GetDiffDates(StartDate, EndDate) {
        if (StartDate && EndDate) {
            $.get("/Employee_military_service_calling/DifferenceTwoDates?StartDate=" + StartDate + '&EndDate=' + EndDate, function (data, status) {

                if (data) {
                    $("#Days").val(data.DateDiff.Days);
                    $("#months").val(data.DateDiff.Months);
                    $("#Yearr").val(data.DateDiff.Years);
                }
            });
        }
    }

    function Save() {
        debugger


        var StartDate = new Date($(".StartDate").val());
        var EndDate = new Date($(".EndDate").val());
        var from = $(".StartDate").val();
        var to = $(".EndDate").val();

        if (to > from) {
            GetDiffDates(from, to);
        }

    };
    function Save2() {
        debugger
        var StartDate = new Date($(".StartDate").val());
        var EndDate = new Date($(".EndDate").val());

        var from = $(".StartDate").val();
        var to = $(".EndDate").val();
        if (to > from) {
            GetDiffDates(from, to);
        }

    };
    function GetDataById5(date, id) {
        debugger
        var valx = new Date(date);
        var month;
        if ((valx.getMonth() + 1) < 10) {
            month = "0" + (valx.getMonth() + 1).toString();
        }
        else {
            month = date.getMonth() + 1;
        }
        var day = parseInt(valx.getDate());
        if (day < 10) {
            day = "0" + (valx.getDate()).toString();
        }
        else {
            day = valx.getDate();
        }
        var d = valx.getFullYear() + '-' + month + '-' + day;
        $('#' + id).val(d);
    }

</script>
<style>

    /*Create Page*/


    .sec-nav {
        z-index: 9999;
        position: fixed;
        top: 47px;
        background: #faf9f8;
        border-bottom: 1px solid #bebbb8;
        display: block;
        width: 100%;
        left: 50px;
        padding-left: 10px;
        height: 60px;
        line-height: 60px;
    }

        .sec-nav div {
            display: inline-block;
            padding: 5px 8px;
            width: unset;
            border: 0;
            color: #000;
            font-size: 16px;
            height: 60px;
        }

            .sec-nav div:hover {
                background: #eee;
                color: #000;
            }

                .sec-nav div:hover input {
                    color: #000;
                }

    .create-btn {
        border: 0;
        height: 100%;
        background-color: transparent;
    }

    .sec-nav div svg {
        color: #2266e3;
        font-size: 17px;
    }

    .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
        /*float: unset*/
    }

    label {
        text-align: left;
        font: normal normal 400 12px/18px 'Segoe UI',tahoma,sans-serif;
        color: #605e5c;
        display: block;
        margin-bottom: 0;
        max-width: 220px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-weight: 600;
        margin-top: 15px;
    }

    .form-horizontal .form-group {
        margin: 0 !important;
    }

    input {
        height: 35px;
        color: #000;
    }

        input:active {
            border: 1px solid #2266e3;
        }

    .form-group .row > div {
        margin-bottom: 10px;
    }

    .content-wrapper {
        margin-left: 15px;
    }

    .col-md-4 {
        width: 20% !important;
    }
</style>