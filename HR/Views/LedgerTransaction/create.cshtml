@model HR.Controllers.TransactionsPayroll.LedgerTransactionController.HeaderLedger
<script>
    $(document).ready(function () {
        debugger
        GetDataById5('@Model.LedgerTransaction.TransactionDate', "Start");
        GetDataById5('@Model.LedgerTransaction.PostedDate', "End");

    });
    function GetDataById5(date, id) {
        debugger
        var valx = new Date(date);
        var month;
        if ((valx.getMonth() + 1) < 10) {
            month = "0" + (valx.getMonth() + 1).toString();
        }
        else {
            month = date.getMonth() + 1;
        }
        var day = parseInt(valx.getDate());
        if (day < 10) {
            day = "0" + (valx.getDate()).toString();
        }
        else {
            day = valx.getDate();
        }
        var d = valx.getFullYear() + '-' + month + '-' + day;
        $('#' + id).val(d);
    }
    </script>

<script>
    function CountryName() {
        var id = $("#Country").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetPayrollTransactionJournalSetup",
            data: { "id": id },
            success: function (result) {

                //$("#countryname").val(result.AccountName);
            },
            error: function () {
                $("#countryname").val(" ");
            }
        });
    }
    CountryName();

    function CountryNamess() {
        var id = $("#Countryss").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetCurrency",
            data: { "id": id },
            success: function (result) {

            },
            error: function () {
                $("#countrynamess").val(" ");
            }
        });
    }
    CountryNamess();

</script>
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
    //  Layout = "~/Views/Shared/View.cshtml";
}
@using HR.Resource;
<div class="panel panel-primary" data-collapsed="0">
    <div class="panel-body">
        @using (Html.BeginForm("Create", "LedgerTransaction", FormMethod.Post, new { id = "dd", enctype = "multipart/form-data" }))
        {
            <div class="sec-nav">
                <div><i class="far fa-save"></i><button type="submit" class="create-btn" />@organ.create</div>
                <div><i class="fas fa-plus"></i><a href="@Url.Action("create", "LedgerTransaction")" class="create-btn">@pers_2.new_</a></div>
                <div>
                    <i class="far fa-trash-alt"></i><input type="button" href="@Url.Action("index","LedgerTransaction")" class="create-btn" value=@organ.delete style="
    background-color: transparent" ; />
                </div>
                <div><i class="fas fa-undo"></i><a style="" href="@Url.Action("index", "LedgerTransaction")" class="create-btn"> @pers_2.Back</a></div>
            </div>
            <hr /><hr /><hr />
            <section class="content-header">
                <h1>
                    @Payroll.CreateLedgerTransactions
                </h1>
            </section>
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @if (TempData["Message"] != null)
                {
                    <div class="alert alert-danger alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        @TempData["Message"]
                    </div>
                }
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">

                    <div class="col-md-4">
                        <label style="color:red">
                            @Payroll.JournalNumber
                        </label>
                        @Html.EditorFor(model => model.LedgerTransaction.JournalNumber, new { htmlAttributes = new { @readonly = true, @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LedgerTransaction.JournalNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label style="color:red">@Payroll.JournalDescription </label>
                        @Html.EditorFor(model => model.LedgerTransaction.JournalDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LedgerTransaction.JournalDescription, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label> @Payroll.JournalType </label>
                        @Html.EnumDropDownListFor(model => model.JournalType, new { @class = "select2" })
                        @Html.ValidationMessageFor(model => model.JournalType, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label style="color:red">@Payroll.Journalname</label>
                        @Html.DropDownListFor(m => m.LedgerTransaction.JournalName, new SelectList(ViewBag.PayrollTransactionJournalSetup, "ID", "Code"), Payroll.SelectJournalname, new { @class = "select2", @onchange = "CountryName()", id = "Country" })
                        @Html.ValidationMessageFor(model => model.LedgerTransaction.JournalName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label style="color:red">@Payroll.CurrenyCode</label>
                        @Html.DropDownListFor(m => m.LedgerTransaction.Currency_Code, new SelectList(ViewBag.Currency, "ID", "Code"), Payroll.SelectCurrenyCode, new { @class = "select2", @onchange = "Type_Code()", id = "Type" })
                        @Html.ValidationMessageFor(model => model.LedgerTransaction.Currency_Code, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-4">
                        <label style="color:red">@Payroll.Transactiondate</label>
                        @Html.EditorFor(model => model.LedgerTransaction.TransactionDate, new { htmlAttributes = new { @class = "form-control  StartDate yy", @id = "Start", @type = "date", @onchange = "Saves2()" } })
                        @Html.ValidationMessageFor(model => model.LedgerTransaction.TransactionDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label style="color:red">@Payroll.PostedDate</label>
                        @Html.EditorFor(model => model.LedgerTransaction.PostedDate, new { htmlAttributes = new { @class = "form-control  EndDate yyy", @id = "End", @type = "date", @onchange = "Saves()", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.LedgerTransaction.PostedDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Payroll.Posted </label>
                        @Html.CheckBoxFor(model => model.LedgerTransaction.Posted, new { disabled = "disabled", htmlAttributes = new { @class = "form-control", @readonly = "readonly", @display = "display" } })
                        @Html.ValidationMessageFor(model => model.LedgerTransaction.Posted, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Payroll.ERPJournalNumber </label>
                        @Html.EditorFor(model => model.LedgerTransaction.ERP_JournalNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LedgerTransaction.ERP_JournalNumber, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>

        }
    </div>

</div>
@section scripts{}
<script>
    $(function () {
        debugger
        GetDataById4('@Model.LedgerTransaction.TransactionDate', "End");

          function Saves2() {
                  debugger
              var FullName = $("#Start").val();
              $("#End").val(FullName);
              }
        Saves2();

          });
        function GetDataById4(date, id) {
            debugger
            var valx = new Date(date);
            var month;
            if ((valx.getMonth() + 1) < 10) {
                month = "0" + (valx.getMonth() + 1).toString();
            }
            else {
                month = date.getMonth() + 1;
            }
            var day = parseInt(valx.getDate());
            if (day < 10) {
                day = "0" + (valx.getDate()).toString();
            }
            else {
                day = valx.getDate();
            }
            var d = valx.getFullYear() + '-' + month + '-' + day;
            $('#' + id).val(d);
        }
    function Saves2() {
        debugger
        var FullName = $("#Start").val();
        $("#End").val(FullName);
    }
    Saves2();

</script>
<style>

    /*Create Page*/


    .sec-nav {
        z-index: 9999;
        position: fixed;
        top: 47px;
        background: #faf9f8;
        border-bottom: 1px solid #bebbb8;
        display: block;
        width: 100%;
        left: 50px;
        padding-left: 10px;
        height: 60px;
        line-height: 60px;
    }

        .sec-nav div {
            display: inline-block;
            padding: 5px 8px;
            width: unset;
            border: 0;
            color: #000;
            font-size: 16px;
            height: 60px;
        }

            .sec-nav div:hover {
                background: #eee;
                color: #000;
            }

                .sec-nav div:hover input {
                    color: #000;
                }

    .create-btn {
        border: 0;
        height: 100%;
        background-color: transparent;
    }

    .sec-nav div svg {
        color: #2266e3;
        font-size: 17px;
    }

    .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
        /*float: unset*/
    }

    label {
        text-align: left;
        font: normal normal 400 12px/18px 'Segoe UI',tahoma,sans-serif;
        color: #605e5c;
        display: block;
        margin-bottom: 0;
        max-width: 220px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-weight: 600;
        margin-top: 15px;
    }

    .form-horizontal .form-group {
        margin: 0 !important;
    }

    input {
        height: 35px;
        color: #000;
    }

        input:active {
            border: 1px solid #2266e3;
        }

    .form-group .row > div {
        margin-bottom: 10px;
    }

    .content-wrapper {
        margin-left: 15px;
    }

    .col-md-4 {
        width: 20% !important;
        margin-bottom: 15px;
    }

    .col-md-3 {
        width: 20% !important;
        margin-bottom: 15px;
    }
</style>
