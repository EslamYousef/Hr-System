@model HR.Models.the_states

@using HR.Resource;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}

@Scripts.Render("~/bundles/jqueryval")
<div class="content-wrapper">

    <section class="content-header">
        <h1>
            @Basic.edit_state
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Edit", "State", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        <hr />
                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                       

                        @*<div class="form-group">
                            <label class="control-label col-md-2">Country CODE</label>
                            <div class="col-md-4">
                                @Html.DropDownList(" ", new SelectList(ViewBag.Country, "ID", "Code"), new { @class = "select2", @onchange = "CountryName()", @id = "Country" })
                                <input type="text" value=" " class="form-control" id="countryname" disabled />
                            </div>
                        </div>*@
                        <div class="form-group">
                            <label class="control-label col-md-2">@Basic.Country</label> 
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.CountryID, new SelectList(ViewBag.country, "ID", "Code"),Basic.Country, new { @class = "select2", @onclick = "CountryName()", @id = "Country", required = "required" })
                                @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                                <input type="text" value=" " class="form-control" id="countryname" disabled />
                            </div>

                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Basic.Region</label> 
                             <div class="col-md-4">
                                @Html.DropDownListFor(m => m.Areaid, new SelectList(ViewBag.area, "ID", "Code"),Basic.Region,new { @class = "select2", @id = "Area", @onclick = "getareaname()" , required = "required" })
                                @Html.ValidationMessageFor(model => model.Areaid, "", new { @class = "text-danger" })
                                <input type="text" value=" " class="form-control" id="Areaname" disabled />
                            </div>
                            <div class="col-md-3" style="color:black">
                                <button type="submit" id="btnSubmit" name="Command" value="Submit" class="btn btn-success">@Basic.County</button>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Basic.code</label> 
                        
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @readonly = true, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Basic.name</label> 
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                          
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Basic.description</label> 
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value=@Basic.Edit class="btn btn-success" />
                                <a href="@Url.Action("index","State")" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>@Basic.Back</a>

                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>

    </section>
</div>

<script>
 
  function getareaname() {
       
      
      var id = $("#Area").val();
       
      $.ajax({
          type: "post",
          url: "/Helper/getarea",
          data: { "id": id },
          success: function (result) {
              {
                  $("#Areaname").val(result.Name);
              }
          },
          error: function () {
              $("#Areaname").val(" ");
          }
      });

  }
  function fullarea(id) {
      $.ajax({
          type: "post",
          url: "/Helper/getareabycountry",
          data: { "id": id ,"flag":"0"},
          success: function (result) {
              {
                   
                  $('#Areaname').empty();
                  var finalresult = "<option value='0'>  Select Region  </option>";
                  $.each(result, function (key, value) {
                          finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
                  });
                  $("#Area").html(finalresult);
                  $("#Area").select2("val", "0");
              }
          },
          error: function () {
          }
      });
  }
  function CountryName() {
       
      var id = $("#Country").val();
      var h = $('Area').val();
      $('#Area').empty();
      $("#Area").select2("val", "");
      $("#Areaname").val(" ");

      $.ajax({
          type: "post",
          url: "/Helper/GetCountry",
          data: { "id": id },
          success: function (result) {
               
             $("#countryname").val(result.Name);
                fullarea(result.ID);
          },
          error: function () {
               
              $("#countryname").val(" ");
          }
      });
  }


 
     
    var id = $("#Country").val();
    $.ajax({
        type: "post",
        url: "/Helper/GetCountry",
        data: { "id": id },
        success: function (result) {
             
            $("#countryname").val(result.Name);
        },
        error: function () {
             
            $("#countryname").val(" ");
        }
    });
    if (id != null) {
        $("#Area").removeAttr("disabled");
        var ii = $("#Area").val();
         
        $.ajax({
            type: "post",
            url: "/Helper/getarea",
            data: { "id": ii },
            success: function (result) {
                {
                    $("#Areaname").val(result.Name);
                }
            },
            error: function () {
                $("#Areaname").val(" ");
            }
        });
    }
  
</script>

@section scripts{}