@model HR.Models.job_level_setup
@using HR.Resource;




@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}
<script>
    function CountryName1() {
         
        var id = $("#country1").val();
        $.ajax({
            type: "post",
            url: "/Helper/getjobclass",
            data: { "id": id },
            success: function (result) {
                 
                $("#countryname1").val(result.Name);
            },
            error: function () {
                 
                $("#countryname1").val(" ");
            }
        });
    }
    function CountryName2() {
         
        var id = $("#country2").val();
        $.ajax({
            type: "post",
            url: "/Helper/getjobgrade",
            data: { "id": id },
            success: function (result) {
                 
                $("#countryname2").val(result.Name);
            },
            error: function () {
                 
                $("#countryname2").val(" ");
            }
        });
    }
    function CountryName3() {
         
        var id = $("#country3").val();
        $.ajax({
            type: "post",
            url: "/Helper/getjobreport",
            data: { "id": id },
            success: function (result) {
                 
                $("#countryname3").val(result.Name);
            },
            error: function () {
                 
                $("#countryname3").val(" ");
            }
        });
    }
    CountryName3();
    CountryName2();
    CountryName1();


    function addd()
    {

         
        var country = $("#country").val();
        var num = $("#num").val();
        if (country == "") {
             
            alert("Please enter Education !");

        }
        else if (num == "") {
             
            alert("Please enter Number Of years !");

        }
        else
        {

            $.ajax({
                type:"post",
                url: "/Helper/Get_Education",
                data: { "id": country },
                success: function (result) {
                    if (result == false)
                    {

                         

                    }
                    else
                    {
                         
                        var tr =
               "<tr id='tr'>" + "<td hidden><input  style='margin-bottom: 1em;' name='codeid' value='" + result.ID + "' readonly='readonly' /></td>" +
               "<td class='col-md-0'><input  style='margin-bottom: 1em;' name='codeee' value='" + result.Code + "' readonly='readonly' /></td>" +
               "<td style='width:30px' ><input style='width:120px' name='Description'  value='" + result.Name + "' readonly='readonly' /></td>" +
               "<td class='col-md-0'><input  style='margin-bottom: 1em;' name='num' value='" + num + "' readonly='readonly' /></td>" +
               "<td><input type='button' value=@organ.remove class='remove btn btn-danger' onclick='remove($(this))' /></td></tr>";
                        $("#add1").append(tr);
                        $("#num").val(" ");
                        $("#country").select2("val", "");
                    }


                },
                error: function()
                {
                     
                }

            });


        }

    }
    function remove(thi)
    {
         
        thi.parent().parent().remove();
        //thi.parent().parent().parent().remove(removed);


    }
</script>

@Scripts.Render("~/bundles/jqueryval")
<div class="content-wrapper">

   

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Edit", "job_level_setup", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="sec-nav">
                        <div><i class="far fa-save"></i><button type="submit" class="create-btn">@organ.Save </button></div>
                        <div><i class="fas fa-plus"></i><a style="" href="@Url.Action("create", "job_level_setup")" class="create-btn"> @pers_2.new_</a></div>
                        <div><i class="far fa-trash-alt"></i><input type="button" class="create-btn" value=@organ.delete /></div>

                        <div><i class="fas fa-undo"></i><a style="" href="@Url.Action("index", "job_level_setup")" class="create-btn"> @pers_2.Back</a></div>

                        <div><i class="far fa-save"></i><button type="submit" id="btnSubmit" name="Command" value="Submit2" class="create-btn">@organ.specialallwance </button></div>
                        <div><i class="far fa-save"></i><button type="submit" id="btnSubmit" name="Command" value="Submit" class="create-btn">@organ.joblevellinkdetoorganizationunittipes </button></div>



                    </div>
                    <div class="form-horizontal">
                        @Html.HiddenFor(m => m.ID);
                       
                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button"  class="close " data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }
                        <section style="margin-top: 40px" class="content-header">
                            <h1>
                                @organ.Editjoblevel
                            </h1>
                        </section>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                         
                            <div class="col-md-4">
                                <label style="color:red">
                                    @organ.code
                                </label>
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new {@readonly=true, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label style="color:red">
                                    @organ.name
                                </label>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>
                                    @organ.description
                                </label>
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label style="color:red">
                                    @organ.Job_level_class__ID
                                </label>

                                @Html.DropDownListFor(m => m.Job_level_class__ID, new SelectList(ViewBag.level_code, "ID", "Code"), organ.selectjoblevelclass, new { @class = "select2", @onchange = "CountryName1()", id = "country1" })
                                @Html.ValidationMessageFor(model => model.Job_level_class__ID, "", new { @class = "text-danger" })
                                <input type="hidden" value=" " class="form-control" id="countryname1" disabled />

                            </div>
                            <div class="col-md-4">
                                <label style="color:red">
                                    @organ.Job_level_gradeI__D
                                </label>
                                @Html.DropDownListFor(m => m.Job_level_gradeI__D, new SelectList(ViewBag.level_grade, "ID", "Code"), organ.selectjoblevelgrade, new { @class = "select2", @onchange = "CountryName2()", id = "country2" })
                                @Html.ValidationMessageFor(model => model.Job_level_gradeI__D, "", new { @class = "text-danger" })
                                <input type="hidden" value=" " class="form-control" id="countryname2" disabled />

                            </div>
                        </div>
                        <div class="form-group">
                           
                            <div class="col-md-4">
                                <label>
                                    @organ.report_job_levelID
                                </label>

                                @Html.DropDownListFor(m => m.report_job_levelID, new SelectList(ViewBag.report, "ID", "Code"), organ.selectjobreport, new { @class = "select2", @onchange = "CountryName3()", id = "country3" })
                                @Html.ValidationMessageFor(model => model.report_job_levelID, "", new { @class = "text-danger" })
                                <input type="hidden" value=" " class="form-control" id="countryname3" disabled />
                            </div>


                        </div>
                        <div class="form-group">
                            <div class="col-sm-4">
                                <label>
                                    @organ.max_monthly_allowance
                                </label>
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>

                                    @Html.EditorFor(model => model.max_monthly_allowance, new { htmlAttributes = new { @class = "form-control size-1", value = "1" } })
                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label>
                                    @organ.min_basic_salary
                                </label>
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.min_basic_salary, new { htmlAttributes = new { @class = "form-control size-1", value = "1" } })


                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label>
                                    @organ.min_working_years
                                </label>
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.min_working_years, new { htmlAttributes = new { @class = "form-control size-1", value = "1" } })


                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <div class="col-sm-4">
                                <label>
                                    @organ.mid_basic_salary
                                </label>
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.mid_basic_salary, new { htmlAttributes = new { @class = "form-control size-1", value = "1" } })


                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label>
                                    @organ.max_incentive_amount
                                </label>
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.max_incentive_amount, new { htmlAttributes = new { @class = "form-control size-1", value = "1" } })


                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label>
                                    @organ.max_basic_salary
                                </label>
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.max_basic_salary, new { htmlAttributes = new { @class = "form-control size-1", value = "1" } })


                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                          
                            <div class="col-sm-4">
                                <label>
                                    @organ.max_incentive_percentage
                                </label>
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.max_incentive_percentage, new { htmlAttributes = new { @class = "form-control size-1", value = "1" } })


                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label>
                                    @organ.max_annual_increase_percentage
                                </label>
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.max_annual_increase_percentage, new { htmlAttributes = new { @class = "form-control size-1", value = "1" } })


                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <label>
                                    @organ.dedicated_allowence
                                </label>
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.dedicated_allowence, new { htmlAttributes = new { @class = "form-control size-1", value = "1" } })

                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-4">
                                <label>
                                    @organ.representation_allowance_value
                                </label>
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.representation_allowance_value, new { htmlAttributes = new { @class = "form-control size-1", value = "1", min = "0" } })
                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label>
                                    @organ.Calculateaddedexperienceyears
                                </label>
                                @Html.CheckBoxFor(m => m.Calculate_added_experience_years, new { @class = "icheck", id = "minimal-checkbox-1" })

                            </div>
                            <div class="col-md-4">
                                <label>
                                    @organ.Calculateaddedmilitaryyears
                                </label>
                                @Html.CheckBoxFor(m => m.Calculate_added_military_years, new { @class = "icheck", id = "minimal-checkbox-2" })

                            </div>
                            <div class="col-md-4">
                                <label>
                                    @organ.Calculateextraqualificationyears
                                </label>
                                @Html.CheckBoxFor(m => m.Calculate_extra_qualification_years, new { @class = "icheck", id = "minimal-checkbox-3" })

                            </div>
                        </div>
                        <div class="form-group">
                           
                            <div class="col-md-4">
                                <label>
                                    @organ.Notes
                                </label>
                                @Html.TextAreaFor(model => model.Notes, 5, 50, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div style="margin-top:25px" class="form-group">

                            <div class="col-md-4">
                                @Html.DropDownList("eduction", new SelectList(ViewBag.eduction, "ID", "Code"), organ.selecteduction, new { @class = "select2", id = "country" })

                            </div>
                        </div>
                        <div class="form-group">
                         
                           
                            <div class="col-md-4">
                                <label><span>@organ.NumberOfEducation</span></label>
                                <input id="num" start="1" type="number" min="1" />
                            </div>
                            <div class="col-md-4">
                                <input type="button" onclick="addd()" value=@organ.addeducationlevel class="btn btn-success" />
                            </div>
                            
                        </div>


                        <table class="table table-bordered">
                            <thead>
                                <tr>


                                    <th>
                                        <label class="control-label col-md-2">@organ.code</label>
                                    </th>
                                    <th>
                                        <label class="control-label col-md-2">@organ.description</label>
                                    </th>
                                    <th>
                                        <label class="control-label">@organ.Numberofyears</label>
                                    </th>
                                    <th>

                                    </th>
                                </tr>
                            </thead>
                            <tbody id="add1">
                                @if (Model.job_level_education != null)
                                {
                                for (var item = 0; item < Model.job_level_education.Count(); item++)
                                {

                                <tr>
                                    <td hidden>
                                        <input id="CODE11" style="margin-bottom: 1em;" name="codeid" type="Text" value=@Model.job_level_education[item].Educate_Title.ID radonly />
                                    </td>
                                    <td >
                                        <input  readonly  id="CODE11" style="margin-bottom: 1em;" name="codeee" type="Text" value=@Model.job_level_education[item].Educate_Title.Code radonly />
                                    </td>
                                   
                                    <td >
                                        <input  readonly id="answer11" style="margin-bottom: 1em;" name="Description" value=@Model.job_level_education[item].Educate_Title.Name type="Text" />
                                    </td>
                                   
                                    <td >
                                        <input readonly id="question11" style="margin-bottom: 1em;" value=@Model.job_level_education[item].number_of_years_requires name="num" type="Text" />
                                    </td>
                                    <td >
                                        <input type="button" value="Cancel" class="remove btn btn-danger" onclick="remove($(this))" />
                                    </td>
                                </tr>
                                }
                                    }
                                }
                            </tbody>
                        </table>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">

                                <button type="submit" id="btnSave" class="btn btn-success" name="Command" value=@organ.edit >
                                    @organ.Save
                                </button>
                                <a href="@Url.Action("index","job_level_setup")" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>@organ.Back</a>

                            </div>
                        </div>

                    </div>
                }

            </div>

        </div>

    </section>
</div>




@section scripts{}

<style>
    /*Create Page*/


    .sec-nav {
        z-index: 9999;
        position: fixed;
        top: 47px;
        background: #faf9f8;
        border-bottom: 1px solid #bebbb8;
        display: block;
        width: 100%;
        left: 50px;
        padding-left: 10px;
        height: 60px;
        line-height: 60px;
    }

        .sec-nav div {
            display: inline-block;
            padding: 5px 8px;
            width: unset;
            border: 0;
            color: #000;
            font-size: 16px;
            height: 60px;
        }

            .sec-nav div:hover {
                background: #eee;
                color: #000;
            }

                .sec-nav div:hover input {
                    color: #000;
                }

    .create-btn {
        border: 0;
        height: 100%;
        background-color: transparent;
    }

    .sec-nav div svg {
        color: #2266e3;
        font-size: 17px;
    }

    .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
        /*float: unset*/
    }

    label {
        text-align: left;
        font: normal normal 400 12px/18px 'Segoe UI',tahoma,sans-serif;
        color: #605e5c;
        display: block;
        margin-bottom: 0;
        max-width: 220px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-weight: 600;
        margin-top: 15px;
    }

    .col-md-4 {
        width: 20% !important;
    }

    .form-horizontal .form-group {
        margin: 0 !important;
    }

    input {
        height: 35px;
        color: #000;
    }

        input:active {
            border: 1px solid #2266e3;
        }

    .form-group .row > div {
        margin-bottom: 10px;
    }

    .content-wrapper {
        margin-left: 15px;
    }

    h1 {
        margin-top: 40px;
    }
</style>   