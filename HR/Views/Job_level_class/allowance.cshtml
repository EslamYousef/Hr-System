@model HR.Models.Special_Allwonce_History

@{
    ViewBag.Title = "allowance";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}

@Scripts.Render("~/bundles/jqueryval")
<div class="content-wrapper">

    <section class="content-header">
        <h1>
            Special Allwonce History
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("allowance", "Job_level_class", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m => m.ID)
                        @Html.HiddenFor(m => m.type_allowance)
                        @Html.HiddenFor(m => m.selectedID)
                        <div class="form-group">
                            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-sm-3">
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control size-1", value = "0", @min = "0" } })

                                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                              
                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>



                            @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-sm-3">
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.Month, new { htmlAttributes = new { @class = "form-control size-1", value = "0", @min = "0" } })

                                    @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                              
                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Percentage, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-sm-3">
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.Percentage, new { htmlAttributes = new { @class = "form-control size-1", value = "0", @min = "0" } })

                                    @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })

                                    <button type="button" class="btn btn-default">+</button>
                                </div>
                            </div>



                            @Html.LabelFor(model => model.Allowance_amount, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-sm-3">
                                <!-- Spinner Markup -->
                                <div class="input-spinner">
                                    <button type="button" class="btn btn-default">-</button>
                                    @Html.EditorFor(model => model.Allowance_amount, new { htmlAttributes = new { @class = "form-control size-1", value = "0", @min = "0" } })
                                    @Html.ValidationMessageFor(model => model.Allowance_amount, "", new { @class = "text-danger" })


                                    <button type="button" class="btn btn-default">+</button>

                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                                @Html.LabelFor(model => model.pervious_basic, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-sm-3">
                                    <!-- Spinner Markup -->
                                    <div class="input-spinner">
                                        <button type="button" class="btn btn-default">-</button>
                                        @Html.EditorFor(model => model.pervious_basic, new { htmlAttributes = new { @class = "form-control size-1", value = "0", @min = "0" } })

                                        @Html.ValidationMessageFor(model => model.pervious_basic, "", new { @class = "text-danger" })
                              
                                        <button type="button" class="btn btn-default">+</button>
                                    </div>
                                </div>



                                @Html.LabelFor(model => model.new_basic_sallary, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-sm-3">
                                    <!-- Spinner Markup -->
                                    <div class="input-spinner">
                                        <button type="button" class="btn btn-default">-</button>
                                        @Html.EditorFor(model => model.new_basic_sallary, new { htmlAttributes = new { @class = "form-control size-1", value = "0", @min = "0" } })
                                        @Html.ValidationMessageFor(model => model.new_basic_sallary, "", new { @class = "text-danger" })
                                   
                                        <button type="button" class="btn btn-default">+</button>
                                    </div>
                                </div>
                         </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" id="btnSave" class="btn btn-success" name="Command" value="Save">Submit</button>
                               @if (Model.type_allowance == HR.Models.Infra.type_allowance.job_level_class)
                               {
                                    <a href="@Url.Action("index", "Job_level_class")" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>Back</a>
                               }
                               else if (Model.type_allowance == HR.Models.Infra.type_allowance.job_levle_grade)
                                {
                                    <a href="@Url.Action("index", "Job_level_grade")" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>Back</a>
                                }
                                else if (Model.type_allowance == HR.Models.Infra.type_allowance.job_level_card)
                                {
                                    <a href="@Url.Action("index", "job_level_setup")" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>Back</a>
                                }
                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>

    </section>
</div>

<script>
  $(function () {
      CKEDITOR.replace('Description');
  });
</script>

<script>
    function CountryName()
    {
        debugger
        var id= $("#Country").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetCountry",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#countryname").val(result.Name);
            },
            error: function () {
                debugger
                $("#countryname").val(" ");
            }
        });
    }
    CountryName();
</script>

@section scripts{}