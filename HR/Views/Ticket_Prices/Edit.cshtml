@model HR.Models.TicketPrice
@using HR.Resource;

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}


@Scripts.Render("~/bundles/jqueryval")
<div class="content-wrapper">

    <section class="content-header">
        <h1>
           @Basic.edit_Tichet_price
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Edit", "Ticket_Prices", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <label class="control-label col-md-2">@Basic.class_type</label>
                            <div class="col-md-4">
                                @Html.EnumDropDownListFor(m => m.classtype, new { @class = "select2"})
                                @Html.ValidationMessageFor(model => model.classtype, "", new { @class = "text-danger" })
                              
                            </div>
                          
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Basic.from_air_port</label>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.From_air_port_Idd, new SelectList(ViewBag.airport, "ID", "Code"), new { @class = "select2", @onchange = "CountryName()", @id = "Country" })
                                @Html.ValidationMessageFor(model => model.From_air_port_Idd, "", new { @class = "text-danger" })
                                <input type="hidden" value=" " class="form-control" id="countryname" disabled />
                            </div>
                           
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Basic.to_air_port</label>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.To_air_port_Idd, new SelectList(ViewBag.airport, "ID", "Code"), new { @class = "select2", @onchange = "CountryName1()", @id = "Country1" })
                                @Html.ValidationMessageFor(model => model.To_air_port_Idd, "", new { @class = "text-danger" })
                                <input type="hidden" value=" " class="form-control" id="countryname1" disabled />
                            </div>
                            
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Basic.from_date</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.From_Date, new { htmlAttributes = new {  @class = "form-control", @autocomplete = "off"   , id = "datefrom",@type="date" } })
                                @Html.ValidationMessageFor(model => model.From_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Basic.to_date</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.TO_Date, new { htmlAttributes = new { @class = "form-control" , @autocomplete = "off", id="dateto", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.TO_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Basic.price</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control",@type="number",@min="1" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" id="btnSave" class="btn btn-success" name="Command" value="Save">@Basic.Edit</button>
                                <a href="@Url.Action("index","Ticket_Prices")" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>@Basic.Back</a>
                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>

    </section>
</div>


<script>
    $(function(){
      GetDataById2('@Model.From_Date', "datefrom");
        GetDataById2('@Model.TO_Date', "dateto");
    });

    function GetDataById2(date, id) {
        debugger
        var valx = new Date(date);
        var month;
        if ((valx.getMonth() + 1) < 10) {
            month = "0" + (valx.getMonth() + 1).toString();
        }
        else {
            month = date.getMonth() + 1;
        }
        var day = parseInt(valx.getDate());
        if (day < 10) {
            day = "0" + (valx.getDate()).toString();
        }
        else {
            day = valx.getDate();
        }
        var d = valx.getFullYear() + '-' + month + '-' + day;
        $('#' + id).val(d);
    }
    function CountryName()
    {
        $("#countryname").val(" ");

        var id= $("#Country").val();
        $.ajax({
            type: "post",
            url: "/Helper/Getairport",
            data: { "id": id },
            success: function (result) {

                $("#countryname").val(result.Name);
            },
            error: function () {

                $("#countryname").val(" ");
            }
        });
    }
    function CountryName1() {

        $("#countryname1").val(" ");
        var id = $("#Country1").val();
        $.ajax({
            type: "post",
            url: "/Helper/Getairport",
            data: { "id": id },
            success: function (result) {

                $("#countryname1").val(result.Name);
            },
            error: function () {

                $("#countryname1").val(" ");
            }
        });
    }
    CountryName();
    CountryName1();

</script>

@section scripts{}