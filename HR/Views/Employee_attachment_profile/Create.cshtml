@model HR.Models.Employee_attachment_profile

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}

@Scripts.Render("~/bundles/jqueryval")


<div class="content-wrapper">

    <section class="content-header">
        <h1>
            Create Employee Attachment Profile
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Create", "Employee_attachment_profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.Employee_ProfileId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.Employee_ProfileId, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), "Select Employee", new { @readonly = true, @class = "select2", @onchange = "employee()", id = "employeeId" })
                                @Html.ValidationMessageFor(model => model.Employee_ProfileId, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-6" style="color:black">
                                <button type="submit" id="btnSubmit" name="Command" value="Submit" class="btn btn-success">Employee Profile</button>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", id = "codeid", @readonly = true, @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.Is_copy, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-3">
                                @Html.CheckBoxFor(model => model.Is_copy, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Is_copy, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DocumentsId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.DocumentsId, new SelectList(ViewBag.Documents, "ID", "Code"), "Select Document", new { @readonly = true, @class = "select2", @onchange = "employee2()", id = "employeeId2" })
                                @Html.ValidationMessageFor(model => model.DocumentsId, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.Is_required, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-3">
                                @Html.CheckBoxFor(model => model.Is_required, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Is_required, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DocumentGroup, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.DocumentGroup, new { htmlAttributes = new { @class = "form-control", id = "groupdocument", @readonly = true, @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.DocumentGroup, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Related_to, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EnumDropDownListFor(model => model.Related_to, new { @class = "select2", @autocomplete = "off" })

                                @Html.ValidationMessageFor(model => model.Related_to, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Issued_place, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Issued_place, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                                @Html.ValidationMessageFor(model => model.Issued_place, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Issue_date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Issue_date, new { htmlAttributes = new { autocomplete = "off", @class = "form-control datepicker", @id = "dateto" } })
                                @Html.ValidationMessageFor(model => model.Issue_date, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.Expiry_date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Expiry_date, new { htmlAttributes = new { autocomplete = "off", @class = "form-control datepicker", @id = "dateto" } })
                                @Html.ValidationMessageFor(model => model.Expiry_date, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Reference_number, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Reference_number, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Reference_number, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Document_number, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Document_number, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Document_number, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Document_description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Document_description, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Document_description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Document_status, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EnumDropDownListFor(model => model.Document_status, new { @class = "select2", @autocomplete = "off" })

                                @Html.ValidationMessageFor(model => model.Document_status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <strong class="control-label col-md-2">Attachments : </strong> <input type="file" name="MyItem" required /><br />

                        <div class="form-group">
                            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.TextAreaFor(model => model.Comments, 4, 60, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-success" />
                                <a href="@Url.Action("index","Employee_attachment_profile",new {id=ViewBag.idemp })" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>Back</a>
                            </div>
                        </div>
                    </div>


                }

            </div>

        </div>

    </section>
</div>

@section scripts{}

@*<script>
        $(document).ready(function () {
            $("#employeeId").attr("disabled", true);

        });
    </script>*@






<script>
    function employee() {
        debugger
        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#employeename").val(result.Name);
                $("#codeid").val(result.Employee_family_profile.Code);
                $("#employeeId").prop("readonly", true);
                $("#employeeId").attr("readonly", true);

            },
            error: function () {
                debugger
                $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }
    function employee2() {
        debugger
        var id = $("#employeeId2").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetDocuments",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#groupdocument").val(result.Document_Group.Name);
                //        $("#codeid").val(result.Employee_Positions_Profile.Code);
                //   $("#employeeId").prop("readonly", true);
                //     $("#employeeId").attr("readonly", true);

            },
            error: function () {
                debugger
                $("#groupdocument").val(" ");

            }
        });
    }
</script>
