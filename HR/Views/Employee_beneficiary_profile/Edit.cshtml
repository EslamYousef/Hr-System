@model HR.Models.Employee_beneficiary_profile
@using HR.Resource;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}


@Scripts.Render("~/bundles/jqueryval")
<link href="~/Content/StyleTableBeneficiary.css" rel="stylesheet" />

<script>
     
    $(function () {
      
        $("#ss").click(function () {
             
            var Family_profile = $("#employeeId3").val();
            var Beneficiary=$("#employeeId2").val();
            $.ajax({
                type: "post",
                url: "/Helper/getfamilybyemployee",
                data: { "id": Family_profile },
                success: function (result) {
                    debugger

                    if (Family_profile != "" && Beneficiary != "") {
                        $("#tb-family").show();
                        var T = "";
                        T = "<tr><td><input type='text' readonly name='Family_profile_No2' value='" + result.Code + "'/></td><td><input type='text' readonly name='Family_name' value='" + result.Name + "'/></td><td><input type='number' name='Percentage' value='0'  /></td><td><input type='button' class='del-btn tb-btn' value='@Personnel.Delete'/></td></tr>"
                        $("#tb-family").append(T)
                    }
                }
            })
            $("#tb-family").on('click', '.del-btn', function () {
               $(this).closest('tr').remove();

                //var trcount = $(this).closest('tbody')[0].childElementCount;
                //if (trcount > 0) {
                //    $(this).closest('tr').remove();
                //    // condition
                //    trcount == 1 ? trcount-- : trcount;
                //    // when trcount or row Equal 0 , Empty tfoot
                //    if (trcount == 0) {
                //        $("#fa")[0].innerText = "";
                //        $("#na")[0].innerText = "";
                //        $("#per")[0].innerText = "";
                //        $("#De")[0].innerText = "";
                //    }
                //}
            })



        })
    });

</script>

<div class="content-wrapper">

 

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Edit", "Employee_beneficiary_profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="sec-nav">
                        <div><i class="far fa-save"></i><button type="submit" class="create-btn" />@organ.Save</div>
                        <div><i class="fas fa-plus"></i><a href="@Url.Action("create", "Employee_beneficiary_profile",new {id=ViewBag.idemp})" class="create-btn">@pers_2.new_</a></div>
                        <div><i class="far fa-trash-alt"></i><input type="button" href="@Url.Action("index","Employee_beneficiary_profile")" class="create-btn" value=@organ.delete  style="background-color: transparent;"/></div>
                        <div><i class="fas fa-undo"></i><a style="" href="@Url.Action("index", "Employee_beneficiary_profile",new {id=ViewBag.idemp})" class="create-btn"> @pers_2.Back</a></div>
                        <div><i class="far fa-save"></i> <button type="submit" id="btnSubmit" name="Command" value="Submit" class="create-btn" />@Personnel.EmployeeProfile</div>
                    </div>
                    <hr /><hr /><hr />
                    <section class="content-header">
                        <h1>
                            @Personnel.EditEmployeeBeneficiaryProfile
                        </h1>
                    </section>
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }
                        <input name="Family_profile_No2" hidden />
                        <input name="Family_name" hidden />
                        <input name="Percentage" hidden />
                        @Html.HiddenFor(m => m.ID);
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div>

                        <div class="form-group">
                            <div class="col-md-4">
                                <label style="color:red">@Personnel.EmployeeName</label>
                                @Html.DropDownListFor(m => m.Employee_ProfileId, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), @Personnel.SelectEmployee, new { @readonly = true, @class = "select2", @onchange = "employee()", id = "employeeId" })
                                @Html.ValidationMessageFor(model => model.Employee_ProfileId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label style="color:red">@Personnel.BeneficiaryProfileNo</label>
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Legatee</label>
                                @Html.CheckBoxFor(model => model.Legatee, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Legatee, "", new { @class = "text-danger" })
                            </div>
                           
                            <div class="col-md-4">
                                <label>
                                    <span>@Personnel.Benefittypecode</span>
                                </label>
                                @Html.DropDownList("f", new SelectList(ViewBag.Subscription_Syndicate, "ID", "Code"), Personnel.SelectSubscription, new { @class = "select2", @onchange = "employee2()", id = "employeeId2" })
                            </div>
                       
                            <div class="col-md-3">
                                <label>
                                    <span>@Personnel.FamilyName</span>
                                </label>
                                @Html.DropDownList("fd", new SelectList(ViewBag.family, "ID", "Code"), Personnel.SelectFamilyProfile, new { @class = "select2", @onchange = "employee3()", id = "employeeId3" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                <input type="button" value="@Personnel.Add" id="ss" />
                            </div>
                        </div>
                        <table id="tb-family" border="1" style="display: table; width:400px;">
                            <thead>
                                <tr>
                                    <th id="fa">@Personnel.FamilyprofileNo</th>
                                    <th id="na">@Personnel.FamilyName</th>
                                    <th id="per">@Personnel.Percentage</th>
                                    <th id="De">@Personnel.Delete</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (var i = 0; i < Model.Append_beneficiary_Family.Count(); i++)
                                {
                                    @*@Html.HiddenFor(m => m.Append_beneficiary_Family[i].Family_profile);
                       @Html.HiddenFor(m => m.Append_beneficiary_Family[i].Family_name);
                       @Html.HiddenFor(m => m.Append_beneficiary_Family[i].Percentage);
                    @Html.HiddenFor(m => m.Append_beneficiary_Family[i].ID);*@
                                    <tr>

                                        <td>
                                            <input name="Family_profile_No2" type="text" value="@Model.Append_beneficiary_Family[i].Family_profile" readonly />
                                        </td>

                                        <td>
                                            <input name="Family_name" type="text" value="@Model.Append_beneficiary_Family[i].Family_name" />
                                        </td>
                                        <td>
                                            <input name="Percentage" type="number" value="@Model.Append_beneficiary_Family[i].Percentage" />
                                        </td>
                                        <td>
                                            <input type="button" value="@Personnel.Delete" class="del-btn" onclick="Remove()" id="tt" />
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>




                        <div class="form-group" hidden>
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="@Personnel.Edit" class="btn btn-success" />
                                <a href="@Url.Action("index","Employee_beneficiary_profile",new {id=ViewBag.idemp})" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>@Personnel.Back</a>
                            </div>
                        </div>
                    </div>
                    </div>
                }

            </div>

        </div>

    </section>
</div>
@section scripts{}
@*<script>
        $(document).ready(function () {
            $("#employeeId").attr("disabled", true);

        });
</script>*@
<script>
    function Remove()
    {
         
        //$("#tt").click (function () {
         //   $(this).closest('tr').remove();
        $("#tt").closest('tr').remove();
        //})
    }
    function employee() {
         
        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {
                 
                $("#employeename").val(result.Name);
                $("#codeid").val(result.Employee_Positions_Profile.Code);
                $("#employeeId").attr("readonly", true);
                $("#employeeId").prop("readonly", true);
            },
            error: function () {
                 
                $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }
    function employee2() {
         
        var id = $("#employeeId2").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetSubscriptionSyndicate",
            data: { "id": id },
            success: function (result) {
                 
              //  $("#employeename").val(result.Name);

            },
            error: function () {
                 
            //    $("#employeename").val(" ");
            }
        });
    }

    function employee3() {
         
        var id = $("#employeeId3").val();
        $.ajax({
            type: "post",
            url: "/Helper/Employeefamilyprofile",
            data: { "id": id },
            success: function (result) {
                 
              //  $("#employeename").val(result.Name);

            },
            error: function () {
                 
            //    $("#employeename").val(" ");
            }
        });
    }

</script>
<style>

    /*Create Page*/


    .sec-nav {
        z-index: 9999;
        position: fixed;
        top: 47px;
        background: #faf9f8;
        border-bottom: 1px solid #bebbb8;
        display: block;
        width: 100%;
        left: 50px;
        padding-left: 10px;
        height: 60px;
        line-height: 60px;
    }

        .sec-nav div {
            display: inline-block;
            padding: 5px 8px;
            width: unset;
            border: 0;
            color: #000;
            font-size: 16px;
            height: 60px;
        }

            .sec-nav div:hover {
                background: #eee;
                color: #000;
            }

                .sec-nav div:hover input {
                    color: #000;
                }

    .create-btn {
        border: 0;
        height: 100%;
        background-color: transparent;
    }

    .sec-nav div svg {
        color: #2266e3;
        font-size: 17px;
    }

    .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
        /*float: unset*/
    }

    label {
        text-align: left;
        font: normal normal 400 12px/18px 'Segoe UI',tahoma,sans-serif;
        color: #605e5c;
        display: block;
        margin-bottom: 0;
        max-width: 220px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-weight: 600;
        margin-top: 15px;
    }

    .form-horizontal .form-group {
        margin: 0 !important;
    }

    input {
        height: 35px;
        color: #000;
    }

        input:active {
            border: 1px solid #2266e3;
        }

    .form-group .row > div {
        margin-bottom: 10px;
    }

    .content-wrapper {
        margin-left: 15px;
    }

    .col-md-4 {
        width: 20% !important;
        margin-bottom: 15px;
    }

    .col-md-3 {
        width: 20% !important;
        margin-bottom: 15px;
    }
</style>