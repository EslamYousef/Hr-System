@model HR.Models.Employee_beneficiary_profile

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}


@Scripts.Render("~/bundles/jqueryval")
<script>
    debugger
    $(function () {

        $("#ss").click(function () {
            debugger
            var Family_profile = $("#employeeId3").val();
            $.ajax({
                type: "post",
                url: "/Helper/getfamilybyemployee",
                data: { "id": Family_profile },
                success: function (result) {
                    debugger
                    if (Family_profile != "") {
                        var T = "";
                        T = "<tr><td><input type='text' readonly name='Family_profile_No2' value='" + result.Code + "'/></td><td><input type='text' readonly name='Family_name' value='" + result.Name + "'/></td><td><input type='number' name='Percentage' value='0' /></td><td><input type='button' class='del-btn tb-btn' value='Remove'/></td></tr>"
                        $("#tb-family").append(T)
                    }
                }
            })
            $("#tb-family").on('click', '.del-btn', function () {
                $(this).closest('tr').remove();

            })




        })
    });

</script>

<div class="content-wrapper">

    <section class="content-header">
        <h1>
            Edit Employee Beneficiary Profile
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Edit", "Employee_beneficiary_profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }
                        <input name="Family_profile_No2" hidden />
                        <input name="Family_name" hidden />
                        <input name="Percentage" hidden />
                        @Html.HiddenFor(m => m.ID);
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee_ProfileId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.DropDownListFor(m => m.Employee_ProfileId, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), "Select Employee", new { @readonly = true, @class = "select2", @onchange = "employee()", id = "employeeId" })
                                    @Html.ValidationMessageFor(model => model.Employee_ProfileId, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-4" style="color:black">
                                    <button type="submit" id="btnSubmit" name="Command" value="Submit" class="btn btn-success">Employee Profile</button>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.Legatee, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.CheckBoxFor(model => model.Legatee, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Legatee, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                              
                                <label class = "control-label col-md-2" >
                                    <span>Benefit type code</span>
                                </label>
                                <div class="col-md-3">
                                    @Html.DropDownList("f", new SelectList(ViewBag.Subscription_Syndicate, "ID", "Code"), "Select Subscription Syndicate", new { @class = "select2", @onchange = "employee2()", id = "employeeId2" })
                                   

                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2">
                                    <span>Family profile No</span>
                                </label>
                                <div class="col-md-3">
                                    @Html.DropDownList("fd", new SelectList(ViewBag.family, "ID", "Code"), "Select Family Profile No.", new { @class = "select2", @onchange = "employee3()", id = "employeeId3" })
                                
                                </div>
                            </div>
                            <table id="tb-family" border="1">
                                <thead>
                                    <tr>
                                        <td>Family Profile No.</td>
                                        <td>Family Name</td>
                                        <td>Percentage</td>
                                        <td>Delete</td>
                                    </tr>


                                </thead>
                                <tbody>
                                   @for (var i=0;i< Model.Append_beneficiary_Family.Count();i++)
                                   {
                                       @*@Html.HiddenFor(m => m.Append_beneficiary_Family[i].Family_profile);
                                       @Html.HiddenFor(m => m.Append_beneficiary_Family[i].Family_name);
                                       @Html.HiddenFor(m => m.Append_beneficiary_Family[i].Percentage);
                                    @Html.HiddenFor(m => m.Append_beneficiary_Family[i].ID);*@
                                    <tr>
                                     
                                        <td>

                                            <input name="Family_profile_No2"  type="text" value="@Model.Append_beneficiary_Family[i].Family_profile" readonly />
                                            
                                        </td>
                                        <td>

                                            <input name="Family_name"  type="text" value="@Model.Append_beneficiary_Family[i].Family_name" readonly/>
                                        </td>
                                        <td>
                                           <input name="Percentage" type="number" value="@Model.Append_beneficiary_Family[i].Percentage" /> 
                                        </td>
                                        <td>
                                            <input type="button" value="Remove" class="del-btn" onclick="Remove()" id="tt" />
                                        </td>
                                    </tr>
                                   }
                                </tbody>
                            </table>

                            <input type="button" value="Add" id="ss" />



                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Edit" class="btn btn-success" />
                                    <a href="@Url.Action("index","Employee_beneficiary_profile",new {id=ViewBag.idemp})" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>Back</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                }

            </div>

        </div>

    </section>
</div>
@section scripts{}

<script>
    function Remove()
    {
        debugger
        //$("#tt").click (function () {
         //   $(this).closest('tr').remove();
        $("#tt").closest('tr').remove();
        //})
    }
       
</script>

<script>
    function employee() {
        debugger
        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#employeename").val(result.Name);
                $("#codeid").val(result.Employee_Positions_Profile.Code);
                $("#employeeId").attr("readonly", true);
                $("#employeeId").prop("readonly", true);
            },
            error: function () {
                debugger
                $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }
    employee();
</script>

<script>
    function employee2() {
        debugger
        var id = $("#employeeId2").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetSubscriptionSyndicate",
            data: { "id": id },
            success: function (result) {
                debugger
              //  $("#employeename").val(result.Name);

            },
            error: function () {
                debugger
            //    $("#employeename").val(" ");
            }
        });
    }
    employee2();
</script>

<script>
    function employee3() {
        debugger
        var id = $("#employeeId3").val();
        $.ajax({
            type: "post",
            url: "/Helper/Employeefamilyprofile",
            data: { "id": id },
            success: function (result) {
                debugger
              //  $("#employeename").val(result.Name);

            },
            error: function () {
                debugger
            //    $("#employeename").val(" ");
            }
        });
    }
    employee3();
</script>

