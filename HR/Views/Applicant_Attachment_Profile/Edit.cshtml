@model HR.Models.Applicant_Attachment_Profile
@using HR.Resource;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}


@Scripts.Render("~/bundles/jqueryval")
<div class="content-wrapper">

  

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Edit", "Applicant_Attachment_Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                <div class="sec-nav">
                    <div><i class="far fa-save"></i><button type="submit" class="create-btn" />@organ.Save</div>
                    <div><i class="fas fa-plus"></i><a href="@Url.Action("create", "Applicant_Attachment_Profile",new {id=ViewBag.idemp})" class="create-btn">@pers_2.new_</a></div>
                    <div><i class="far fa-trash-alt"></i><input type="button" href="@Url.Action("index","Applicant_Attachment_Profile")" class="create-btn" value=@organ.delete /></div>
                    <div><i class="fas fa-undo"></i><a style="" href="@Url.Action("index", "Applicant_Attachment_Profile",new {id=ViewBag.idemp})" class="create-btn"> @pers_2.Back</a></div>
                    <div><i class="far fa-save"></i> <button type="submit" id="btnSubmit" name="Command" value="Submit" class="create-btn" />@Personnel.ApplicantProfile</div>
                </div>
                    <hr /><hr /><hr />
                    <section class="content-header">
                        <h1>
                            @Personnel.EditApplicantAttachmentProfile
                        </h1>
                    </section>
                    @Html.AntiForgeryToken()
            <div class="form-horizontal">

                <hr />

                @if (TempData["Message"] != null)
                {
                    <div class="alert alert-danger alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        @TempData["Message"]
                    </div>
                }

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.Applicant_Profile.ID)
                @Html.HiddenFor(m => m.Applicant_Profile.Name)
                @Html.HiddenFor(m => m.Applicant_Profile.Full_Name)
                @Html.HiddenFor(m => m.Applicant_Profile.Code)
                <div class="form-group">
                    <div class="col-md-4">
                        <label style="color:red">@Personnel.ApplicantName</label>
                        @Html.DropDownListFor(m => m.Employee_ProfileId, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), "Select Employee", new { @readonly = true, @class = "select2", @onchange = "employee()", id = "employeeId", @style = "margin-bottom: 15px;" })
                        @Html.ValidationMessageFor(model => model.Employee_ProfileId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label style="color:red">@Personnel.AttachmentprofileNo</label>
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", id = "codeid", @readonly = true, @autocomplete = "off", @style = "margin-bottom: 15px;" } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Personnel.Iscopy</label>
                        @Html.CheckBoxFor(model => model.Is_copy, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom: 15px;" } })
                        @Html.ValidationMessageFor(model => model.Is_copy, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label style="color:red">@Personnel.Documentcode</label>
                        @Html.DropDownListFor(m => m.DocumentsId, new SelectList(ViewBag.Documents, "ID", "Code"), Personnel.SelectDocument, new { @readonly = true, @class = "select2", @onchange = "employee2()", id = "employeeId2", @style = "margin-bottom: 15px;" })
                        @Html.ValidationMessageFor(model => model.DocumentsId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Personnel.Isrequired</label>
                        @Html.CheckBoxFor(model => model.Is_required, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom: 15px;" } })
                        @Html.ValidationMessageFor(model => model.Is_required, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-4">
                        <label>@Personnel.Documentgroup</label>
                        @Html.EditorFor(model => model.DocumentGroup, new { htmlAttributes = new { @class = "form-control", id = "groupdocument", @readonly = true, @autocomplete = "off", @style = "margin-bottom: 15px;" } })
                        @Html.ValidationMessageFor(model => model.DocumentGroup, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Personnel.Relatedto</label>
                        @Html.EnumDropDownListFor(model => model.Related_to, new { @class = "select2", @style = "margin-bottom: 15px;" })
                        @Html.ValidationMessageFor(model => model.Related_to, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Personnel.Issuedplace</label>
                        @Html.EditorFor(model => model.Issued_place, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @style = "margin-bottom: 15px;" } })
                        @Html.ValidationMessageFor(model => model.Issued_place, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Personnel.Issuedate</label>
                        @Html.EditorFor(model => model.Issue_date, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control @*datepicker*@", @id = "Issue_date", @type = "date", @style = "margin-bottom: 15px;" } })
                        @Html.ValidationMessageFor(model => model.Issue_date, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Personnel.Expirydate</label>
                        @Html.EditorFor(model => model.Expiry_date, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control @*datepicker*@", @id = "Expiry_date", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.Expiry_date, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-4">
                        <label>@Personnel.Referencenumber</label>
                        @Html.EditorFor(model => model.Reference_number, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @style = "margin-bottom: 15px;" } })
                        @Html.ValidationMessageFor(model => model.Reference_number, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Personnel.Documentnumber</label>
                        @Html.EditorFor(model => model.Document_number, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @style = "margin-bottom: 15px;" } })
                        @Html.ValidationMessageFor(model => model.Document_number, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Personnel.Documentdescription</label>
                        @Html.EditorFor(model => model.Document_description, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @style = "margin-bottom: 15px;" } })
                        @Html.ValidationMessageFor(model => model.Document_description, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Personnel.Documentstatus</label>
                        @Html.EnumDropDownListFor(model => model.Document_status, new { @class = "select2", @style = "margin-bottom: 15px;" })
                        @Html.ValidationMessageFor(model => model.Document_status, "", new { @class = "text-danger" })
                    </div>
                    <div @*class="fileinput fileinput-new"*@ data-provides="fileinput">
                        @if (Model.Attachmentfile == null)
                        {
                           
                            <div class="col-md-4">
                                <label>Attachments</label>
                                <a href="~/files/@Model.Code/@Model.Attachmentfile" style="color: currentColor;" />  <input type="file" name="MyItem" style="min-width: 200px;" /><br />
                            </div>
                        }
                        else
                        {
                            
                            <div class="col-md-4">
                                <label>Attachments</label>
                                <a href="~/Applicant_Attachment_Files/@Model.Code/@Model.Attachmentfile" style="color: currentColor;" />  <input type="file" name="MyItem" @*style="margin-left: -24px;"*@ /><input type="text" value="@Model.Attachmentfile" disabled style="min-width: 200px;" /><br />
                            </div>
                        }
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">
                        <label>@Personnel.Comments</label>
                        @Html.TextAreaFor(model => model.Comments, 4, 40, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @style = "margin-bottom: 15px;" } })
                        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" hidden>
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@Personnel.Edit" class="btn btn-success" />
                        <a href="@Url.Action("index","Applicant_Attachment_Profile",new {id=ViewBag.idemp})" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>@Personnel.Back</a>
                    </div>
                </div>

            </div>

                }

            </div>

        </div>

    </section>
</div>

@section scripts{}

<script>
    $(document).ready(function () {
        $("#employeeId").attr("disabled", true);
        GetDataById5('@Model.Issue_date', "Issue_date");
        GetDataById5('@Model.Expiry_date', "Expiry_date");
    });
</script>


<script>
    function employee() {

        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {

                $("#employeename").val(result.Name);
                $("#codeid").val(result.Employee_family_profile.Code);
                $("#employeeId").prop("readonly", true);
                $("#employeeId").attr("readonly", true);

            },
            error: function () {

                $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }
    function employee2() {

        var id = $("#employeeId2").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetDocuments",
            data: { "id": id },
            success: function (result) {

                $("#groupdocument").val(result.Document_Group.Name);
                //        $("#codeid").val(result.Employee_Positions_Profile.Code);
                //   $("#employeeId").prop("readonly", true);
                //     $("#employeeId").attr("readonly", true);

            },
            error: function () {

                $("#groupdocument").val(" ");

            }
        });
    }
    function GetDataById5(date, id) {
        debugger
        var valx = new Date(date);
        var month;
        if ((valx.getMonth() + 1) < 10) {
            month = "0" + (valx.getMonth() + 1).toString();
        }
        else {
            month = date.getMonth() + 1;
        }
        var day = parseInt(valx.getDate());
        if (day < 10) {
            day = "0" + (valx.getDate()).toString();
        }
        else {
            day = valx.getDate();
        }
        var d = valx.getFullYear() + '-' + month + '-' + day;
        $('#' + id).val(d);
    }
</script>
<style>

    /*Create Page*/


    .sec-nav {
        z-index: 9999;
        position: fixed;
        top: 47px;
        background: #faf9f8;
        border-bottom: 1px solid #bebbb8;
        display: block;
        width: 100%;
        left: 50px;
        padding-left: 10px;
        height: 60px;
        line-height: 60px;
    }

        .sec-nav div {
            display: inline-block;
            padding: 5px 8px;
            width: unset;
            border: 0;
            color: #000;
            font-size: 16px;
            height: 60px;
        }

            .sec-nav div:hover {
                background: #eee;
                color: #000;
            }

                .sec-nav div:hover input {
                    color: #000;
                }

    .create-btn {
        border: 0;
        height: 100%;
        background-color: transparent;
    }

    .sec-nav div svg {
        color: #2266e3;
        font-size: 17px;
    }

    .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
        /*float: unset*/
    }

    label {
        text-align: left;
        font: normal normal 400 12px/18px 'Segoe UI',tahoma,sans-serif;
        color: #605e5c;
        display: block;
        margin-bottom: 0;
        max-width: 220px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-weight: 600;
        margin-top: 15px;
    }

    .form-horizontal .form-group {
        margin: 0 !important;
    }

    input {
        height: 35px;
        color: #000;
    }

        input:active {
            border: 1px solid #2266e3;
        }

    .form-group .row > div {
        margin-bottom: 10px;
    }

    .content-wrapper {
        margin-left: 15px;
    }

    .col-md-4 {
        width: 20% !important;
    }
</style>