@model HR.Models.All_Table_Commitee_Resolution.Linked_to_Testing
@using HR.Resource;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}

@Scripts.Render("~/bundles/jqueryval")
<link href="~/Content/StyleTableBeneficiary.css" rel="stylesheet" />
<div class="content-wrapper">

    <section class="content-header">
        <h1>
            @Personnel.EditLinkedtoTesting
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="box">
            <!-- /.box-header -->
            <div class="box-body">
                @using (Html.BeginForm("Edit", "Linked_to_Testing", new { id2 = ViewBag.idemp }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                <div class="form-horizontal">

                    <hr />

                    @if (TempData["Message"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible" role="alert">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            @TempData["Message"]
                        </div>
                    }

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(m => m.ID)
                    @Html.HiddenFor(m => m.Committe_Resolution_Recuirtment.ID)
                    @Html.HiddenFor(m => m.Committe_Resolution_RecuirtmentId)

                    <input name="TestCode" hidden />
                    <input name="TestDescription" hidden />
                    <input name="ExpectedStart_Date" hidden />
                    <input name="ExpectedEnd_Date" hidden />
                    <input name="PassMark" hidden />
                    <input name="FullMark" hidden />

                    <div>


                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.CommitteResolutionNo</label>
                            <div class="col-md-3">
                                <input type="text" value="@ViewBag.Committe_Resolution_Recuirtment" disabled />
                            </div>
                            <div class="col-md-3">
                                <button type="submit" id="btnSubmit" name="Command" value="Submit" class="btn btn-success">@Personnel.Committe_Resolution_Recuirtment</button>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">
                                <span>@Personnel.Test</span>
                            </label>
                            <div class="col-md-3">
                                @Html.DropDownList("fd", new SelectList(ViewBag.Test, "ID", "Code"), Personnel.SelectTest, new { @required = "required", @class = "select2", @onchange = "employee3()", id = "employeeId3" })
                            </div>
                            <div class="col-md-3">
                                <input type="button" value="@Personnel.Add" id="ss" style="margin-top: 10px;" />
                            </div>
                        </div>
                        <table id="tb-family" border="1" style="display: table; width:400px;" >
                            <thead>
                                <tr>
                                    <th id="fa">@Personnel.TestCode</th>
                                    <th id="na">@Personnel.TestDescription</th>
                                    <th id="per">@Personnel.ExpectedStartDate</th>
                                    <th id="De">@Personnel.ExpectedEndDate</th>
                                    <th id="No">@Personnel.PassMark</th>
                                    <th id="No1">@Personnel.FullMark</th>
                                    <th id="No2">@Personnel.Delete</th>

                                </tr>
                            </thead>
                            <tbody>
                                @for (var i = 0; i < Model.Committe_Resolution_Recuirtment.Linked_to_Testing.Count(); i++)

                                {

                                <tr>

                                    <td>
                                        <input name="TestCode" type="text" value="@Model.Committe_Resolution_Recuirtment.Linked_to_Testing[i].TestCode" readonly />
                                    </td>
                                    <td>
                                        <input name="TestDescription" type="text" value="@Model.Committe_Resolution_Recuirtment.Linked_to_Testing[i].TestDescription" readonly/>
                                    </td>
                                    <td>
                                        <input name="ExpectedStart_Date" type="date" value="@Model.Committe_Resolution_Recuirtment.Linked_to_Testing[i].Expected_Start_Date" class="@Model.Committe_Resolution_Recuirtment.Linked_to_Testing[i].ID" />
                                    </td>
                                    <td>
                                        <input name="ExpectedEnd_Date" type="date" value="@Model.Committe_Resolution_Recuirtment.Linked_to_Testing[i].Expected_End_Date" id="@Model.Committe_Resolution_Recuirtment.Linked_to_Testing[i].ID" />
                                    </td>
                                    <td>
                                        <input name="PassMark" type="number" value="@Model.Committe_Resolution_Recuirtment.Linked_to_Testing[i].Pass_Mark" readonly />
                                    </td>
                                    <td>
                                        <input name="FullMark" type="number" value="@Model.Committe_Resolution_Recuirtment.Linked_to_Testing[i].Full_Mark" readonly />
                                    </td>
                                    <td>
                                        <input type="button" value="@Personnel.Delete" class="del-btn" onclick="Remove($(this))" id="tt" />
                                    </td>
                                </tr>
                                }
                            </tbody>

                        </table>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="@Personnel.Edit1" class="btn btn-success" />
                                <a href="@Url.Action("index","Committe_Resolution_Recuirtment",new {id=ViewBag.idemp})" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>@Personnel.Back</a>
                            </div>
                        </div>
                    </div>

                </div>

                }

            </div>

        </div>
    </section>
</div>

@section scripts{}
<script>
    $(document).ready(function () {

      GetDataById2();
        GetDataById();
    });

</script>
<script>
    function Remove(thi) {
        debugger
        thi.closest('tr').remove();
    }

    function employee3() {

        var id = $("#employeeId3").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetTest",
            data: { "id": id },
            async: false,
            success: function (result) {

            },
            error: function () {

            }
        });
    }
    function GetDataById2(date, id) {
        debugger
        var valx = new Date(date);
        var month;
        if ((valx.getMonth() + 1) < 10) {
            month = "0" + (valx.getMonth() + 1).toString();
        }
        else {
            month = date.getMonth() + 1;
        }
        var day = parseInt(valx.getDate());
        if (day < 10) {
            day = "0" + (valx.getDate()).toString();
        }
        else {
            day = valx.getDate();
        }
        var d = valx.getFullYear() + '-' + month + '-' + day;
        $('.' + id).val(d);
    }
</script>
<script>

    $(function () {
        //$("#tb-family").hide();
        $("#ss").click(function () {

            var Family_profile = $("#employeeId3").val();
            $.ajax({
                type: "post",
                url: "/Helper/GetTest",
                data: { "id": Family_profile },
                async: false,
                success: function (result) {
    debugger
                    if (Family_profile != "")
                    {
                        $("#tb-family").show();
                        var T = "";
                                T = "<tr><td><input type='text' readonly name='TestCode' value='" + result.Code + "'/></td><td><input type='text' readonly name='TestDescription' value='" + result.Name + "' readonly/></td><td><input type='date' name='ExpectedStart_Date' value='1900/1/1' id='Start_date' /></td><td><input type='date' name='ExpectedEnd_Date' value='1900/1/1' id='End_date' /></td><td><input type='number' name='PassMark' value='" + result.Pass_mark + "' readonly /></td><td><input type='number' name='FullMark' value='" + result.Full_mark + "' readonly /></td><td><input type='button' class='del-btn tb-btn' value='@Personnel.Delete'/></td></tr>"
                        $("#tb-family").append(T)
                    }
                }
            })
            $("#tb-family").on('click', '.del-btn', function () {
               $(this).closest('tr').remove();

            })

        })
    });
    function GetDataById() {
        debugger
        let x = window.location.href.split('/')[5];
        $.ajax({
            type: "post",
            url: "/Helper/GetDataByIdAppendLinked_to_Testing",
            data: { "id": x },
            success: function (result) {


                debugger
                if (result) {
                    $.each(result, function (i, r) {
                        debugger
                        var date = parseJsonDate(r.todate)
                        month = date.getMonth() + 1;
                        if (parseInt(month) < 10) {
                            month = '0' + month;
                        }
                        day = date.getDate();
                        if (parseInt(day) < 10) {
                            day = '0' + day;
                        }


                        //     month = date.getMonth() + 1;
                        var d = date.getFullYear() + '-' + month + '-' + day;
                        var T = $('#' + r.id);
                        $('#' + r.id).val(d);
                    });
                    debugger


                    console.log(result);
                }
            },
            error: function () {


            }
        });
    }
    //   GetDataById();
    function parseJsonDate(jsonDateString) {
        return new Date(parseInt(jsonDateString.replace('/Date(', '')));
    }
    ///////////////////////////////////
    function GetDataById2() {
        debugger
        let x = window.location.href.split('/')[5];
        $.ajax({
            type: "post",
            url: "/Helper/GetDataByIdAppendLinked_to_Testing",
            data: { "id": x },
            success: function (result) {
                debugger
                if (result) {
                    $.each(result, function (i, r) {
                        debugger
                        var date = parseJsonDate(r.fromdate)
                        month = date.getMonth() + 1;
                        if (parseInt(month) < 10) {
                            month = '0' + month;
                        }
                        day = date.getDate();
                        if (parseInt(day) < 10) {
                            day = '0' + day;
                        }


                        //     month = date.getMonth() + 1;
                        var d = date.getFullYear() + '-' + month + '-' + day;
                        var t = $('.' + r.id);
                        $('.' + r.id).val(d);
                    });
                }
            },
            error: function () {


            }
        });
    }
    //  GetDataById2();
    function parseJsonDate(jsonDateString) {
        return new Date(parseInt(jsonDateString.replace('/Date(', '')));
    }
</script>
