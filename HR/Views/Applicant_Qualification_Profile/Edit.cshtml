@model HR.Models.Applicant_Qualification_Profile
@using HR.Resource;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}


@Scripts.Render("~/bundles/jqueryval")
<div class="content-wrapper">

  

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Edit", "Applicant_Qualification_Profile", new { ID2 = ViewBag.iod }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                <div class="sec-nav">
                    <div><i class="far fa-save"></i><button type="submit" class="create-btn" />@organ.Save</div>
                    <div><i class="fas fa-plus"></i><a href="@Url.Action("create", "Applicant_Qualification_Profile",new {id=ViewBag.idemp})" class="create-btn">@pers_2.new_</a></div>
                    <div><i class="far fa-trash-alt"></i><input type="button" href="@Url.Action("index","Applicant_Qualification_Profile")" class="create-btn" value=@organ.delete /></div>
                    <div><i class="fas fa-undo"></i><a style="" href="@Url.Action("index", "Applicant_Qualification_Profile",new {id=ViewBag.idemp})" class="create-btn"> @pers_2.Back</a></div>
                    <div><i class="far fa-save"></i> <button type="submit" id="btnSubmit" name="Command" value="Submit" class="create-btn" />@Personnel.ApplicantProfile</div>
                </div>
                    <hr /><hr /><hr />
                    <section class="content-header">
                        <h1>
                            @Personnel.EditApplicantQualificationProfile
                        </h1>
                    </section>
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                    <div class="form-group">
                        <div class="col-md-4">
                            <label style="color:red">@Personnel.ApplicantName</label>
                            @Html.DropDownListFor(m => m.Employee_ProfileId, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), "Select Employee", new { @class = "select2", @onchange = "employee()", id = "employeeId", @style = "margin-bottom: 15px;" })
                            @*@Html.ValidationMessageFor(model => model.Employee_ProfileId, "", new { @class = "text-danger" })*@
                        </div>
                        <div class="col-md-4">
                            <label style="color:red">@Personnel.QualificationprofileNo</label>
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", id = "codeid", @readonly = true, @style = "margin-bottom: 15px;" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4">
                            <label>@Personnel.Relatedtojob</label>
                            @Html.CheckBoxFor(model => model.Related_to_job, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom: 15px;" } })
                            @Html.ValidationMessageFor(model => model.Related_to_job, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4">
                            <label>@Personnel.Qualificationstartdate</label>
                            @Html.EditorFor(model => model.Qualification_start_date, new { @value = "01/01/1900", htmlAttributes = new { @class = "form-control  StartDate yy", @onchange = "Save()", @id = "Start", @type = "date", @autocomplete = "off", @style = "margin-bottom: 15px;" } })
                            @Html.ValidationMessageFor(model => model.Qualification_start_date, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4">
                            <label>@Personnel.Years</label>
                            @Html.EditorFor(model => model.Years, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "Yearr", @type = "number", @min = 0, @style = "margin-bottom: 15px;" } })
                            @Html.ValidationMessageFor(model => model.Years, "", new { @class = "text-danger" })
                        </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                <label>@Personnel.Qualificationenddate</label>
                                @Html.EditorFor(model => model.Qualification_end_date, new { @value = "01/01/1900", htmlAttributes = new { @class = "form-control  EndDate yyy", @onchange = "Save2()", @id = "End", @type = "date", @autocomplete = "off", @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Qualification_end_date, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Months</label>
                                @Html.EditorFor(model => model.Months, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "months", @type = "number", @min = 0, @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Months, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Qualificationcategorycode</label>
                                @Html.DropDownListFor(m => m.Educate_categoryId, new SelectList(ViewBag.Educate_category, "ID", "Code"), Personnel.SelectEducatecategory, new { @class = "select2", @onchange = "CountryName()", id = "country", @style = "margin-bottom: 15px;" })
                                @Html.ValidationMessageFor(model => model.Educate_categoryId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Educatelevelcode</label>
                                @Html.DropDownListFor(m => m.Educate_TitleId, new SelectList(ViewBag.Educate_Title, "ID", "Code"), Personnel.SelectEducateTitle, new { @class = "select2", @onchange = "areaName()", id = "area", @disabled = true, @style = "margin-bottom: 15px;" })
                                @Html.ValidationMessageFor(model => model.Educate_TitleId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Qualificationmainprovidercode</label>
                                @Html.DropDownListFor(m => m.Main_Educate_bodyId, new SelectList(ViewBag.Main_Educate_body, "ID", "Code"), Personnel.SelectMainEducatebody, new { @class = "select2", @onchange = "getstate()", id = "state", @disabled = true, @style = "margin-bottom: 15px;" })
                                @Html.ValidationMessageFor(model => model.Main_Educate_bodyId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                <label>@Personnel.Qualificationsubprovidercode</label>
                                @Html.DropDownListFor(m => m.Sub_educational_bodyId, new SelectList(ViewBag.Sub_educational_body, "ID", "Code"), Personnel.SelectSubeducationalbody, new { @class = "select2", @onchange = "getter()", id = "ter", @disabled = true, @style = "margin-bottom: 15px;" })
                                @Html.ValidationMessageFor(model => model.Sub_educational_bodyId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Qualificationnamecode</label>
                                @Html.DropDownListFor(m => m.Name_of_educational_qualificationId, new SelectList(ViewBag.Name_of_educational_qualification, "ID", "Code"), Personnel.SelectNameofeducationalqualification, new { @class = "select2", @onchange = "getcite()", id = "citeid", @disabled = true, @style = "margin-bottom: 15px;" })
                                @Html.ValidationMessageFor(model => model.Name_of_educational_qualificationId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Qualificationspecialtycode</label>
                                @Html.DropDownListFor(m => m.Qualification_MajorId, new SelectList(ViewBag.Qualification_Major, "ID", "Code"), Personnel.SelectQualificationMajor, new { @class = "select2", @onchange = "getpostal()", id = "postal", @disabled = true, @style = "margin-bottom: 15px;" })
                                @Html.ValidationMessageFor(model => model.Qualification_MajorId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Qualificationdegreecode</label>
                                @Html.DropDownListFor(m => m.GradeEducateId, new SelectList(ViewBag.GradeEducate, "ID", "Code"), Personnel.SelectGradeEducate, new { @class = "select2", @onchange = "GradeEducate()", id = "GradeEducateId", @disabled = true, @style = "margin-bottom: 15px;" })
                                @Html.ValidationMessageFor(model => model.GradeEducateId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>@Personnel.Extraeducationyears</label>
                                @Html.EditorFor(model => model.Extra_education_years, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Extra_education_years, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                <label>@Personnel.Allowancevalue</label>
                                @Html.EditorFor(model => model.Allowance_value, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @style = "margin-bottom: 15px;" } })
                                @Html.ValidationMessageFor(model => model.Allowance_value, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group" hidden>
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="@Personnel.Edit" class="btn btn-success" />
                                <a href="@Url.Action("index","Applicant_Qualification_Profile",new {id=ViewBag.idemp})" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>@Personnel.Back</a>

                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>

    </section>
</div>
@section scripts{}

<script>
    $(document).ready(function () {
        $("#employeeId").attr("disabled", true);
        GetDataById2();

        //Save();
        //Save2();
    });
</script>



<script>
    function CountryName() {

        var id = $("#country").val();

        $("#ter").empty();
        $("#citeid").empty();
        $("#postal").empty();

        $("#area").select2("val", "");
        $("#state").select2("val", " ");
        $("#ter").select2("val", "");
        $("#citeid").select2("val", " ");
        $("#postal").select2("val", " ");

        $("#GradeEducateId").select2("val", " ");
        $("#statename").val(" ");
        $("#areaname").val(" ");
        $("#tername").val(" ");
        $("#cityname").val(" ");
        $("#postname").val(" ");
        $("#GradeEducatename").val(" ");


        $.ajax({
            type: "post",
            url: "/Helper/GetEducatecategory",
            data: { "id": id },
            success: function (result) {


                $("#countryname").val(result.Name);
                $("#area").removeAttr("disabled");
           //     getallarea(result.ID);
            },
            error: function () {

                $("#countryname").val(" ");
            }
        });
    }

    function areaName() {

        var id = $("#area").val();

        $("#citeid").empty();
        $("#postal").empty();
        $("#ter").empty();
        //    $("#GradeEducateId").empty();
        $("#state").select2("val", "");
        $("#ter").select2("val", "");
        $("#citeid").select2("val", "");
        $("#postal").select2("val", "");
   //     $("#GradeEducateId").select2("val", "");
        $("#statename").val(" ");
        $("#tername").val(" ");
        $("#cityname").val(" ");
        $("#postname").val(" ");
        //     $("#GradeEducateId").val(" ");

        $.ajax({
            type: "post",
            url: "/Helper/GetEducateTitle",
            data: { "id": id },
            success: function (result) {

                $("#state").removeAttr("disabled");
                $("#areaname").val(result.Name);
                getNameeducationalbyEducatetitle(result.ID);
            },
            error: function () {

                $("#areaname").val(" ");
            }
        });
    }

    function getstate()
    {

        var id = $("#state").val();
        $("#ter").empty();
    //    $("#postal").empty();
  //   $("#GradeEducateId").empty();
        $("#ter").select2("val", "");
   //     $("#citeid").select2("val", "");
        $("#postal").select2("val", "");
    //    $("#GradeEducateId").select2("val", "");
        $("#tername").val(" ");
 //       $("#cityname").val(" ");
        $("#postname").val(" ");
        $("#GradeEducatename").val(" ");
        $.ajax({
            type: "post",
            url: "/Helper/GetMainEducatebody",
            data: { "id": id },
            success: function (result) {


                //        $("#ter").removeAttr("disabled");
                $("#ter").removeAttr("disabled");
                $("#statename").val(result.Name);
                getSubeducationalbyMainEducate(result.ID);
            },
            error: function () {

                $("#statename").val(" ");
            }
        });
    }
    function getSubeducationalbyMainEducate(id)
    {



        $.ajax({
            type: "post",
            url: "/Helper/getSubeducationalbyMainEducate",
            data: { "id": id, "flag": "0" },
            success: function (result) {

                $("#ter").removeAttr("disabled");
                var finalresult = "<option value='0' > Choose Sub Educational </option>";
                $.each(result, function (key, value) {
                    finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
                });
                $("#ter").html(finalresult);
                $("#ter").select2("val", "0");
            },
            error: function () {

                $("#ter").val(" ");
            }
        });

    }
    function getter()
    {

        var id = $("#ter").val();

        $.ajax({
            type: "post",
            url: "/Helper/GetSubeducationalbody",
            data: { "id": id },
            success: function (result) {


                $("#citeid").removeAttr("disabled");
                $("#tername").val(result.Name);

            },
            error: function () {

                $("#tername").val(" ");
            }
        });
    }
    function getNameeducationalbyEducatetitle(id) {

        $.ajax({
            type: "post",
            url: "/Helper/getNameeducationalbyEducatetitle",
            data: { "id": id, "flag": "0" },
            success: function (result) {

                $("#citeid").removeAttr("disabled");
                var finalresult = "<option value='0' > Choose Qualification name </option>";
                $.each(result, function (key, value) {
                    finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
                });
                $("#citeid").html(finalresult);
                $("#citeid").select2("val", "0");
            },
            error: function () {

                $("#citeid").val(" ");
            }
        });

    }
    function getcite() {

        var id = $("#citeid").val();
        $("#postal").empty();
     //   $("#GradeEducateId").empty();
        $("#postal").select2("val", "");
      //  $("#GradeEducateId").select2("val", "");
        $("#postname").val(" ");
     //   $("#GradeEducateId").val(" ");

        $.ajax({
            type: "post",
            url: "/Helper/GetNameofeducationalqualification",
            data: { "id": id },
            success: function (result) {


                $("#postal").removeAttr("disabled");
                $("#cityname").val(result.Name);
                getQualificationMajorbyNameofeducational(result.ID);

            },
            error: function () {

                $("#cityname").val(" ");
            }
        });
    }
    function getQualificationMajorbyNameofeducational(id) {

        $.ajax({
            type: "post",
            url: "/Helper/getQualificationMajorbyNameofeducational",
            data: { "id": id, "flag": "0" },
            success: function (result) {

                $("#postal").removeAttr("disabled");
                var finalresult = "<option value='0' > Choose Qualification specialty </option>";
                $.each(result, function (key, value) {
                    finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
                });
                $("#postal").html(finalresult);
                $("#postal").select2("val", "0");
            },
            error: function () {

                $("#postal").val(" ");
            }
        });

    }
    function getpostal() {

        var id = $("#postal").val();
   //    $("#GradeEducateId").empty();
      $("#GradeEducateId").select2("val", "");
      $("#GradeEducatename").val(" ");
        $.ajax({
            type: "post",
            url: "/Helper/GetQualificationMajor",
            data: { "id": id },
            success: function (result) {

                $("#GradeEducateId").removeAttr("disabled");
                $("#postname").val(result.Name);
            },
            error: function () {

                $("#postname").val(" ");
            }
        });
    }
    function GradeEducate() {

        var id = $("#GradeEducateId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GradeEducate",
            data: { "id": id },
            success: function (result) {

                $("#GradeEducatename").val(result.Name);
            },
            error: function () {

                $("#GradeEducatename").val(" ");
            }
        });
    }


    var id = $("#country").val();
    $.ajax({
        type: "post",
        url: "/Helper/GetEducatecategory",
        data: { "id": id },
        success: function (result) {

            $("#area").removeAttr("disabled");
            $("#countryname").val(result.Name);
        },
        error: function () {

            $("#countryname").val(" ");
        }
    });

    var id = $("#area").val();
    $.ajax({
        type: "post",
        url: "/Helper/GetEducateTitle",
        data: { "id": id },
        success: function (result) {

            $("#state").removeAttr("disabled");
            $("#areaname").val(result.Name);

        },
        error: function () {

            $("#areaname").val(" ");
        }
    });

    var id = $("#state").val();
    $.ajax({
        type: "post",
        url: "/Helper/GetMainEducatebody",
        data: { "id": id },
        success: function (result) {

            $("#ter").removeAttr("disabled");
            $("#statename").val(result.Name);

        },
        error: function () {

            $("#statename").val(" ");
        }
    });
    var id = $("#ter").val();
    $.ajax({
        type: "post",
        url: "/Helper/GetSubeducationalbody",
        data: { "id": id },
        success: function (result) {

            $("#citeid").removeAttr("disabled");
            $("#tername").val(result.Name);

        },
        error: function () {

            $("#tername").val(" ");
        }
    });
    var id = $("#citeid").val();
    $.ajax({
        type: "post",
        url: "/Helper/GetNameofeducationalqualification",
        data: { "id": id },
        success: function (result) {

            $("#postal").removeAttr("disabled");
            $("#cityname").val(result.Name);

        },
        error: function () {

            $("#cityname").val(" ");
        }
    });

    var id = $("#postal").val();
    $.ajax({
        type: "post",
        url: "/Helper/GetQualificationMajor",
        data: { "id": id },
        success: function (result) {

            $("#GradeEducateId").removeAttr("disabled");
            $("#postname").val(result.Name);

        },
        error: function () {

            $("#postname").val(" ");
        }
    });
    var id = $("#GradeEducateId").val();
    $.ajax({
        type: "post",
        url: "/Helper/GradeEducate",
        data: { "id": id },
        success: function (result) {

            $("#GradeEducatename").val(result.Name);

        },
        error: function () {

            $("#GradeEducatename").val(" ");
        }
    });


    function employee() {

        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {

                $("#employeename").val(result.Name);
                $("#codeid").val(result.Employee_Qualification_Profile.Code);
                $("#employeeId").attr('readonly', true);
                $("#employeeId").prop('readonly', true);

            },
            error: function () {

       //         $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }
    function GetDataById() {

        let x = window.location.href.split('/')[5];
        $.ajax({
            type: "post",
            url: "/Helper/GetDataByIdQualificationApp",
            data: { "id": x },
            success: function (result) {

                if (result) {
                    var date = parseJsonDate(result.Qualification_end_date)
                    month = date.getMonth() + 1;
                    if (parseInt(month) < 10) {
                        month = '0' + month;
                    }
                    day = date.getDate();
                    if (parseInt(day) < 10) {
                        day = '0' + day;
                    }


               //     month = date.getMonth() + 1;
                var d = date.getFullYear() + '-' + month + '-' + day;
                $("#End").val(d);
                Save();
                Save2();
                console.log(result);
            }
            },
            error: function () {


            }
        });
    }
    //   GetDataById();
    function parseJsonDate(jsonDateString) {
        return new Date(parseInt(jsonDateString.replace('/Date(', '')));
    }
    ///////////////////////////////////
    function GetDataById2() {
    debugger
        let x = window.location.href.split('/')[5];
        $.ajax({
            type: "post",
            url: "/Helper/GetDataByIdQualificationApp",
            data: { "id": x },
            success: function (result) {

                if (result) {
                    var date = parseJsonDate(result.Qualification_start_date)
                    month = date.getMonth() + 1;
                    if (parseInt(month) < 10) {
                        month = '0' + month;
                    }
                    day = date.getDate();
                    if (parseInt(day) < 10) {
                        day = '0' + day;
                    }


              //      month = date.getMonth() + 1;
                var d = date.getFullYear() + '-' + month + '-' + day;
                $("#Start").val(d);
                GetDataById();
                console.log(result);
            }
            },
            error: function () {


            }
        });
    }
    //  GetDataById2();
    function parseJsonDate(jsonDateString) {
        return new Date(parseInt(jsonDateString.replace('/Date(', '')));
    }
    function GetDiffDates(StartDate, EndDate) {
        if (StartDate && EndDate) {
            $.get("/Employee_military_service_calling/DifferenceTwoDates?StartDate=" + StartDate + '&EndDate=' + EndDate, function (data, status) {

                if (data) {
                    $("#Days").val(data.DateDiff.Days);
                    $("#months").val(data.DateDiff.Months);
                    $("#Yearr").val(data.DateDiff.Years);
                }
            });
        }
    }

    function Save() {
        var StartDate = new Date($(".StartDate").val());
        var EndDate = new Date($(".EndDate").val());

           var from = $(".startdate").val();
           var to = $(".enddate").val();
        if (to > from) {
            GetDiffDates(from, to);
        }
        else {
            $("#Yearr").val("0");
            $("#months").val("0");
        }
    };
    function Save2() {

        var StartDate = new Date($(".StartDate").val());
        var EndDate = new Date($(".EndDate").val());
           var from = $(".StartDate").val();
             var to = $(".EndDate").val();
        if (to > from) {
            GetDiffDates(from, to);
        }
        else {
            $("#Yearr").val("0");
            $("#months").val("0");
        }
    };

</script>

<style>

    /*Create Page*/


    .sec-nav {
        z-index: 9999;
        position: fixed;
        top: 47px;
        background: #faf9f8;
        border-bottom: 1px solid #bebbb8;
        display: block;
        width: 100%;
        left: 50px;
        padding-left: 10px;
        height: 60px;
        line-height: 60px;
    }

        .sec-nav div {
            display: inline-block;
            padding: 5px 8px;
            width: unset;
            border: 0;
            color: #000;
            font-size: 16px;
            height: 60px;
        }

            .sec-nav div:hover {
                background: #eee;
                color: #000;
            }

                .sec-nav div:hover input {
                    color: #000;
                }

    .create-btn {
        border: 0;
        height: 100%;
        background-color: transparent;
    }

    .sec-nav div svg {
        color: #2266e3;
        font-size: 17px;
    }

    .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
        /*float: unset*/
    }

    label {
        text-align: left;
        font: normal normal 400 12px/18px 'Segoe UI',tahoma,sans-serif;
        color: #605e5c;
        display: block;
        margin-bottom: 0;
        max-width: 220px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-weight: 600;
        margin-top: 15px;
    }

    .form-horizontal .form-group {
        margin: 0 !important;
    }

    input {
        height: 35px;
        color: #000;
    }

        input:active {
            border: 1px solid #2266e3;
        }

    .form-group .row > div {
        margin-bottom: 10px;
    }

    .content-wrapper {
        margin-left: 15px;
    }

    .col-md-4 {
        width: 20% !important;
    }
</style>