@model HR.Models.Employee_vehicle_profile
@using HR.Resource;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}


@Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $("#employeeId").attr("disabled", true);

    });
</script>
<div class="content-wrapper">

    <section class="content-header">
        <h1>
            @Personnel.EditEmployeeVehicleProfile
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Edit", "Employee_vehicle_profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.EmployeeName</label>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.Employee_ProfileId, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), @Personnel.SelectEmployee, new {  @class = "select2", @onchange = "employee()", id = "employeeId" })
                                @Html.ValidationMessageFor(model => model.Employee_ProfileId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.VehicleprofileNo</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", id = "codeid", @readonly = true } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Vehiclemodel</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Vehicle_model, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Vehicle_model, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Vehicleplatenumber</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Vehicle_plate_number, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Vehicle_plate_number, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Fromdate</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.From_date, new { htmlAttributes = new { @class = "form-control", @id = "From_date", @autocomplete = "off", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.From_date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Todate</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.To_date, new { htmlAttributes = new { @class = "form-control", @id = "To_date", @autocomplete = "off", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.To_date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Comments</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="@Personnel.Edit" class="btn btn-success" />
                                <a href="@Url.Action("index","Employee_vehicle_profile")" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>@Personnel.Back</a>

                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>

    </section>
</div>
@section scripts{}


<script>
    function employee() {

        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/CheckAddressEmployee",
            data: { "id": id },
            success: function (result) {

                if (result.namex != 3 || result.nameb == "0") //3 = Car
                {
                    alert("This Employee doesn't have a Car and a Address.");
                    $("#employeeId").val(" ");
                    $("#select2-chosen-1")[0].innerText = " ";
                    return;
                }
                var finalresult = "<option value='0' > Choose Employee </option>";
                $.each(result, function (key, value) {
                    finalresult += "<option value='" + value.namex + "' >" + "[  " + value.nameb + " ]</option>";
                });
                $("#employeeId").attr("readonly", true);

            },
            error: function () {

                alert("This employee doesn't have a Address.");
                $("#employeeId").select2("val", " ");

            }
        });
    }
 function GetDataById5(date, id) {
        debugger
        var valx = new Date(date);
        var month;
        if ((valx.getMonth() + 1) < 10) {
            month = "0" + (valx.getMonth() + 1).toString();
        }
        else {
            month = date.getMonth() + 1;
        }
        var day = parseInt(valx.getDate());
        if (day < 10) {
            day = "0" + (valx.getDate()).toString();
        }
        else {
            day = valx.getDate();
        }
        var d = valx.getFullYear() + '-' + month + '-' + day;
        $('#' + id).val(d);
    }
</script>
<script>
    $(document).ready(function () {

        GetDataById5('@Model.From_date', "From_date");
        GetDataById5('@Model.To_date', "To_date");

    });
</script>