@model HR.Models.Employee_experience_profile
@using HR.Resource;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}


@Scripts.Render("~/bundles/jqueryval")
<div class="content-wrapper">

    <section class="content-header">
        <h1>
            @Personnel.EditEmployeeExperienceProfile
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Edit", "Employee_experience_profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.EmployeeName</label>
                            <div class="col-md-3">
                                @Html.DropDownListFor(m => m.Employee_ProfileId, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), "Select Employee", new { @class = "select2", @onchange = "employee()", id = "employeeId" })
                                @*@Html.ValidationMessageFor(model => model.Employee_ProfileId, "", new { @class = "text-danger" })*@
                        

                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.ExperienceprofileNo</label>
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", id = "codeid", @readonly = true } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4" style="color:black">
                                <button type="submit" id="btnSubmit" name="Command" value="Submit" class="btn btn-success">@Personnel.EmployeeProfile</button>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Companycode</label>
                            <div class="col-md-3">
                                @Html.DropDownListFor(m => m.External_compainesId, new SelectList(ViewBag.External_compaines, "ID", "Code"), Personnel.SelectCompany, new { @class = "select2", @onchange = "company()", id = "companyId" })
                                @Html.ValidationMessageFor(model => model.External_compainesId, "", new { @class = "text-danger" })
                                
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Companytype</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Company_type, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Company_type, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Jobtitle</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Job_title, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Job_title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                         
                            <label class="control-label col-md-2">@Personnel.Startdate</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Start_date, new { htmlAttributes = new { @class = "form-control datepicker StartDate yy dt", @id = "dateto", @onchange = "Save()", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Start_date, "", new { @class = "text-danger" })
                            </div>

                            <label class="control-label col-md-2">@Personnel.Years</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Years, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "Yearr", @type = "number", @min = 0 } })

                                @Html.ValidationMessageFor(model => model.Years, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Enddate</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.End_date, new { htmlAttributes = new { @class = "form-control datepicker EndDate yyy dt ", @id = "dateto", @onchange = "Save2()", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.End_date, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-md-2">@Personnel.Months</label>
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.Months, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "months", @type = "number", @min = 0 } })

                                @Html.ValidationMessageFor(model => model.Months, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-md-2">@Personnel.Days</label>
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.Days, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "Days" } })
                                @Html.ValidationMessageFor(model => model.Days, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Totalsalary</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Total_salary, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0 } })
                                @Html.ValidationMessageFor(model => model.Total_salary, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Reasonofleave</label>
                            <div class="col-md-3">
                                @Html.DropDownListFor(m => m.Rejection_ReasonsId, new SelectList(ViewBag.Rejection_Reasons, "ID", "Code"), Personnel.SelectReasonofleave, new { @class = "select2", @onchange = "Reasons()", id = "ReasonsId" })
                                @Html.ValidationMessageFor(model => model.Rejection_ReasonsId, "", new { @class = "text-danger" })
                               

                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Addedyears</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Added_years, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0 } })

                                @Html.ValidationMessageFor(model => model.Added_years, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-md-2">@Personnel.Approveddate</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Approval_date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Approval_date, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Addedmonths</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Added_months, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0 } })

                                @Html.ValidationMessageFor(model => model.Added_months, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-md-2">@Personnel.Consideredperiod</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Considered_period, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0 } })
                                @Html.ValidationMessageFor(model => model.Considered_period, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Addeddays</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Added_days, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0 } })

                                @Html.ValidationMessageFor(model => model.Added_days, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value=" @Personnel.Edit" class="btn btn-success" />
                                <a href="@Url.Action("index","Employee_experience_profile")" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>@Personnel.Back</a>

                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>

    </section>
</div>
@section scripts{}
<script>
    $(document).ready(function () {
        $("#employeeId").attr("disabled", true);

    });
</script>

<script>
    function employee() {
        debugger
        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#employeename").val(result.Name);
                $("#codeid").val(result.Employee_experience_profile.Code);
                $("#employeeId").prop("readonly", true);
                $("#employeeId").attr("readonly", true);

            },
            error: function () {
                debugger
                $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }

    function company() {
        debugger
        var id = $("#companyId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetExternalcompaines",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#Companyname").val(result.Name);

            },
            error: function () {
                debugger
                $("#Companyname").val(" ");

            }
        });
    }
    function Reasons() {
        debugger
        var id = $("#ReasonsId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetRejectionReasons",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#Reasonsname").val(result.Name);

            },
            error: function () {
                debugger
                $("#Reasonsname").val(" ");

            }
        });
    }
    function Save() {
        var StartDate = new Date($(".StartDate").val());
        var EndDate = new Date($(".EndDate").val());

        var from = $(".StartDate").val();
        var to = $(".EndDate").val();

        if (to > from) {
            var diffTime = Math.abs(EndDate - StartDate);
            var Days = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;
            var months = Math.floor(Days / 31);
            var years = Math.floor(months / 12);
            $("#Yearr").val(years);
            $("#months").val(months - (years * 12));
            $("#Days").val(Days - (months * 31) - (years * 12));
        }
        else {
            $("#Yearr").val("0");
            $("#months").val("0");
            $("#Days").val("0");
        }
    };

    function Save2() {
        var StartDate = new Date($(".StartDate").val());
        var EndDate = new Date($(".EndDate").val());

        var from = $(".StartDate").val();
        var to = $(".EndDate").val();
        if (to > from) {
            var diffTime = Math.abs(EndDate - StartDate);
            var Days = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;
            var months = Math.floor(Days / 31);
            var years = Math.floor(months / 12);
            $("#Yearr").val(years);
            $("#months").val(months - (years * 12));
            $("#Days").val(Days - (months * 31) - (years * 12));
        }
        else {
            $("#Yearr").val("0");
            $("#months").val("0");
            $("#Days").val("0");
        }
    };

</script>
