@model HR.Models.ViewModel.Employee_Positions_Profile_VM

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}

<script>
    $(document).ready(function () {

        $(".yy").datepicker({ dateFormat: 'yy-mm-dd' });
        $(".yyy").datepicker({ dateFormat: 'yy-mm-dd' });
    });
</script>

@Scripts.Render("~/bundles/jqueryval")
<div class="content-wrapper">

    <section class="content-header">
        <h1>
            Edit Employee Positions Profile
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Edit", "Employee_Positions_Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.HiddenFor(m => m.Position_Information.ID)
                        @Html.HiddenFor(m => m.Position_Information.Employee_ProfileId)
                        @Html.HiddenFor(m => m.Position_Transaction_Information.ID)
                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <label class="control-label col-md-2"><span>Employee No.</span></label>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.Position_Information.Employee_ProfileId, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), "Select Employee", new { @readonly = true, @class = "select2", @onchange = "employee()", id = "employeeId" })
                                @Html.ValidationMessageFor(model => model.Position_Information.Employee_ProfileId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4" style="color:black">
                                <button type="submit" id="btnSubmit" name="Command" value="Submit" class="btn btn-success">Employee Profile</button>
                            </div>


                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2"><span>Position profile No.</span></label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Position_Information.Code, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control"@*, id = "codeid" *@ ,
                                   @readonly = true
                               }
                           })
                                @Html.ValidationMessageFor(model => model.Position_Information.Code, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-md-2"><span>Primary Position</span></label>
                            <div class="col-md-4">
                                @Html.CheckBoxFor(model => model.Position_Information.Primary_Position, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Position_Information.Primary_Position, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div>
                            <ul class="nav nav-tabs bordered">
                                <!-- available classes "bordered", "right-aligned" -->
                                <li class="active">
                                    <a href="#home" data-toggle="tab">
                                        <span class="visible-xs"><i class="entypo-home"></i></span>
                                        <span class="hidden-xs">Position Information</span>
                                    </a>
                                </li>
                                <li>
                                    <a href="#PersonnelInformation" data-toggle="tab">
                                        <span class="visible-xs"><i class="entypo-user"></i></span>
                                        <span class="hidden-xs">Position Transaction Information</span>
                                    </a>
                                </li>

                            </ul>
                            <div class="tab-content">






                                <div class="tab-pane active" id="home" style="overflow: hidden;width: auto;height: auto;">

                                    <div class="form-group">
                                        <label class="control-label col-md-2"><span>Job desc</span></label>
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(m => m.Position_Information.job_descId, new SelectList(ViewBag.job_desc, "ID", "Code"), "Select Job desc", new { @class = "select2", @onchange = "CountryName()", id = "country" })
                                            @Html.ValidationMessageFor(model => model.Position_Information.job_descId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-2"><span>Default location desc</span></label>
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(m => m.Position_Information.Default_location_descId, new SelectList(ViewBag.Default_location, "ID", "Code"), "Select Default location desc", new { @eadonly = true, @class = "select2", @onchange = "getcite()", id = "citeid", @disabled = true })
                                            @Html.ValidationMessageFor(model => model.Position_Information.Default_location_descId, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-2"><span>Location desc</span></label>
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(m => m.Position_Information.Location_descId, new SelectList(ViewBag.location_desc, "ID", "Code"), "Select Location desc", new { @class = "select2", @onchange = "getcite2()", id = "citeid2", @disabled = true })
                                            @Html.ValidationMessageFor(model => model.Position_Information.Location_descId, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-2"><span>Slot desc</span></label>
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(m => m.Position_Information.SlotdescId, new SelectList(ViewBag.job_slot_desc, "ID", "Code"), "Select slot", new { @class = "select2", @onchange = "slot()", id = "ter", @disabled = true })
                                            @Html.ValidationMessageFor(model => model.Position_Information.SlotdescId, "", new { @class = "text-danger" })

                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label col-md-2"><span>Job level desc</span></label>
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(m => m.Position_Information.Job_level_gradeId, new SelectList(ViewBag.Job_level_grade, "ID", "Code"), "Select Job level desc", new { @class = "select2", @onchange = "areaName()", id = "area", @disabled = true })
                                            @Html.ValidationMessageFor(model => model.Position_Information.Job_level_gradeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        <label class="control-label col-md-2"><span>Unit desc</span></label>
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(m => m.Position_Information.Organization_ChartId, new SelectList(ViewBag.Organization_Chart, "ID", "Code"), "Select Unit desc", new { @class = "select2", @onchange = "getstate()", id = "state", @disabled = true })
                                            @Html.ValidationMessageFor(model => model.Position_Information.Organization_ChartId, "", new { @class = "text-danger" })

                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Position_Information.From_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.Position_Information.From_date, new { @value = "01/01/1900", htmlAttributes = new { @class = "form-control StartDate", @onchange = "Save()", @id = "Start", @type = "date" } })
                                            @Html.ValidationMessageFor(model => model.Position_Information.From_date, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.Position_Information.Years, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.Position_Information.Years, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "Yearr", @type = "number", @min = 0 } })

                                            @Html.ValidationMessageFor(model => model.Position_Information.Years, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Position_Information.To_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.Position_Information.To_date, new { @value = "01/01/1900", htmlAttributes = new { @class = "form-control EndDate", @onchange = "Save2()", @id = "End", @type = "date" } })
                                            @Html.ValidationMessageFor(model => model.Position_Information.To_date, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.Position_Information.Months, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.Position_Information.Months, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "months", @type = "number", @min = 0 } })

                                            @Html.ValidationMessageFor(model => model.Position_Information.Months, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Position_Information.working_system, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EnumDropDownListFor(model => model.Position_Information.working_system, new { @class = "select2" })
                                            @Html.ValidationMessageFor(model => model.Position_Information.working_system, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Position_Information.Position_status, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EnumDropDownListFor(model => model.Position_Information.Position_status, new { @class = "select2" })
                                            @Html.ValidationMessageFor(model => model.Position_Information.Position_status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div>
                                        <ul class="nav nav-tabs bordered">

                                            <li>
                                                <a href="#Pension">
                                                    <span class="visible-xs"><i class="entypo-user"></i></span>
                                                    <span class="hidden-xs">End of Service</span>
                                                </a>
                                            </li>
                                        </ul>

                                        <div class="tab-pane" id="Pension">


                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Position_Information.End_of_service_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.Position_Information.End_of_service_date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.Position_Information.End_of_service_date, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Position_Information.Last_working_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.Position_Information.Last_working_date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.Position_Information.Last_working_date, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Position_Information.EOS_reasons, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.Position_Information.EOS_reasons, new { htmlAttributes = new { @class = "form-control", @readonly = "true", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.Position_Information.EOS_reasons, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Position_Information.Commnets, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.Position_Information.Commnets, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.Position_Information.Commnets, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                        </div>
                                    </div>


                                </div>


                                <div class="tab-pane" id="PersonnelInformation">

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Position_Transaction_Information.Position_transaction_no, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.Position_Transaction_Information.Position_transaction_no, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.Position_Transaction_Information.Position_transaction_no, "", new { @class = "text-danger" })
                                        </div>

                                        @Html.LabelFor(model => model.Position_Transaction_Information.Position_transaction, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.Position_Transaction_Information.Position_transaction, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.Position_Transaction_Information.Position_transaction, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Position_Transaction_Information.Transaction_Type, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EnumDropDownListFor(model => model.Position_Transaction_Information.Transaction_Type, new { @class = "select2" })
                                            @Html.ValidationMessageFor(model => model.Position_Transaction_Information.Transaction_Type, "", new { @class = "text-danger" })
                                        </div>

                                        @Html.LabelFor(model => model.Position_Transaction_Information.Fixed_basic_salary_by, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EnumDropDownListFor(model => model.Position_Transaction_Information.Fixed_basic_salary_by, new { @class = "select2" })
                                            @Html.ValidationMessageFor(model => model.Position_Transaction_Information.Fixed_basic_salary_by, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div>
                                        <ul class="nav nav-tabs bordered">

                                            <li>
                                                <a href="#HiringInformation">
                                                    <span class="visible-xs"><i class="entypo-user"></i></span>
                                                    <span class="hidden-xs">Personnel committee</span>
                                                </a>
                                            </li>
                                        </ul>

                                        <div class="tab-pane" id="HiringInformation">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Position_Transaction_Information.Resolution_number, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.Position_Transaction_Information.Resolution_number, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.Position_Transaction_Information.Resolution_number, "", new { @class = "text-danger" })
                                                </div>

                                                @Html.LabelFor(model => model.Position_Transaction_Information.Resolution_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.Position_Transaction_Information.Resolution_date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.Position_Transaction_Information.Resolution_date, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Position_Transaction_Information.Activity_number, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.Position_Transaction_Information.Activity_number, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.Position_Transaction_Information.Activity_number, "", new { @class = "text-danger" })
                                                </div>
                                            </div>


                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Position_Transaction_Information.Memo_number, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.Position_Transaction_Information.Memo_number, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.Position_Transaction_Information.Memo_number, "", new { @class = "text-danger" })
                                                </div>

                                                @Html.LabelFor(model => model.Position_Transaction_Information.Memo_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.Position_Transaction_Information.Memo_date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.Position_Transaction_Information.Memo_date, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div>
                                            <ul class="nav nav-tabs bordered">

                                                <li>
                                                    <a href="#Pension">
                                                        <span class="visible-xs"><i class="entypo-user"></i></span>
                                                        <span class="hidden-xs">Ministry</span>
                                                    </a>
                                                </li>
                                            </ul>

                                            <div class="tab-pane" id="Pension">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Position_Transaction_Information.Recommended_by, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Position_Transaction_Information.Recommended_by, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.Position_Transaction_Information.Recommended_by, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Position_Transaction_Information.Approved_by, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Position_Transaction_Information.Approved_by, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.Position_Transaction_Information.Approved_by, "", new { @class = "text-danger" })
                                                    </div>
                                                    @Html.LabelFor(model => model.Position_Transaction_Information.Approved_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Position_Transaction_Information.Approved_date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto", @autocomplete = "off" } })
                                                        @Html.ValidationMessageFor(model => model.Position_Transaction_Information.Approved_date, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <div class="col-md-offset-2 col-md-10">
                                                        <input type="submit" value="Edit" class="btn btn-success" />
                                                        <a href="@Url.Action("index","Employee_Positions_Profile",new {id=ViewBag.idemp})" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>Back</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>

    </section>
</div>

@section scripts{}




<script>
    function employee() {
  
        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {
              
                $("#employeename").val(result.Name);
                $("#codeid").val(result.Employee_Positions_Profile.Code);
                $("#employeeId").attr("readonly", true);
                $("#employeeId").prop("readonly", true);
            },
            error: function () {
       
                $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }
    function CountryName() {
            var id = $("#country").val();

        $.ajax({
            type: "post",
            url: "/Helper/GetJobtitle",
            dataType: "json",
            data: { "id": id },
            success: function (result) {
                
                $("#countryname1").val(result.name);
                $("#area").removeAttr("disabled");
                //     areaName(result.Organization_unit_codeID.worklocationid)
                areaname(result.joblevelsetupID)

                getter(result.ID)
                getstate(result.Organization_unit_codeID)
            },
            error: function () {
              
                $("#countryname1").val(" ");
            }
        });
    }
    CountryName()
    function areaname(did) {
     

        $.ajax({
            type: "post",
            url: "/helper/getjoblevel",
            data: { "id": did },
            success: function (result) {
          
                $("#ter").removeAttr("disabled");
                $("#area").select2("val", result.ID);
                $("#areaname1").val(result.Name);
                $("#area").attr("readonly", true);
                $("#area").prop("readonly", true);
            },
            error: function () {
          
                $("#areaname1").val(" ");
            }
        });
    }
    function getter(did) {
     
        var oo = $("#employeeId").val();
        var id = $("#ter").val();

        $.ajax({
            type: "post",
            url: "/Helper/GetJobSolts",
            data: { "id": did, "did": oo },
            success: function (result) {
      
                var finalresult = "";
                finalresult = "<option value='0' > Choose Slot desc </option>";
                $.each(result, function (key, value) {
                    if (value.ID == parseInt(@Model.Position_Information.SlotdescId)) {
                        finalresult += "<option selected value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
                    }
                    else {
                        finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
                    }
                    //"--"+ value.slot_description +
                });
                $("#ter").html(finalresult);
                //      $("#citeid").removeAttr("disabled");
                //$("#ter").select2("val", result.ID);
                slot();
                //    getallcite(result.ID);
                $("#state").removeAttr("disabled");

            },
            error: function () {
           
                $("#tername").val(" ");
            }
        });
    }
    function slot() {

        var id = $("#ter").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetSolt",
            data: { "id": id },
            success: function (result) {
            
                $("#tername").val(result.slot_code);
            },
            error: function () {
        
                $("#tername").val(" ");
            }
        });
    }
    function getstate(did) {
      
        $.ajax({
            type: "post",
            url: "/Helper/GetOrganizationChart",
            data: { "id": did },
            success: function (result) {
                
                $("#state").select2("val", result.ID);

                $("#citeid").removeAttr("disabled");
                $("#statename").val(result.unit_Description);
                getcite(result.worklocationid)
                getcite2(result.worklocationid)
                $("#state").attr("readonly", true);
                $("#state").prop("readonly", true);
            },
            error: function () {
         
                $("#statename").val(" ");
            }
        });
    }

    function getcite(did) {
      
        $.ajax({
            type: "post",
            url: "/Helper/GetWorklocation",
            data: { "id": did },
            success: function (result) {
              
                $("#citeid").select2("val", result.ID);
                $("#cityname").val(result.Name);
                $("#citeid").attr("readonly", true);
                $("#citeid").prop("readonly", true);
                $("#citeid2").removeAttr("disabled");
            },
            error: function () {
          
                $("#cityname").val(" ");
            }
        });
    }

    function getcite2(did) {
      
        $.ajax({
            type: "post",
            url: "/Helper/GetWorklocation",
            data: { "id": did },
            success: function (result) {
                

                $("#citeid2").select2("val", result.ID);
                $("#cityname2").val(result.Name);

            },
            error: function () {
           
                $("#cityname2").val(" ");
            }
        });
    }
    
    function GetDataById()
    {
        let x = window.location.href.split('/')[5];
        $.ajax({
            type: "post",
            url: "/Helper/GetDataById",
            data: { "id": x },
            success: function (result) {
                debugger
                if (result) {
                    var date = parseJsonDate(result.To_date)
                    var month;
                    if ((date.getMonth()+1)<10) {
                        month ="0"+(date.getMonth()+1).toString();
                    }
                }
                else
                    month =date.getMonth()+1;
                var d =date.getFullYear()+ '-'+ month + '-' +date.getDate();
                $("#End").val(d);
                Save();
                Save2();
                console.log(result);
            },
            error: function () {
                debugger
            
            }
        });
    }
 //   GetDataById();
    function parseJsonDate(jsonDateString)
    {
        return new Date(parseInt(jsonDateString.replace('/Date(', '')));
    }
    ///////////////////////////////////
    function GetDataById2() {
        let x = window.location.href.split('/')[5];
        $.ajax({
            type: "post",
            url: "/Helper/GetDataById",
            data: { "id": x },
            success: function (result) {
                debugger
                if (result) {
                    var date = parseJsonDate(result.From_date)
                    var month;
                    if ((date.getMonth() + 1) < 10) {
                        month = "0" + (date.getMonth() + 1).toString();
                    }
                }
                else
                    month = date.getMonth() + 1;
                var d = date.getFullYear() + '-' + month + '-' + date.getDate();
                $("#Start").val(d);
                GetDataById();
                console.log(result);
            },
            error: function () {
                debugger

            }
        });
    }
  //  GetDataById2();
    function parseJsonDate(jsonDateString) {
        return new Date(parseInt(jsonDateString.replace('/Date(', '')));
    }
    function Save() {

        debugger
        var StartDate = new Date($(".StartDate").val());
        var EndDate = new Date($(".EndDate").val());

        //   var from = $(".StartDate").val();
        //   var to = $(".EndDate").val();
        var from = StartDate.getDate() + '-' + (StartDate.getMonth() + 1) + '-' + StartDate.getFullYear();
        var to = EndDate.getDate() + '-' + (EndDate.getMonth() + 1) + '-' + EndDate.getFullYear();
        if (to > from) {
            var diffTime = Math.abs(EndDate - StartDate);
            var Days = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;
            var months = Math.floor(Days / 31);
            var years = Math.floor(months / 12);
            $("#Yearr").val(years);
            $("#months").val(months - (years * 12));
        }
        else {
            $("#Yearr").val("0");
            $("#months").val("0");
        }
    };
    function Save2() {
        debugger
        var StartDate = new Date($(".StartDate").val());
        var EndDate = new Date($(".EndDate").val());
        //   var x = $(".StartDate").val().split('/');
        //    var StartDate = new Date(x[2],x[1]-1,x[0]);
        //    var EndDate = new Date($(".EndDate").val());
        var from = StartDate.getDate() + '-' + (StartDate.getMonth() + 1) + '-' + StartDate.getFullYear();
        var to = EndDate.getDate() + '-' + (EndDate.getMonth() + 1) + '-' + EndDate.getFullYear();
        //   var from = $(".StartDate").val();
        //     var to = $(".EndDate").val();
        if (to > from) {
            var diffTime = Math.abs(EndDate - StartDate);
            var Days = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;
            var months = Math.floor(Days / 31);
            var years = Math.floor(months / 12);
            $("#Yearr").val(years);
            $("#months").val(months - (years * 12));
        }
        else {
            $("#Yearr").val("0");
            $("#months").val("0");
        }
    };
   </script>

<script>
    $(document).ready(function () {

       
       
       
        GetDataById2();
    });
</script>