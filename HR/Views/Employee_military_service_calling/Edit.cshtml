@model HR.Models.Employee_military_service_calling

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}


@Scripts.Render("~/bundles/jqueryval")
<div class="content-wrapper">

    <section class="content-header">
        <h1>
            Edit Employee Military Service Calling
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Edit", "Employee_military_service_calling", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m => m.Employee_Profile.ID);
                        <div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Employee_ProfileId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.DropDownListFor(m => m.Employee_ProfileId, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), "Select Employee", new { @readonly = true, @class = "select2", @onchange = "employee()", id = "employeeId8" })
                                
                                </div>
                                <div class="col-md-4" style="color:black">
                                    <button type="submit" id="btnSubmit" name="Command" value="Submit" class="btn btn-success">Employee Profile</button>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                </div>
                            </div>




                            <div class="form-group">
                                @Html.LabelFor(model => model.Start_date, htmlAttributes: new { @class = "control-label col-md-2" })                    
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Start_date, new { @value = "01/01/1900", htmlAttributes = new { @class = "form-control StartDate", @onchange = "Save()", @id = "Start", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.Start_date, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.Years, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Years, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "Yearr", @type = "number", @min = 0 } })

                                    @Html.ValidationMessageFor(model => model.Years, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.End_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.End_date, new { @value = "01/01/1900", htmlAttributes = new { @class = "form-control EndDate", @onchange = "Save2()", @id = "End", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.End_date, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.Months, htmlAttributes: new { @class = "control-label col-md-1" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.Months, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "months", @type = "number", @min = 0 } })

                                    @Html.ValidationMessageFor(model => model.Months, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.Days, htmlAttributes: new { @class = "control-label col-md-1" })
                                <div class="col-md-2">
                                    @Html.EditorFor(model => model.Days, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "Days" } })
                                    @Html.ValidationMessageFor(model => model.Days, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.TextAreaFor(model => model.Comments, 4, 55, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Edit" class="btn btn-success" />
                                <a href="@Url.Action("index","Employee_military_service_calling",new {id=ViewBag.idemp})" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>Back</a>
                            </div>
                        </div>
                    </div>

                }

            </div>

        </div>

    </section>
</div>
@section scripts{}



<script>
    $(document).ready(function () {
        $("#employeeId8").attr("disabled", true);
        GetDataById2();
        GetDataById();
        Save();
        Save2();
    });
</script>

<script>
    function employee() {
        debugger
        var id = $("#employeeId8").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#employeename").val(result.Name);
                $("#codeid").val(result.Employee_Positions_Profile.Code);
                //$("#employeeId").attr("readonly", true);
                //$("#employeeId").prop("readonly", true);
            },
            error: function () {
                debugger
                $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }




    function GetDataById() {
        debugger
        let x = window.location.href.split('/')[5];
        $.ajax({
            type: "post",
            url: "/Helper/GetDataByIdmilitary",
            data: { "id": x },
            success: function (result) {
                debugger
                if (result) {
                    var date = parseJsonDate(result.End_date)
                    month = date.getMonth() + 1;
                    if (parseInt(month) < 10) {
                        month = '0' + month;
                    }
                    day = date.getDate();
                    if (parseInt(day) < 10) {
                        day = '0' + day;
                    }
                    var d = date.getFullYear() + '-' + month + '-' + day;//date.getDate()
                    document.getElementById("End").value = d;
                    var ttttt = $("#End").val();
                    Save();
                    Save2();
                }
            },
            error: function () {
                debugger

            }
        });
    }
   //    GetDataById();
    function parseJsonDate(jsonDateString) {
        return new Date(parseInt(jsonDateString.replace('/Date(', '')));
    }
    ///////////////////////////////////
    function GetDataById2() {
        debugger
        let x = window.location.href.split('/')[5];
        $.ajax({
            type: "post",
            url: "/Helper/GetDataByIdmilitary",
            data: { "id": x },
            success: function (result) {
                debugger
                if (result) {
                    var date = parseJsonDate(result.Start_date)
                    month = date.getMonth() + 1;
                    if (parseInt(month) < 10) {
                        month = '0' + month;
                    }
                    day = date.getDate();
                    if (parseInt(day) < 10) {
                        day = '0' + day;
                    }
                    var d = date.getFullYear() + '-' + month + '-' + day;//date.getDate()
                    document.getElementById("Start").value = d;
                    var ttttt = $("#Start").val();
                    GetDataById();
                
                }
            },
            error: function () {
                debugger

            }
        });
    }
   //   GetDataById2();
    function parseJsonDate(jsonDateString) {
        return new Date(parseInt(jsonDateString.replace('/Date(', '')));
    }




        function Save() {

        debugger
        var StartDate = new Date($(".StartDate").val());
        var EndDate = new Date($(".EndDate").val());

        //   var from = $(".StartDate").val();
        //   var to = $(".EndDate").val();
        var from = StartDate.getDate() + '-' + (StartDate.getMonth() + 1) + '-' + StartDate.getFullYear();
        var to = EndDate.getDate() + '-' + (EndDate.getMonth() + 1) + '-' + EndDate.getFullYear();
        if (to > from) {
            var diffTime = Math.abs(EndDate - StartDate);
            var Days = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;
            var months = Math.floor(Days / 31);
            var years = Math.floor(months / 12);
            $("#Yearr").val(years);
            $("#months").val(months - (years * 12));
            $("#Days").val(Days - (months * 31) - (years * 12));
        }
        else {
            $("#Yearr").val("0");
            $("#months").val("0");
            $("#Days").val("0");
        }
    };
        function Save2() {
        debugger
        var StartDate = new Date($(".StartDate").val());
        var EndDate = new Date($(".EndDate").val());
        //   var x = $(".StartDate").val().split('/');
        //    var StartDate = new Date(x[2],x[1]-1,x[0]);
        //    var EndDate = new Date($(".EndDate").val());
        var from = StartDate.getDate() + '-' + (StartDate.getMonth() + 1) + '-' + StartDate.getFullYear();
        var to = EndDate.getDate() + '-' + (EndDate.getMonth() + 1) + '-' + EndDate.getFullYear();
        //   var from = $(".StartDate").val();
        //     var to = $(".EndDate").val();
        if (to > from) {
            var diffTime = Math.abs(EndDate - StartDate);
            var Days = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;
            var months = Math.floor(Days / 31);
            var years = Math.floor(months / 12);
            $("#Yearr").val(years);
            $("#months").val(months - (years * 12));
            $("#Days").val(Days - (months * 31) - (years * 12));
       
        }
        else {
            $("#Yearr").val("0");
            $("#months").val("0");
            $("#Days").val("0");
        }
    };
</script>

