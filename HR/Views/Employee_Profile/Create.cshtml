@model HR.Models.ViewModel.Employee_Profile_VM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}

@Scripts.Render("~/bundles/jqueryval")

<script>
    $(function () {
        debugger
        $(".name,.name2,.name3,.name4,.name5").keyup(function (w) {
            var x = $(".name").val();
            var y = $(".name2").val();
            var z = $(".name3").val();
            var a = $(".name4").val();
            var b = $(".name5").val();
            $("#full").val(x + " " + y +" "+ z + " " + a + " " + b);
        });
    })
</script>
<script>
    $(function () {
        debugger
        $(".arabic,.arabic2,.arabic3,.arabic4,.arabic5").keyup(function (w) {
            var x = $(".arabic").val();
            var y = $(".arabic2").val();
            var z = $(".arabic3").val();
            var a = $(".arabic4").val();
            var b = $(".arabic5").val();
            $("#full2").val(x + " " + y +" "+ z + " " + a + " " + b);
        });
    })
</script>
<div class="content-wrapper">

    <section class="content-header">
        <h1>
            Create Employee Profile
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Create", "Employee_Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div>
                            <ul class="nav nav-tabs bordered">
                                <!-- available classes "bordered", "right-aligned" -->
                                <li class="active">
                                    <a href="#home" data-toggle="tab">
                                        <span class="visible-xs"><i class="entypo-home"></i></span>
                                        <span class="hidden-xs">Home</span>
                                    </a>
                                </li>
                                <li>
                                    <a href="#profile" data-toggle="tab">
                                        <span class="visible-xs"><i class="entypo-user"></i></span>
                                        <span class="hidden-xs">Date</span>
                                    </a>
                                </li>
                                <li>
                                    <a href="#Ability" data-toggle="tab">
                                        <span class="visible-xs"><i class="entypo-user"></i></span>
                                        <span class="hidden-xs">Ability</span>
                                    </a>
                                </li>
                                <li>
                                    <a href="#PersonnelInformation" data-toggle="tab">
                                        <span class="visible-xs"><i class="entypo-user"></i></span>
                                        <span class="hidden-xs">Personnel Information</span>
                                    </a>
                                </li>
                            
                            </ul>
                            <div class="tab-content">
                                <div class="tab-pane active" id="home" style="overflow: hidden;width: auto;height: auto;">

                                    <div class="col-md-4" style="color:black">
                                        <button type="submit" id="btnSubmit" name="Command" value="Submit" class="btn btn-success">Address Profile</button>
                                    </div>
                                    <div class="col-md-4" style="color:black">
                                        <button type="submit" id="btnSubmit" name="Command2" value="Submit" class="btn btn-success">Employee Qualification Profile</button>
                                    </div>
                                    <div class="col-md-4" style="color:black">
                                        <button type="submit" id="btnSubmit" name="Command3" value="Submit" class="btn btn-success">Employee Positions Profile</button>
                                    </div>
                                    <div class="col-md-4" style="color:black">
                                        <button type="submit" id="btnSubmit" name="Command4" value="Submit" class="btn btn-success">Employee Family Profile</button>
                                    </div>
                                    <div class="col-md-4" style="color:black">
                                        <button type="submit" id="btnSubmit" name="Command5" value="Submit" class="btn btn-success">Employee Experience Profile</button>
                                    </div>
                                    <div class="col-md-4" style="color:black">
                                        <button type="submit" id="btnSubmit" name="Command6" value="Submit" class="btn btn-success">Employee Contact Profile</button>
                                    </div>
                                    <div class="col-md-4" style="color:black">
                                        <button type="submit" id="btnSubmit" name="Command7" value="Submit" class="btn btn-success">Employee Contract Profile</button>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee_Profile.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Employee_Profile.Code, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.Employee_Profile.Code, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <h3>Latin Name</h3>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee_Profile.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.Employee_Profile.Name, new { htmlAttributes = new { @class = "form-control name" } })
                                            @Html.ValidationMessageFor(model => model.Employee_Profile.Name, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.Employee_Profile.Name, new { htmlAttributes = new { @class = "form-control name2" } })
                                            @Html.ValidationMessageFor(model => model.Employee_Profile.Name, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.Employee_Profile.Name, new { htmlAttributes = new { @class = "form-control name3" } })
                                            @Html.ValidationMessageFor(model => model.Employee_Profile.Name, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.Employee_Profile.Name, new { htmlAttributes = new { @class = "form-control name4" } })
                                        </div>
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.Employee_Profile.Name, new { htmlAttributes = new { @class = "form-control name5" } })
                                        </div>
                                    </div>
                               
                                

                                        <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.Full_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.Employee_Profile.Full_Name, new { htmlAttributes = new { @class = "form-control", @id = "full" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Full_Name, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.Employee_Profile.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Surname, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                               @*@style= "direction:ltr";margin - left:200px; text -align: left;**@

                                                <h3>Arabic Name</h3>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.Arabic, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-2">
                                                        @Html.EditorFor(model => model.Employee_Profile.Arabic, new { htmlAttributes = new { @class = "form-control; arabic" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Arabic, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-md-2">
                                                        @Html.EditorFor(model => model.Employee_Profile.Arabic, new { htmlAttributes = new { @class = "form-control; arabic2" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Arabic, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-md-2">
                                                        @Html.EditorFor(model => model.Employee_Profile.Arabic, new { htmlAttributes = new { @class = "form-control; arabic3" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Arabic, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-md-2">
                                                        @Html.EditorFor(model => model.Employee_Profile.Arabic, new { htmlAttributes = new { @class = "form-control; arabic4" } })
                                                    </div>
                                                    <div class="col-md-2">
                                                        @Html.EditorFor(model => model.Employee_Profile.Arabic, new { htmlAttributes = new { @class = "form-control; arabic5" } })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.Full, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.Employee_Profile.Full, new { htmlAttributes = new { @class = "form-control", @id = "full2" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Full, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.Sur_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.Employee_Profile.Sur_Name, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Sur_Name, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        @Html.EnumDropDownListFor(model => model.Employee_Profile.Gender, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Gender, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.Marital_Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        @Html.EnumDropDownListFor(model => model.Employee_Profile.Marital_Status, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Marital_Status, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.ReligionId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.DropDownListFor(m => m.Employee_Profile.ReligionId, new SelectList(ViewBag.Religion, "ID", "Code"), "Select Religion", new { @class = "select2", @onchange = "Religion()", @id = "religion" })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.ReligionId, "", new { @class = "text-danger" })
                                                        <input type="text" value=" " class="form-control" id="ReligionName" disabled />
                                                    </div>

                                                    @Html.LabelFor(model => model.Employee_Profile.NationalityId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.DropDownListFor(m => m.Employee_Profile.NationalityId, new SelectList(ViewBag.Nationality, "ID", "Code"), "Select Nationality", new { @class = "select2", @onchange = "Nationality()", @id = "nationality" })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.NationalityId, "", new { @class = "text-danger" })
                                                        <input type="text" value=" " class="form-control" id="NationalityName" disabled />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.Blood_group, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EnumDropDownListFor(model => model.Employee_Profile.Blood_group, new { htmlAttributes = new { @class = "form-control" } })

                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Blood_group, "", new { @class = "text-danger" })
                                                    </div>

                                                    @Html.LabelFor(model => model.Employee_Profile.Citizen, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.CheckBoxFor(model => model.Employee_Profile.Citizen, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Citizen, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                           <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.Birth_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Employee_Profile.Birth_date, new {  htmlAttributes = new { @class = "form-control datepicker", @id = "dateto" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Birth_date, "", new { @class = "text-danger" })
                                                    </div>

                                                    @Html.LabelFor(model => model.Employee_Profile.ID_number_in_attendance_machine, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Employee_Profile.ID_number_in_attendance_machine, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.ID_number_in_attendance_machine, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.ID_type, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        @Html.EnumDropDownListFor(model => model.Employee_Profile.ID_type, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.ID_type, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.ID_number, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.Employee_Profile.ID_number, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.ID_number, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>


                                        

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Employee_Profile.Issue_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Employee_Profile.Issue_date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Issue_date, "", new { @class = "text-danger" })
                                                    </div>

                                                    @Html.LabelFor(model => model.Employee_Profile.Expire_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Employee_Profile.Expire_date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto" } })
                                                        @Html.ValidationMessageFor(model => model.Employee_Profile.Expire_date, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <div class="col-md-offset-2 col-md-10">
                                                        <input type="submit" value="Create" class="btn btn-success" />
                                                        <a href="@Url.Action("index","Employee_Profile")" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>Back</a>
                                                    </div>
                                                </div>
                                            </div>

                                        <div class="tab-pane" id="profile">


                                        <div class="form-group">
                @Html.LabelFor(model => model.Employee_Profile.Countryid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">

                    @Html.DropDownListFor(m => m.Employee_Profile.Countryid, new SelectList(ViewBag.Country, "ID", "Code"), "Select Country", new { @class = "select2", @onchange = "CountryName()", id = "country" })
                    @Html.ValidationMessageFor(model => model.Employee_Profile.Countryid, "", new { @class = "text-danger" })
                    <input type="text" value=" " class="form-control" id="countryname" disabled />

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Employee_Profile.Areaid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.Employee_Profile.Areaid, new SelectList(ViewBag.Area, "ID", "Code"), "Select Area", new { @class = "select2", @onchange = "areaName()", id = "area", @disabled = true })
                    @Html.ValidationMessageFor(model => model.Employee_Profile.Areaid, "", new { @class = "text-danger" })
                    <input type="text" value=" " class="form-control" id="areaname" disabled />

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Employee_Profile.the_statesid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.Employee_Profile.the_statesid, new SelectList(ViewBag.the_states, "ID", "Code"), "Select state", new { @class = "select2", @onchange = "getstate()", id = "state", @disabled = true })
                    @Html.ValidationMessageFor(model => model.Employee_Profile.the_statesid, "", new { @class = "text-danger" })
                    <input type="text" value=" " class="form-control" id="statename" disabled />

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Employee_Profile.Territoriesid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.Employee_Profile.Territoriesid, new SelectList(ViewBag.Territories, "ID", "Code"), "Select Territoer", new { @class = "select2", @onchange = "getter()", id = "ter", @disabled = true })
                    @Html.ValidationMessageFor(model => model.Employee_Profile.Territoriesid, "", new { @class = "text-danger" })
                    <input type="text" value=" " class="form-control" id="tername" disabled />

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Employee_Profile.citiesid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.Employee_Profile.citiesid, new SelectList(ViewBag.cities, "ID", "Code"), "Select Cite", new { @class = "select2", @onchange = "getcite()", id = "citeid", @disabled = true })
                    @Html.ValidationMessageFor(model => model.Employee_Profile.citiesid, "", new { @class = "text-danger" })
                    <input type="text" value=" " class="form-control" id="cityname" disabled />

                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Employee_Profile.Countryaddressid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">

                    @Html.DropDownListFor(m => m.Employee_Profile.Countryaddressid, new SelectList(ViewBag.Country, "ID", "Code"), "Select Country", new { @class = "select2", @onchange = "CountryNamea()", id = "countrya" })
                    @Html.ValidationMessageFor(model => model.Employee_Profile.Countryaddressid, "", new { @class = "text-danger" })
                    <input type="text" value=" " class="form-control" id="countrynamea" disabled />

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Employee_Profile.Areaaddressid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.Employee_Profile.Areaaddressid, new SelectList(ViewBag.Area, "ID", "Code"), "Select Area", new { @class = "select2", @onchange = "areaNamea()", id = "areaa", @disabled = true })
                    @Html.ValidationMessageFor(model => model.Employee_Profile.Areaaddressid, "", new { @class = "text-danger" })
                    <input type="text" value=" " class="form-control" id="areanamea" disabled />

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Employee_Profile.the_statesaddressid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.Employee_Profile.the_statesaddressid, new SelectList(ViewBag.the_states, "ID", "Code"), "Select state", new { @class = "select2", @onchange = "getstatea()", id = "statea", @disabled = true })
                    @Html.ValidationMessageFor(model => model.Employee_Profile.the_statesaddressid, "", new { @class = "text-danger" })
                    <input type="text" value=" " class="form-control" id="statenamea" disabled />

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Employee_Profile.Territoriesaddressid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.Employee_Profile.Territoriesaddressid, new SelectList(ViewBag.Territories, "ID", "Code"), "Select Territoer", new { @class = "select2", @onchange = "gettera()", id = "tera", @disabled = true })
                    @Html.ValidationMessageFor(model => model.Employee_Profile.Territoriesaddressid, "", new { @class = "text-danger" })
                    <input type="text" value=" " class="form-control" id="ternamea" disabled />

                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Employee_Profile.citiesaddressid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.Employee_Profile.citiesaddressid, new SelectList(ViewBag.cities, "ID", "Code"), "Select Cite", new { @class = "select2", @onchange = "getcitea()", id = "citeida", @disabled = true })
                    @Html.ValidationMessageFor(model => model.Employee_Profile.citiesaddressid, "", new { @class = "text-danger" })
                    <input type="text" value=" " class="form-control" id="citynamea" disabled />

                </div>
            </div>



                                    </div>

                                <div class="tab-pane" id="Ability">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee_Profile.Health_Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EnumDropDownListFor(model => model.Employee_Profile.Health_Status, new { @onchange = "goes($(this))", htmlAttributes = new {  @class = "form-control"} })
                                            @Html.ValidationMessageFor(model => model.Employee_Profile.Health_Status, "", new { @class = "text-danger" })
                                        </div>
                                        <a href="#Ability" data-toggle="tab" aria-expanded="true">     <div class="col-md-6" id="ability">Reason, Description, Regesrtation Number, Regesrtation Date</div></a>

                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Ability.Inability_reason, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Ability.Inability_reason, new { htmlAttributes = new { @class = "form-control",id="reason", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.Ability.Inability_reason, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Ability.Inability_description, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Ability.Inability_description, new { htmlAttributes = new { @class = "form-control de" ,id="descriptiony", @readonly = true} })
                                            @Html.ValidationMessageFor(model => model.Ability.Inability_description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Ability.registration_number, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Ability.registration_number, new { htmlAttributes = new {id= "registration" ,@class = "form-control", @readonly = true, @type = "number", @min = 0 } })
                                            @Html.ValidationMessageFor(model => model.Ability.registration_number, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Ability.registration_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Ability.registration_date, new { htmlAttributes = new { @class = "form-control datepicker nv", @id = "dateto" , @readonly = true} })
                                            @Html.ValidationMessageFor(model => model.Ability.registration_date, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    </div>

                                <div class="tab-pane" id="PersonnelInformation">

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Personnel_Information.Main_Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EnumDropDownListFor(model => model.Personnel_Information.Main_Status, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Personnel_Information.Main_Status, "", new { @class = "text-danger" })
                                        </div>

                                        @Html.LabelFor(model => model.Personnel_Information.Sub_Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EnumDropDownListFor(model => model.Personnel_Information.Sub_Status, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Personnel_Information.Sub_Status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div>
                                        <ul class="nav nav-tabs bordered">

                                            <li>
                                                <a href="#HiringInformation">
                                                    <span class="visible-xs"><i class="entypo-user"></i></span>
                                                    <span class="hidden-xs">Hiring Information</span>
                                                </a>
                                            </li>                  
                                            </ul>

                                            <div class="tab-pane" id="HiringInformation">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Personnel_Information.Hire_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Personnel_Information.Hire_Date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto" } })
                                                        @Html.ValidationMessageFor(model => model.Personnel_Information.Hire_Date, "", new { @class = "text-danger" })
                                                    </div>

                                                    @Html.LabelFor(model => model.Personnel_Information.Join_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Personnel_Information.Join_Date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto" } })
                                                        @Html.ValidationMessageFor(model => model.Personnel_Information.Join_Date, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Personnel_Information.Sector_Join_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Personnel_Information.Sector_Join_Date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto" } })
                                                        @Html.ValidationMessageFor(model => model.Personnel_Information.Sector_Join_Date, "", new { @class = "text-danger" })
                                                    </div>

                                                    @Html.LabelFor(model => model.Personnel_Information.Pratice_profession_Out_Of_Company, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.CheckBoxFor(model => model.Personnel_Information.Pratice_profession_Out_Of_Company, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Personnel_Information.Pratice_profession_Out_Of_Company, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Personnel_Information.Social_Insurance, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Personnel_Information.Social_Insurance, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Personnel_Information.Social_Insurance, "", new { @class = "text-danger" })
                                                    </div>

                                                    @Html.LabelFor(model => model.Personnel_Information.Social_Insurance_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Personnel_Information.Social_Insurance_Date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto" } })
                                                        @Html.ValidationMessageFor(model => model.Personnel_Information.Social_Insurance_Date, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Personnel_Information.Service_period_ins_Y, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Personnel_Information.Service_period_ins_Y, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0 } })
                                                        @Html.ValidationMessageFor(model => model.Personnel_Information.Service_period_ins_Y, "", new { @class = "text-danger" })
                                                    </div>

                                                    @Html.LabelFor(model => model.Personnel_Information.Service_period_ins_M, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Personnel_Information.Service_period_ins_M, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0 } })
                                                        @Html.ValidationMessageFor(model => model.Personnel_Information.Service_period_ins_M, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Personnel_Information.Boarding_membership, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EnumDropDownListFor(model => model.Personnel_Information.Boarding_membership, new { @onchange = "go($(this))", htmlAttributes = new {  @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Personnel_Information.Boarding_membership, "", new { @class = "text-danger" })
                                                    </div>

                                                    @Html.LabelFor(model => model.Personnel_Information.Boarding_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Personnel_Information.Boarding_Date, new { htmlAttributes = new {@class = "form-control sd @*datepicker*@", id = "dateto" , @readonly = true } })
                                                        @Html.ValidationMessageFor(model => model.Personnel_Information.Boarding_Date, "", new { @class = "text-danger" })
                                                    </div>
                                                    </div>
                                                </div>

                                        <div>
                                            <ul class="nav nav-tabs bordered">

                                                <li>
                                                    <a href="#Pension">
                                                        <span class="visible-xs"><i class="entypo-user"></i></span>
                                                        <span class="hidden-xs">Pension and end of service information </span>
                                                    </a>
                                                </li>
                                            </ul>

                                            <div class="tab-pane" id="Pension">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Service_Information.Pension, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Service_Information.Pension, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Service_Information.Pension, "", new { @class = "text-danger" })
                                                    </div>

                                                    @Html.LabelFor(model => model.Service_Information.Have_pension, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.CheckBoxFor(model => model.Service_Information.Have_pension, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Service_Information.Have_pension, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Service_Information.EOS_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.Service_Information.EOS_date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto" } })
                                                        @Html.ValidationMessageFor(model => model.Service_Information.EOS_date, "", new { @class = "text-danger" })
                                                    </div>
                                                    </div>
                                                 
                                                
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Service_Information.Retired_expected_EOS, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-4">
                                                        @Html.EditorFor(model => model.Service_Information.Retired_expected_EOS, new { htmlAttributes = new { @class = "form-control @*datepicker*@", @id = "dateto", @readonly = true } })
                                                        @Html.ValidationMessageFor(model => model.Service_Information.Retired_expected_EOS, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Service_Information.Last_working_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.Service_Information.Last_working_date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto" } })
                                                        @Html.ValidationMessageFor(model => model.Service_Information.Last_working_date, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Service_Information.CurrencyId, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-3">
                                                        @Html.DropDownListFor(m => m.Service_Information.CurrencyId, new SelectList(ViewBag.Currency, "ID", "Code"), "Select Religion", new { @class = "select2", @onchange = "Currency()", @id = "CurrencyId" })
                                                        @Html.ValidationMessageFor(model => model.Service_Information.CurrencyId, "", new { @class = "text-danger" })
                                                        <input type="text" value=" " class="form-control" id="CurrencyName" disabled />
                                                    </div>
                                                    </div>


                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Service_Information.Is_merits_The_date_of_death, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-8">
                                                        @Html.CheckBoxFor(model => model.Service_Information.Is_merits_The_date_of_death, new { disabled = "disabled" ,htmlAttributes = new { @class = "form-control"  } })
                                                        @Html.ValidationMessageFor(model => model.Service_Information.Is_merits_The_date_of_death, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                        </div>
                    </div>
                }

            </div>

        </div>

    </section>
</div>

@section scripts{}

<script>
  $(function () {
      CKEDITOR.replace('Description');
  });
</script>


<script>
    function Religion()
    {
        debugger
        var id = $("#religion").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetReligion",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#ReligionName").val(result.Name);
            },
            error: function () {
                debugger
                $("#ReligionName").val(" ");
            }
        });
    }
    Religion();
</script>
<script>
    function Nationality()
    {
        debugger
        var id = $("#nationality").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetNationality",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#NationalityName").val(result.Name);
            },
            error: function () {
                debugger
                $("#NationalityName").val(" ");
            }
        });
    }
    Nationality();
</script>

<script>
    function CountryName() {
        debugger
        var id = $("#country").val();
        $("#area").empty();
        $("#state").empty();
        $("#ter").empty();
        $("#citeid").empty();
        $("#area").select2("val", "");
        $("#state").select2("val", "");
        $("#ter").select2("val", "");
        $("#citeid").select2("val", "");
        $("#statename").val(" ");
        $("#areaname").val(" ");
        $("#tername").val(" ");
        $("#cityname").val(" ");
        $.ajax({
            type: "post",
            url: "/Helper/GetCountry",
            data: { "id": id },
            success: function (result) {
                debugger

                $("#countryname").val(result.Name);
                getallarea(result.ID);
            },
            error: function () {
                debugger
                $("#countryname").val(" ");
            }
        });
    }
    function getallarea(id)
    {
        debugger
       var countryname=
       $.ajax({
          type: "post",
          url: "/Helper/getareabycountry",
          data: { "id": id, "flag": "0" },
          success: function (result) {
              debugger
              $("#area").removeAttr("disabled");
              var finalresult = "<option value='0' > Choose area </option>";
              $.each(result, function (key, value) {
                   finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
              });
              $("#area").html(finalresult);
              $("#area").select2("val", "0");
          },
          error: function () {
              debugger
              $("#area").val(" ");
          }
      });
    }
    function areaName() {
        debugger
        var id = $("#area").val();
        $("#state").empty();
        $("#ter").empty();
        $("#citeid").empty();
        $("#state").select2("val", "");
        $("#ter").select2("val", "");
        $("#citeid").select2("val", "");
        $("#statename").val(" ");
        $("#tername").val(" ");
        $("#cityname").val(" ");
        $.ajax({
            type: "post",
            url: "/Helper/getarea",
            data: { "id": id },
            success: function (result) {
                debugger


                $("#areaname").val(result.Name);
                getallstate(result.ID);
            },
            error: function () {
                debugger
                $("#areaname").val(" ");
            }
        });
    }
    function getallstate(id)
    {
        debugger
        $.ajax({
            type: "post",
            url: "/Helper/getstatebycountry",
            data: { "id": id, "flag": "0" },
            success: function (result) {
                debugger
                $("#state").removeAttr("disabled");
                var finalresult = "<option value='0' > Choose state </option>";
                $.each(result, function (key, value) {
                     finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
                });
                $("#state").html(finalresult);
                $("#state").select2("val", "0");
            },
            error: function () {
                debugger
                $("#state").val(" ");
            }
        });
    }
    function getstate()
    {
        debugger
        var id = $("#state").val();
        $("#ter").empty();
        $("#citeid").empty();
        $("#ter").select2("val", "");
        $("#citeid").select2("val", "");
        $("#tername").val(" ");
        $("#cityname").val(" ");
        $.ajax({
            type: "post",
            url: "/Helper/Getstate",
            data: { "id": id },
            success: function (result) {
                debugger

                $("#ter").removeAttr("disabled");
                $("#statename").val(result.Name);
                getallter(result.ID);
            },
            error: function () {
                debugger
                $("#statename").val(" ");
            }
        });
    }
    function getallter(id)
    {
        debugger
  

        $.ajax({
            type: "post",
            url: "/Helper/getallter",
            data: { "id": id, "flag": "0" },
            success: function (result) {
                debugger
                $("#ter").removeAttr("disabled");
                var finalresult = "<option value='0' > Choose ter </option>";
                $.each(result, function (key, value) {
                    finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
                });
                $("#ter").html(finalresult);
                $("#ter").select2("val", "0");
            },
            error: function () {
                debugger
                $("#ter").val(" ");
            }
        });

    }
    function getter()
    {
        debugger
        var id = $("#ter").val();
        $("#citeid").empty();
        $("#citeid").select2("val", "");
        $("#cityname").val(" ");
        $.ajax({
            type: "post",
            url: "/Helper/Getter",
            data: { "id": id },
            success: function (result) {
                debugger

                $("#citeid").removeAttr("disabled");
                $("#tername").val(result.Name);
                getallcite(result.ID);

            },
            error: function () {
                debugger
                $("#tername").val(" ");
            }
        });
    }

    function getallcite(id) {
        debugger
        $.ajax({
            type: "post",
            url: "/Helper/getcitybyTerritories",
            data: { "id": id, "flag": "0" },
            success: function (result) {
                debugger
                $("#citeid").removeAttr("disabled");
                var finalresult = "<option value='0' > Choose Cite </option>";
                $.each(result, function (key, value) {
                    finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
                });
                $("#citeid").html(finalresult);
                $("#citeid").select2("val", "0");
            },
            error: function () {
                debugger
                $("#citeid").val(" ");
            }
        });

    }

    function getcite() {
        debugger
        var id = $("#citeid").val();
        $.ajax({
            type: "post",
            url: "/Helper/Getcite",
            data: { "id": id },
            success: function (result) {
                debugger


                $("#cityname").val(result.Name);

            },
            error: function () {
                debugger
                $("#cityname").val(" ");
            }
        });
    }

</script>

<script>
    debugger
    var id = $("#country").val();
    $.ajax({
        type: "post",
        url: "/Helper/GetCountry",
        data: { "id": id },
        success: function (result) {
            debugger
            $("#area").removeAttr("disabled");
            $("#countryname").val(result.Name);
        },
        error: function () {
            debugger
            $("#countryname").val(" ");
        }
    });

    var id = $("#area").val();
    $.ajax({
        type: "post",
        url: "/Helper/getarea",
        data: { "id": id },
        success: function (result) {
            debugger
            $("#state").removeAttr("disabled");
            $("#areaname").val(result.Name);

        },
        error: function () {
            debugger
            $("#areaname").val(" ");
        }
    });

    var id = $("#state").val();
    $.ajax({
        type: "post",
        url: "/Helper/Getstate",
        data: { "id": id },
        success: function (result) {
            debugger
            $("#ter").removeAttr("disabled");
            $("#statename").val(result.Name);

        },
        error: function () {
            debugger
            $("#statename").val(" ");
        }
    });
    var id = $("#ter").val();
    $.ajax({
        type: "post",
        url: "/Helper/Getter",
        data: { "id": id },
        success: function (result) {
            debugger
            $("#tername").val(result.Name);

        },
        error: function () {
            debugger
            $("#tername").val(" ");
        }
    });
    var id = $("#citeid").val();
    $.ajax({
        type: "post",
        url: "/Helper/Getcite",
        data: { "id": id },
        success: function (result) {
            debugger
            $("#citeid").removeAttr("disabled");
            $("#cityname").val(result.Name);

        },
        error: function () {
            debugger
            $("#cityname").val(" ");
        }
    });
</script>

<script>
    function CountryNamea() {
        debugger
        var id = $("#countrya").val();
        $("#areaa").empty();
        $("#statea").empty();
        $("#tera").empty();
        $("#citeida").empty();
        $("#areaa").select2("val", "");
        $("#statea").select2("val", "");
        $("#tera").select2("val", "");
        $("#citeida").select2("val", "");
        $("#statenamea").val(" ");
        $("#areanamea").val(" ");
        $("#ternamea").val(" ");
        $("#citynamea").val(" ");
        $.ajax({
            type: "post",
            url: "/Helper/GetCountry",
            data: { "id": id },
            success: function (result) {
                debugger

                $("#countrynamea").val(result.Name);
                getallareaa(result.ID);
            },
            error: function () {
                debugger
                $("#countrynamea").val(" ");
            }
        });
    }
    function getallareaa(id)
    {
        debugger
       var countryname=
       $.ajax({
          type: "post",
          url: "/Helper/getareabycountry",
          data: { "id": id, "flag": "0" },
          success: function (result) {
              debugger
              $("#areaa").removeAttr("disabled");
              var finalresult = "<option value='0' > Choose area </option>";
              $.each(result, function (key, value) {
                   finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
              });
              $("#areaa").html(finalresult);
              $("#areaa").select2("val", "0");
          },
          error: function () {
              debugger
              $("#areaa").val(" ");
          }
      });
    }
    function areaNamea() {
        debugger
        var id = $("#areaa").val();
        $("#statea").empty();
        $("#tera").empty();
        $("#citeida").empty();
        $("#statea").select2("val", "");
        $("#tera").select2("val", "");
        $("#citeida").select2("val", "");
        $("#statenamea").val(" ");
        $("#ternamea").val(" ");
        $("#citynamea").val(" ");
        $.ajax({
            type: "post",
            url: "/Helper/getarea",
            data: { "id": id },
            success: function (result) {
                debugger


                $("#areanamea").val(result.Name);
                getallstatea(result.ID);
            },
            error: function () {
                debugger
                $("#areanamea").val(" ");
            }
        });
    }
    function getallstatea(id)
    {
        debugger
        $.ajax({
            type: "post",
            url: "/Helper/getstatebycountry",
            data: { "id": id, "flag": "0" },
            success: function (result) {
                debugger
                $("#statea").removeAttr("disabled");
                var finalresult = "<option value='0' > Choose state </option>";
                $.each(result, function (key, value) {
                     finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
                });
                $("#statea").html(finalresult);
                $("#statea").select2("val", "0");
            },
            error: function () {
                debugger
                $("#statea").val(" ");
            }
        });
    }
    function getstatea()
    {
        debugger
        var id = $("#statea").val();
        $("#tera").empty();
        $("#citeida").empty();
        $("#tera").select2("val", "");
        $("#citeida").select2("val", "");
        $("#ternamea").val(" ");
        $("#citynamea").val(" ");
        $.ajax({
            type: "post",
            url: "/Helper/Getstate",
            data: { "id": id },
            success: function (result) {
                debugger

                $("#tera").removeAttr("disabled");
                $("#statenamea").val(result.Name);
                getalltera(result.ID);
            },
            error: function () {
                debugger
                $("#statenamea").val(" ");
            }
        });
    }
    function getalltera(id)
    {
        debugger


        $.ajax({
            type: "post",
            url: "/Helper/getallter",
            data: { "id": id, "flag": "0" },
            success: function (result) {
                debugger
                $("#tera").removeAttr("disabled");
                var finalresult = "<option value='0' > Choose ter </option>";
                $.each(result, function (key, value) {
                    finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
                });
                $("#tera").html(finalresult);
                $("#tera").select2("val", "0");
            },
            error: function () {
                debugger
                $("#tera").val(" ");
            }
        });

    }
    function gettera()
    {
        debugger
        var id = $("#tera").val();
        $("#citeida").empty();
        $("#citeida").select2("val", "");
        $("#citynamea").val(" ");
        $.ajax({
            type: "post",
            url: "/Helper/Getter",
            data: { "id": id },
            success: function (result) {
                debugger

                $("#citeida").removeAttr("disabled");
                $("#ternamea").val(result.Name);
                getallcitea(result.ID);

            },
            error: function () {
                debugger
                $("#ternamea").val(" ");
            }
        });
    }

    function getallcitea(id) {
        debugger
        $.ajax({
            type: "post",
            url: "/Helper/getcitybyTerritories",
            data: { "id": id, "flag": "0" },
            success: function (result) {
                debugger
                $("#citeida").removeAttr("disabled");
                var finalresult = "<option value='0' > Choose Cite </option>";
                $.each(result, function (key, value) {
                    finalresult += "<option value='" + value.ID + "' >" + "[  " + value.Code + " ]</option>";
                });
                $("#citeida").html(finalresult);
                $("#citeida").select2("val", "0");
            },
            error: function () {
                debugger
                $("#citeida").val(" ");
            }
        });

    }

    function getcitea() {
        debugger
        var id = $("#citeida").val();
        $.ajax({
            type: "post",
            url: "/Helper/Getcite",
            data: { "id": id },
            success: function (result) {
                debugger


                $("#citynamea").val(result.Name);

            },
            error: function () {
                debugger
                $("#citynamea").val(" ");
            }
        });
    }

</script>

<script>
    debugger
    var id = $("#countrya").val();
    $.ajax({
        type: "post",
        url: "/Helper/GetCountry",
        data: { "id": id },
        success: function (result) {
            debugger
            $("#areaa").removeAttr("disabled");
            $("#countrynamea").val(result.Name);
        },
        error: function () {
            debugger
            $("#countrynamea").val(" ");
        }
    });

    var id = $("#areaa").val();
    $.ajax({
        type: "post",
        url: "/Helper/getarea",
        data: { "id": id },
        success: function (result) {
            debugger
            $("#statea").removeAttr("disabled");
            $("#areanamea").val(result.Name);

        },
        error: function () {
            debugger
            $("#areanamea").val(" ");
        }
    });

    var id = $("#statea").val();
    $.ajax({
        type: "post",
        url: "/Helper/Getstate",
        data: { "id": id },
        success: function (result) {
            debugger
            $("#tera").removeAttr("disabled");
            $("#statenamea").val(result.Name);

        },
        error: function () {
            debugger
            $("#statenamea").val(" ");
        }
    });
    var id = $("#tera").val();
    $.ajax({
        type: "post",
        url: "/Helper/Getter",
        data: { "id": id },
        success: function (result) {
            debugger
            $("#ternamea").val(result.Name);

        },
        error: function () {
            debugger
            $("#ternamea").val(" ");
        }
    });
    var id = $("#citeida").val();
    $.ajax({
        type: "post",
        url: "/Helper/Getcite",
        data: { "id": id },
        success: function (result) {
            debugger
            $("#citeida").removeAttr("disabled");
            $("#citynamea").val(result.Name);

        },
        error: function () {
            debugger
            $("#citynamea").val(" ");
        }
    });
</script>
<script>
    function Currency()
    {
        debugger
        var id = $("#CurrencyId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetCurrency",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#CurrencyName").val(result.Name);
            },
            error: function () {
                debugger
                $("#CurrencyName").val(" ");
            }
        });
    }
    Currency();
</script>
<script>
    function go(input)
    {
        debugger

        var value = input.val();
        if(value==1)
        {
            $(".sd").attr("readonly", true);
        }
        else if(value==2)
        {
            $(".sd").removeAttr("readonly");
        }
        else if (value == 3)
        {
            $(".sd").removeAttr("readonly");
        }
    }
</script>
<script>
    debugger    
    function goes(input)
    {
        debugger

        var value = input.val();
        if(value==1)
        {
            $("#reason").attr("readonly", true);
            $(".de").attr("readonly", true);
            $("#registration").attr("readonly", true);
            $(".nv").attr("readonly", true);
        }
        else if(value==2)
        {
            $("#reason").removeAttr("readonly", true);
            $(".de").removeAttr("readonly", true);
            $("#registration").removeAttr("readonly", true);
            $(".nv").removeAttr("readonly", true);
        }
        else if (value == 3)
        {
            $("#reason").removeAttr("readonly", true);
            $(".de").removeAttr("readonly", true);
            $("#registration").removeAttr("readonly", true);
            $(".nv").removeAttr("readonly", true);
        }
    }
</script>
