@model HR.Models.request_new_contract

@{
    ViewBag.Title = "edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}

@using HR.Resource;

<script>
    $(document).ready(function () {

        
        employee();
        employee2();
        employee3();
        employee4();
        employee5();
        GetDataById2('@Model.Contract_start_date', "Contract_start_date_D");
        GetDataById2('@Model.Contract_end_date', "Contract_end_date_D");
        GetDataById2('@Model.Medical_date', "Medical_date_D");

        GetDataById2('@Model.Approved_date', "Approved_date_D");
    });

    function GetDataById2(date, id) {
        debugger
        var valx = new Date(date);
        var month;
        if ((valx.getMonth() + 1) < 10) {
            month = "0" + (valx.getMonth() + 1).toString();
        }
        else {
            month = date.getMonth() + 1;
        }
        var day = parseInt(valx.getDate());
        if (day < 10) {
            day = "0" + (valx.getDate()).toString();
        }
        else {
            day = valx.getDate();
        }
        var d = valx.getFullYear() + '-' + month + '-' + day;
        $('#' + id).val(d);
    }

    function employee() {
         
        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {
                 
                $("#employeename").val(result.Name);
                $("#codeid").val(result.Employee_Positions_Profile.Code);
                $("#employeeId").attr("readonly", true);
                $("#employeeId").prop("readonly", true);
            },
            error: function () {
                 
                $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }


    function employee2() {
         
        var id = $("#employeeId2").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {
                 
              //  $("#employeename").val(result.Name);

            },
            error: function () {
                 
            //    $("#employeename").val(" ");
            }
        });
    }


    function employee3() {
         
        var id = $("#employeeId3").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetContract_Type",
            data: { "id": id },
            success: function (result) {
                 
              //  $("#employeename").val(result.Name);

            },
            error: function () {
                 
            //    $("#employeename").val(" ");
            }
        });
    }


    function employee4() {
         
        var id = $("#employeeId4").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetAirports",
            data: { "id": id },
            success: function (result) {
                 
              //  $("#employeename").val(result.Name);

            },
            error: function () {
                 
            //    $("#employeename").val(" ");
            }
        });
    }


    function employee5() {
         
        var id = $("#employeeId5").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetAirports",
            data: { "id": id },
            success: function (result) {
                 
              //  $("#employeename").val(result.Name);

            },
            error: function () {
                 
            //    $("#employeename").val(" ");
            }
        });
    }

    function GetDiffDates(StartDate, EndDate)
    {
        if (StartDate && EndDate)
        {
            $.get("/Employee_military_service_calling/DifferenceTwoDates?StartDate=" + StartDate + '&EndDate=' + EndDate, function (data, status) {

                if (data) {
                    $("#months").val(data.DateDiff.Months);
                    $("#Yearr").val(data.DateDiff.Years);
                }
            });
        }
    }


    function Save()
    {
            var from = $(".StartDate").val();
            var to = $(".EndDate").val();
            if (to > from)
            {
               
                GetDiffDates(from, to);

            }
            else
            {
                $("#Yearr").val("0");
                $("#months").val("0");

            }
    }
    function Save2()
    {
            var from = $(".StartDate").val();
            var to = $(".EndDate").val();
            if (to > from) {
               
                GetDiffDates(from, to);
            }
            else {
                $("#Yearr").val("0");
                $("#months").val("0");
            }
      
    }
</script>
<div class="content-wrapper">

   

    <!-- Main content -->
    <section class="content">
        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("edit", "request_new_contract", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {

                    <div class="sec-nav">
                        <div><i class="far fa-save"></i><button type="submit" class="create-btn">@organ.Save </button></div>
                        <div><i class="fas fa-plus"></i><input type="button" class="create-btn" value="New" /></div>
                        <div><i class="far fa-trash-alt"></i><input type="button" class="create-btn" value="Delete" /></div>
                        <div><i class="fas fa-undo"></i><a style="" href="@Url.Action("index", "request_new_contract")" class="create-btn"> @pers_2.Back</a></div>
                    </div>
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }
                        <section style="margin-top: 30px" class="content-header">
                            <h1>
                                @pers_2.editrequesttonewContract
                            </h1>
                        </section>
                        @Html.HiddenFor(m => m.ID);
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div>
                            <div class="form-group">
                               
                                <div class="col-md-4">
                                    <label>
                                        @pers_2.employee
                                    </label>
                                    @Html.DropDownListFor(m => m.Employee_ProfileId, new SelectList(ViewBag.Employee_Profile, "ID", "Code"),pers_2.employee, new { @readonly = true, @class = "select2", @onchange = "employee()", id = "employeeId" })
                                    @Html.ValidationMessageFor(model => model.Employee_ProfileId, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-4">
                                    <label>
                                        @organ.code
                                    </label>
                                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                </div>
                            </div>

                           
                            <ul class="nav nav-tabs bordered">
                                <!-- available classes "bordered", "right-aligned" -->
                                <li class="active">
                                    <a href="#homee" data-toggle="tab">
                                        <span class="visible-xs"><i class="entypo-home"></i></span>
                                        <span class="hidden-xs">@pers_2.contractinformation</span>
                                    </a>
                                </li>
                                <li>
                                    <a href="#MedicalInformation" data-toggle="tab">
                                        <span class="visible-xs"><i class="entypo-user"></i></span>
                                        <span class="hidden-xs">@pers_2.medicainformation</span>
                                    </a>
                                </li>
                            </ul>
                            <div class="tab-content">
                                <div class="tab-pane active" id="homee" style="overflow: hidden;width: auto;height: auto;">

                                    <div class="form-group">
                                      
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.ContractType
                                            </label>
                                            @Html.DropDownListFor(m => m.ContractTypeId, new SelectList(ViewBag.Contract_Type, "ID", "Code"),pers_2.ContractType, new { @readonly = true, @class = "select2", @onchange = "employee3()", id = "employeeId3" })
                                            @Html.ValidationMessageFor(model => model.ContractTypeId, "", new { @class = "text-danger" })

                                        </div>
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.Employmenttype
                                            </label>
                                            @Html.EnumDropDownListFor(model => model.Employment_type, new { @class = "select2" })
                                            @Html.ValidationMessageFor(model => model.Employment_type, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.Contractstartdate
                                            </label>
                                            @Html.EditorFor(model => model.Contract_start_date, new { htmlAttributes = new { @class = "form-control StartDate yy", @type = "date", @id = "Contract_start_date_D", @Onchange = "Save()" } })
                                            @Html.ValidationMessageFor(model => model.Contract_start_date, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.years
                                            </label>
                                            @Html.EditorFor(model => model.Years, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "Yearr", @type = "number", @min = 0 } })

                                            @Html.ValidationMessageFor(model => model.Years, "", new { @class = "text-danger" })
                                        </div>
                                      
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.months
                                            </label>
                                            @Html.EditorFor(model => model.Months, new { htmlAttributes = new { @readonly = "true", @class = "form-control", id = "months", @type = "number", @min = 0 } })

                                            @Html.ValidationMessageFor(model => model.Months, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                   

                                    

                                    <div class="form-group">
                                    
                                        
                                      
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.Contractenddate
                                            </label>
                                            @Html.EditorFor(model => model.Contract_end_date, new { htmlAttributes = new { @class = "form-control EndDate yyy", @type = "date", @id = "Contract_end_date_D", @Onchange = "Save2()" } })
                                            @Html.ValidationMessageFor(model => model.Contract_end_date, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.Approvedby
                                            </label>
                                            @Html.DropDownListFor(m => m.ApprovedbyId, new SelectList(ViewBag.Approved_date, "ID", "Code"), pers_2.employee, new { @readonly = true, @class = "select2", @onchange = "employee2()", id = "employeeId2" })
                                            @Html.ValidationMessageFor(model => model.ApprovedbyId, "", new { @class = "text-danger" })

                                        </div>
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.Approveddate
                                            </label>
                                            @Html.EditorFor(model => model.Approved_date, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "Approved_date_D" } })
                                            @Html.ValidationMessageFor(model => model.Approved_date, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.notes
                                            </label>
                                            @Html.TextAreaFor(model => model.Notes, 4, 67, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                   

                                   
                                </div>

                                <div class="tab-pane" id="MedicalInformation">

                                    <div class="form-group">
                                    
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.Medicaldate
                                            </label>
                                            @Html.EditorFor(model => model.Medical_date, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "Medical_date_D" } })
                                            @Html.ValidationMessageFor(model => model.Medical_date, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.Medicacommiterecomindation
                                            </label>
                                            @Html.EnumDropDownListFor(model => model.Medical_commite_recomindation, new { @class = "select2" })
                                            @Html.ValidationMessageFor(model => model.Medical_commite_recomindation, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.Medicalentityname
                                            </label>
                                            @Html.EditorFor(model => model.Medical_entity_name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Medical_entity_name, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.Notfireason
                                            </label>
                                            @Html.EditorFor(model => model.Not_fit_reason, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Not_fit_reason, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            <label>
                                                @pers_2.Medicalcommitecomments
                                            </label>
                                            @Html.EditorFor(model => model.Medical_commite_comments, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Medical_commite_comments, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                
                                   
                                   
                                    <div class="form-group">
                                       
                                           <div class="col-md-4">
                                               <label>
                                                   @pers_2.Result
                                               </label>
                                               @Html.EnumDropDownListFor(model => model.Result, new { @class = "select2" })
                                            @Html.ValidationMessageFor(model => model.Result, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>

                }

            </div>

        </div>

    </section>
</div>

@section scripts{}












<style>
    /*Create Page*/


    .sec-nav {
        z-index: 9999;
        position: fixed;
        top: 47px;
        background: #faf9f8;
        border-bottom: 1px solid #bebbb8;
        display: block;
        width: 100%;
        left: 50px;
        padding-left: 10px;
        height: 60px;
        line-height: 60px;
    }

        .sec-nav div {
            display: inline-block;
            padding: 5px 8px;
            width: unset;
            border: 0;
            color: #000;
            font-size: 16px;
            height: 60px;
        }

            .sec-nav div:hover {
                background: #eee;
                color: #000;
            }

                .sec-nav div:hover input {
                    color: #000;
                }

    .create-btn {
        border: 0;
        height: 100%;
        background-color: transparent;
    }

    .sec-nav div svg {
        color: #2266e3;
        font-size: 17px;
    }

    .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
        /*float: unset*/
    }

    label {
        text-align: left;
        font: normal normal 400 12px/18px 'Segoe UI',tahoma,sans-serif;
        color: #605e5c;
        display: block;
        margin-bottom: 0;
        max-width: 220px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-weight: 600;
        margin-top: 15px;
    }

    .col-md-4 {
        width: 20% !important;
    }

    .form-horizontal .form-group {
        margin: 0 !important;
    }

    input {
        height: 35px;
        color: #000;
    }

        input:active {
            border: 1px solid #2266e3;
        }

    .form-group .row > div {
        margin-bottom: 10px;
    }

    .content-wrapper {
        margin-left: 15px;
    }

    h1 {
        margin-top: 40px;
    }
</style>    

