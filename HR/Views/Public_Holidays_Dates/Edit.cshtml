@model HR.Models.Public_Holidays_Dates
@using HR.Resource;
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}

@Scripts.Render("~/bundles/jqueryval")
<link href="~/Content/StyleTableBeneficiary.css" rel="stylesheet" />

<div class="content-wrapper">

    <section class="content-header">
        <h1>
            Edit Public Holidays Dates
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="box">
            <!-- /.box-header -->
            <div class="box-body">
                @using (Html.BeginForm("Edit", "Public_Holidays_Dates", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <input name="ID_5" hidden />
                        <input name="Fromdate" hidden />
                        <input name="Todate" hidden />
                        <input name="Notes" hidden />
                        <input name="locationdown" value="" hidden />

                        <div>



                            <div class="form-group">
                                <label class="control-label col-md-2">Holidays Code</label>
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Holidays_Code, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                    @Html.ValidationMessageFor(model => model.Holidays_Code, "", new { @class = "text-danger" })
                                </div>
                                <label class="control-label col-md-2">Holidays year</label>
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Holidaysyear, new { htmlAttributes = new { @class = "form-control", @number = true } })
                                    @Html.ValidationMessageFor(model => model.Holidaysyear, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-2">Holiday Description</label>
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Holiday_description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Holiday_description, "", new { @class = "text-danger" })
                                </div>

                                <label class="control-label col-md-2">
                                    <span>locations</span>
                                </label>
                                <div class="col-md-3">
                                    @Html.DropDownList("locationdown", Model.selectedlocations ,new { @multiple = "multiple", @required = "required", @class = "select2", @name = "locationdownn", @onchange = "employee3()", id = "employeeId3" })
                                 
                                </div>  
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-2">Holiday Alternative Description</label>
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Holiday_alternative_description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Holiday_alternative_description, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                <label class="control-label col-md-2">
                                    <span>Public_Holiday_Events</span>
                                </label>
                                <div class="col-md-3">
                                    @Html.DropDownList("fd", new SelectList(ViewBag.Public_Holiday_Events, "ID", "Code"), Personnel.SelectFamilyProfile, new { @required = "required", @class = "select2", @onchange = "employee3()", id = "employeeId3" })
                                </div>
                                <div class="col-md-3">
                                    <input type="button" onclick="myibtn()" value="@Personnel.Add" class="btn" />
                                </div>
                            </div>
                            <table id="tb_Holidays" border="1" style="display: table; width:400px;" hidden>
                                <thead id="thead">
                                    <tr>
                                        @*<th></th>*@
                                        <th id="fa">Holidays / Event Code</th>
                                        <th id="na">Holidays / Event Description</th>
                                        <th id="per">From date</th>
                                        <th id="De">To date</th>
                                        <th id="No">Notes</th>
                                        <th id="dele">@Personnel.Delete</th>
                                    </tr>
                                </thead>
                                <tbody id="bodyappend">
                                    @for (var i = 0; i < Model.Append_Public_Holidays_Dates.Count(); i++)
                                    {
                                        @*@Html.HiddenFor(m => m.Append_beneficiary_Family[i].Family_profile);
                   @Html.HiddenFor(m => m.Append_beneficiary_Family[i].Family_name);
                   @Html.HiddenFor(m => m.Append_beneficiary_Family[i].Percentage);
                @Html.HiddenFor(m => m.Append_beneficiary_Family[i].ID);*@
                                        <tr>

                                            <td hidden>
                                                <input name="ID_5" type="text" value="@Model.Append_Public_Holidays_Dates[i].Public_Holiday_Events.ID" readonly/>
                                            </td>
                                            <td>
                                         <input  type="text" value="@Model.Append_Public_Holidays_Dates[i].Public_Holiday_Events.Code" readonly />
                                            </td>
                                            <td>
                                                <input  type="text" value="@Model.Append_Public_Holidays_Dates[i].Public_Holiday_Events.Description" readonly />
                                            </td>
                                            <td>
                                                <input name="Fromdate" class="@Model.Append_Public_Holidays_Dates[i].ID" type="date" value="@Model.Append_Public_Holidays_Dates[i].Fromdate" />
                                            </td>
                                            <td>
                                                <input name="Todate" id="@Model.Append_Public_Holidays_Dates[i].ID" type="date" value="@Model.Append_Public_Holidays_Dates[i].Todate" class="End" />
                                            </td>
                                            <td>
                                      <input name="Notes" type="text" value="@Model.Append_Public_Holidays_Dates[i].Notes" />
                                            </td>
                                            <td>
                                                <input type="button" value="@Personnel.Delete" class="del-btn" onclick="Remove()" id="tt" />
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <div class="form-group" style="margin-top:10px;">
                                <div class="col-md-offset-2 col-md-6">
                                    <div class="col-md-8"></div>
                                    <a href="@Url.Action("index","Public_Holidays_Dates")" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>@Personnel.Back</a>
                                    <button type="submit" id="btnSave" class="btn btn-success" name="Command" value="Save">@Personnel.Edit1</button>

                                </div>
                            </div>

                        </div>

                    </div>

                }

            </div>

        </div>

    </section>
</div>

@section scripts{}
<script>
    $(document).ready(function () {
        GetDataById2();
        GetDataById();
       
   
    });


    
</script>

<script>
    function Remove() {

        //$("#tt").click (function () {
        //   $(this).closest('tr').remove();
        $("#tt").closest('tr').remove();
        //})
    }
    function myibtn()
    {
        debugger
        var Holidays_Event = $("#employeeId3").val();
        var table = $("#tb_Holidays td");

        $.ajax({
            type: "post",
            url: "/Helper/GetPublic_Holiday_Events",
            data: { "id": Holidays_Event },
            success: function (result)
            {
                var pp = $("#bodyappend").find("tr");
                var flag = 0;
                for (var o = 0; o < pp.length; o++) {
                    debugger
                    var inputs = pp[o].children;
                    ID_ = inputs[0].children;
                    if (parseInt(ID_[0].value) == result.ID) {
                        flag = 1;
                    }
                }
                if (flag == 0) {
                    if (result.ID = result.ID) {
                        $("#tb_Holidays").show();
                        $("#thead").show();

                        var T = "";
                        T = "<tr><td hidden><input type='text' name='ID_5' value='" + result.ID + "' hidden/></td><td><input type='text' value='" + result.Code + "' readonly class='cs'/></td><td><input type='text' value='" + result.Description + "' readonly/><td><input type='date' name='Fromdate' class='Start'/></td><td><input type='date' name='Todate' class='End' /></td> <td><input type='text' name='Notes'/></td><td><input type='button' class='del-btn tb-btn' value='@Personnel.Delete'/></td></tr>";
                        $("#tb_Holidays").append(T)
                    }
                }

            },
            error: function ()
            {

                //    $("#employeename").val(" ");
            }
        });
        $("#tb_Holidays").on('click', '.del-btn', function () {
            $(this).closest('tr').remove();


        })
    }
    function employee3() {

        var id = $("#employeeId3").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetPublic_Holiday_Events",
            data: { "id": id },
            success: function (result) {

              //  $("#employeename").val(result.Name);

            },
            error: function () {

            //    $("#employeename").val(" ");
            }
        });
    }
    function GetDataById() {
        debugger
        let x = window.location.href.split('/')[5];
        $.ajax({
            type: "post",
            url: "/Helper/GetDataByIdAppendPublicHolidays",
            data: { "id": x },
            success: function (result) {

             
                debugger
                if (result) {
                    $.each(result, function (i, r) {
                        debugger
                        var date = parseJsonDate(r.todate)
                        month = date.getMonth() + 1;
                        if (parseInt(month) < 10) {
                            month = '0' + month;
                        }
                        day = date.getDate();
                        if (parseInt(day) < 10) {
                            day = '0' + day;
                        }


                        //     month = date.getMonth() + 1;
                        var d = date.getFullYear() + '-' + month + '-' + day;
                        var T = $('#' + r.id);
                        $('#' + r.id).val(d);
                    });
                    debugger
                   
                  
                    console.log(result);
                }
            },
            error: function () {


            }
        });
    }
    //   GetDataById();
    function parseJsonDate(jsonDateString) {
        return new Date(parseInt(jsonDateString.replace('/Date(', '')));
    }
    ///////////////////////////////////
    function GetDataById2() {
        debugger
        let x = window.location.href.split('/')[5];
        $.ajax({
            type: "post",
            url: "/Helper/GetDataByIdAppendPublicHolidays",
            data: { "id": x },
            success: function (result) {
                debugger
                if (result) {
                    $.each(result, function (i, r) {
                        debugger
                        var date = parseJsonDate(r.fromdate)
                        month = date.getMonth() + 1;
                        if (parseInt(month) < 10) {
                            month = '0' + month;
                        }
                        day = date.getDate();
                        if (parseInt(day) < 10) {
                            day = '0' + day;
                        }


                        //     month = date.getMonth() + 1;
                        var d = date.getFullYear() + '-' + month + '-' + day;
                        var t = $('.' + r.id);
                        $('.' + r.id).val(d);
                    });
                }
            },
            error: function () {


            }
        });
    }
    //  GetDataById2();
    function parseJsonDate(jsonDateString) {
        return new Date(parseInt(jsonDateString.replace('/Date(', '')));
    }
</script>
