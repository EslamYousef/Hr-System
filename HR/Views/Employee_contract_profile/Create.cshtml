@model HR.Models.Employee_contract_profile

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}

@Scripts.Render("~/bundles/jqueryval")


<div class="content-wrapper">

    <section class="content-header">
        <h1>
            Create Employee Contract Profile
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Create", "Employee_contract_profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
                        @Html.HiddenFor(m => m.Employee_ProfileId);

                            <div>
                                
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee_ProfileId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(m => m.Employee_ProfileId, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), "Select Employee", new { @readonly = true, @class = "select2", @onchange = "employee()", id = "employeeId" })
                                            @Html.ValidationMessageFor(model => model.Employee_ProfileId, "", new { @class = "text-danger" })

                                        </div>                                
                                            <div class="col-md-4" style="color:black">
                                                <button type="submit" id="btnSubmit" name="Command" value="Submit" class="btn btn-success">Employee Profile</button>
                                            </div>
                                        </div>
                                     
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                        @*<div class="form-group">
                                            @Html.LabelFor(model => model.Contract, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Contract, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Contract, "", new { @class = "text-danger" })
                                            </div>
                                        </div>*@

                                    <ul class="nav nav-tabs bordered">
                                        <!-- available classes "bordered", "right-aligned" -->
                                        <li class="active">
                                            <a href="#home" data-toggle="tab">
                                                <span class="visible-xs"><i class="entypo-home"></i></span>
                                                <span class="hidden-xs">Contract Information</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="#MedicalInformation" data-toggle="tab">
                                                <span class="visible-xs"><i class="entypo-user"></i></span>
                                                <span class="hidden-xs">Medical Information</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="#AnnualLeaveBalance" data-toggle="tab">
                                                <span class="visible-xs"><i class="entypo-user"></i></span>
                                                <span class="hidden-xs">Annual Leave Balance</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="#AnnualTickets" data-toggle="tab">
                                                <span class="visible-xs"><i class="entypo-user"></i></span>
                                                <span class="hidden-xs">Annual Tickets</span>
                                            </a>
                                        </li>
                                    </ul>
                                <div class="tab-content">
                                    <div class="tab-pane active" id="home" style="overflow: hidden;width: auto;height: auto;">

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ContractTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-3">
                                                @Html.DropDownListFor(m => m.ContractTypeId, new SelectList(ViewBag.Contract_Type, "ID", "Code"), "Select Contract Type", new { @readonly = true, @class = "select2", @onchange = "employee3()", id = "employeeId3" })
                                                @Html.ValidationMessageFor(model => model.ContractTypeId, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Employment_type, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EnumDropDownListFor(model => model.Employment_type, new  { @class = "select2"  })
                                                @Html.ValidationMessageFor(model => model.Employment_type, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                 
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Contract_start_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Contract_start_date, new { @value = "01/01/1900" , htmlAttributes = new { @class = "form-control  StartDate yy", @onchange = "Save()",@id= "Start",@type="date", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.Contract_start_date, "", new { @class = "text-danger" })
                                            </div>
                                            @Html.LabelFor(model => model.Years, htmlAttributes: new {  @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Years, new { htmlAttributes = new { @readonly = "true", @class = "form-control",id="Yearr", @type = "number", @min = 0 } })

                                                @Html.ValidationMessageFor(model => model.Years, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Contract_end_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Contract_end_date, new { @value = "01/01/1900", htmlAttributes = new {@class= "form-control  EndDate yyy", @onchange = "Save2()", @id = "End", @type = "date", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.Contract_end_date, "", new { @class = "text-danger" })
                                            </div>
                                            @Html.LabelFor(model => model.Months, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Months, new { htmlAttributes = new {@readonly="true", @class = "form-control", id = "months", @type = "number", @min = 0 } })

                                                @Html.ValidationMessageFor(model => model.Months, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ApprovedbyId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-3">
                                                @Html.DropDownListFor(m => m.ApprovedbyId, new SelectList(ViewBag.Approved_date, "ID", "Code"), "Select Employee", new { @readonly = true, @class = "select2", @onchange = "employee2()", id = "employeeId2", @autocomplete = "off" })
                                                @Html.ValidationMessageFor(model => model.ApprovedbyId, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Approved_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Approved_date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.Approved_date, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.TextAreaFor(model => model.Notes,4,55, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                                            </div>
                                        </div>                          
                                    </div>

                                    <div class="tab-pane" id="MedicalInformation">                          

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Medical_date, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.Medical_date, new { htmlAttributes = new { @class = "form-control datepicker", @id = "dateto", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.Medical_date, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Medical_commite_recomindation, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EnumDropDownListFor(model => model.Medical_commite_recomindation, new { @class = "select2"   })
                                                @Html.ValidationMessageFor(model => model.Medical_commite_recomindation, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Medical_entity_name, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Medical_entity_name, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.Medical_entity_name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Not_fit_reason, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.TextAreaFor(model => model.Not_fit_reason,4,55, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.Not_fit_reason, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Medical_commite_comments, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.TextAreaFor(model => model.Medical_commite_comments,4,55, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.Medical_commite_comments, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Result, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EnumDropDownListFor(model => model.Result, new {  @class = "select2" })
                                                @Html.ValidationMessageFor(model => model.Result, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
</div>

                                    <div class="tab-pane" id="AnnualLeaveBalance">
                                        <ul class="nav nav-tabs bordered">

                                            <li>
                                                <a href="#HiringInformation">
                                                    <span class="visible-xs"><i class="entypo-user"></i></span>
                                                    <span class="hidden-xs">Leave Balances</span>
                                                </a>
                                            </li>
                                        </ul>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Days_Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Days_Balance, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @autocomplete = "off" } })

                                                @Html.ValidationMessageFor(model => model.Days_Balance, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Days_Per_Period, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Days_Per_Period, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @autocomplete = "off" } })

                                                @Html.ValidationMessageFor(model => model.Days_Per_Period, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        </div>



                                    <div class="tab-pane" id="AnnualTickets">
                                        <ul class="nav nav-tabs bordered">

                                            <li>
                                                <a href="#HiringInformation">
                                                    <span class="visible-xs"><i class="entypo-user"></i></span>
                                                    <span class="hidden-xs">Employee Tickets</span>
                                                </a>
                                            </li>
                                        </ul>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Tickets_No, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Tickets_No, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @autocomplete = "off" } })

                                                @Html.ValidationMessageFor(model => model.Tickets_No, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Tickets_Per_Period, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Tickets_Per_Period, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @autocomplete = "off" } })

                                                @Html.ValidationMessageFor(model => model.Tickets_Per_Period, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Tickets_Class_Tpyeemp, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EnumDropDownListFor(model => model.Tickets_Class_Tpyeemp, new {  @class = "select2"  })
                                                @Html.ValidationMessageFor(model => model.Tickets_Class_Tpyeemp, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FromAirpotId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-3">
                                                @Html.DropDownListFor(m => m.FromAirpotId, new SelectList(ViewBag.From_Airport, "ID", "Code"), "Select From Airport", new { @readonly = true, @class = "select2", @onchange = "employee4()", id = "employeeId4" })
                                                @Html.ValidationMessageFor(model => model.FromAirpotId, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ToAirpotId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-3">
                                                @Html.DropDownListFor(m => m.ToAirpotId, new SelectList(ViewBag.To_Airport, "ID", "Code"), "Select To Airport", new { @readonly = true, @class = "select2", @onchange = "employee5()", id = "employeeId5" })
                                                @Html.ValidationMessageFor(model => model.ToAirpotId, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                   
                                        <ul class="nav nav-tabs bordered">

                                            <li>
                                                <a href="#HiringInformation">
                                                    <span class="visible-xs"><i class="entypo-user"></i></span>
                                                    <span class="hidden-xs">Family Tickets</span>
                                                </a>
                                            </li>
                                        </ul>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Adult_Tickets_No, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Adult_Tickets_No, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @autocomplete = "off" } })

                                                @Html.ValidationMessageFor(model => model.Adult_Tickets_No, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Child_Tickets_No, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Child_Tickets_No, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 0, @autocomplete = "off" } })

                                                @Html.ValidationMessageFor(model => model.Child_Tickets_No, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Tickets_Class_Tpyefam, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EnumDropDownListFor(model => model.Tickets_Class_Tpyefam, new { @class = "select2", @autocomplete = "off" })
                                                @Html.ValidationMessageFor(model => model.Tickets_Class_Tpyefam, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="Create" class="btn btn-success" />
                                                <a href="@Url.Action("index","Employee_contract_profile",new {id=ViewBag.idemp})" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>Back</a>
                                            </div>
                                        </div>
                                    </div>

                                    </div>
                                    </div>
                                </div> 
               
                }

            </div>

        </div>

    </section>
</div>

@section scripts{}

<script>
    $(document).ready(function () {
        $("#employeeId").attr("disabled", true);
        Save();
        Save2();
    });
</script>

<script>
    function employee() {
        debugger
        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#employeename").val(result.Name);
                $("#codeid").val(result.Employee_Positions_Profile.Code);
                $("#employeeId").attr("readonly", true);
                $("#employeeId").prop("readonly", true);
            },
            error: function () {
                debugger
                $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }

    function employee2() {
        debugger
        var id = $("#employeeId2").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {
                debugger
              //  $("#employeename").val(result.Name);
                
            },
            error: function () {
                debugger
            //    $("#employeename").val(" ");
            }
        });
    }

    function employee3() {
        debugger
        var id = $("#employeeId3").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetContract_Type",
            data: { "id": id },
            success: function (result) {
                debugger
              //  $("#employeename").val(result.Name);

            },
            error: function () {
                debugger
            //    $("#employeename").val(" ");
            }
        });
    }

    function employee4() {
        debugger
        var id = $("#employeeId4").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetAirports",
            data: { "id": id },
            success: function (result) {
                debugger
            },
            error: function () {
                debugger
            }
        });
    }

    function employee5() {
        debugger
        var id = $("#employeeId5").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetAirports",
            data: { "id": id },
            success: function (result) {
                debugger

            },
            error: function () {
                debugger
            }
        });
    }
  
            function Save(){
            var StartDate = new Date($(".StartDate").val());
            var EndDate = new Date($(".EndDate").val());

            var from = $(".StartDate").val();
            var to = $(".EndDate").val();

            if (to >  from) {
                var diffTime = Math.abs(EndDate - StartDate);
                var Days = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;
                var months = Math.floor(Days / 31);
                var years = Math.floor(months / 12);
                $("#Yearr").val(years);
                $("#months").val(months-(years * 12));
            }
            else {
                $("#Yearr").val("0");
                $("#months").val("0");
            }         
        };
    
            function Save2(){
            var StartDate = new Date($(".StartDate").val());
            var EndDate = new Date($(".EndDate").val());

            var from = $(".StartDate").val();
            var to = $(".EndDate").val();
            if (to > from) {
                var diffTime = Math.abs(EndDate - StartDate);
                var Days = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;
                var months = Math.floor(Days / 31);
                var years = Math.floor(months / 12);
                $("#Yearr").val(years);
                $("#months").val(months - (years * 12));
            }
            else {
                $("#Yearr").val("0");
                $("#months").val("0");
            }
        };
    
</script>










