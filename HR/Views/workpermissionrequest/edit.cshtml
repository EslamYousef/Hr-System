@model HR.Models.Time_management.workpermissionrequest



@{
    ViewBag.Title = "create";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}
@using HR.Resource;
<div class="content-wrapper">

    <section class="content-header">
        <h1>
            @pers_2.workpermissionrequest
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("edit", "workpermissionrequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="sec-nav">
                        <div><i class="far fa-save"></i><button type="submit" class="create-btn" /> @organ.Save</div>
                        <div><i class="fas fa-plus"></i><a href="@Url.Action("create", "workpermissionrequest")" class="create-btn">@pers_2.new_</a></div>
                        <div><i class="far fa-trash-alt"></i><input type="button" href="@Url.Action("index","workpermissionrequest")" class="create-btn" value=@organ.delete /></div>
                        <div><i class="fas fa-undo"></i><a style="" href="@Url.Action("index", "workpermissionrequest")" class="create-btn"> @pers_2.Back</a></div>

                    </div>
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <section style="margin-top:40px" class="content-header">
                            <h1>
                                @pers_2.workpermissionrequest
                            </h1>
                        </section>

                        @*////////////////////////
                            ////////////////////////Main
                            ////////////////////////*@

                        <div class="form-group">
                           
                            <div class="col-md-4">
                                <label style="color:red">
                                    @pers_2.numberreq
                                </label>
                                @Html.EditorFor(model => model.number, new { htmlAttributes = new { @readonly = true, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.number, "", new { @class = "text-danger" })
                            </div>


                          

                          
                            <div class="col-md-4">
                                <label style="color:red">
                                    @pers_2.employee
                                </label>
                                @Html.DropDownListFor(m => m.Employee_ProfileID, new SelectList(ViewBag.emp, "ID", "Code"), pers_2.employee, new { @class = "select2" })
                                @Html.ValidationMessageFor(model => model.Employee_ProfileID, "", new { @class = "text-danger" })
                            </div>
                          
                            <div class="col-md-4">
                                <label>
                                    @pers_2.positionprofilenumber
                                </label>
                                @Html.EditorFor(model => model.position_profile_num, new { htmlAttributes = new { @readonly = true, @class = "form-control" } })
                            </div>
                      
                           
                            <div class="col-md-4">
                                <label>
                                    @pers_2.workpermissiontype
                                </label>
                                @Html.EnumDropDownListFor(m => m.work_permission_type, "working permission type", new { @class = "select2" })
                                @Html.ValidationMessageFor(model => model.work_permission_type, "", new { @class = "text-danger" })
                            </div>
                           
                            <div class="col-md-4">
                                <label style="color:red">
                                    <span> @Basic.Request_date </span>
                                </label>
                                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control", @type = "date", id = "date" } })
                                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">

                            
                            <div class="col-md-4">
                                <label>
                                    @pers_2.accomplish
                                </label>
                                @Html.CheckBoxFor(model => model.accomplish, new { htmlAttributes = new { @readonly = true, @class = "form-control" } })
                            </div>
                          
                            <div class="col-md-4">
                                <label>
                                    @pers_2.security
                                </label>
                                @Html.CheckBoxFor(model => model.securty, new { htmlAttributes = new { @readonly = true, @class = "form-control" } })
                            </div>

                    
                              
                                <div class="col-md-4">
                                    <label>
                                        @pers_2.remarks
                                    </label>
                                    @Html.TextAreaFor(model => model.remark, 4, 100, new { htmlAttributes = new { @readonly = true, @class = "form-control" } })
                                </div>

                            </div>
               

                        <ul class="nav nav-tabs bordered">
                            <!-- available classes "bordered", "right-aligned" -->
                            <li class="active">
                                <a href="#planed" data-toggle="tab">
                                    <span class="visible-xs"><i class="entypo-home"></i></span>
                                    <span class="hidden-xs">@pers_2.planedpermission</span>
                                </a>
                            </li>
                            <li>
                                <a href="#meals" data-toggle="tab">
                                    <span class="visible-xs"><i class="entypo-home"></i></span>
                                    <span class="hidden-xs">@pers_2.mealoption</span>
                                </a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div id="planed" class="tab-pane active" style="overflow: hidden;width: auto;height: auto;">
                                <div class="form-group">


                                  
                                    <div class="col-md-4">
                                        <label style="color:red">
                                            <span> @pers_2.fromdate </span>
                                        </label>
                                        @Html.EditorFor(model => model.fromD, new { htmlAttributes = new { @class = "form-control StartDate", @type = "date", id = "fd", Onchange = "Save()" } })
                                        @Html.ValidationMessageFor(model => model.fromD, "", new { @class = "text-danger" })
                                    </div>
                                 
                                    <div class="col-md-4">
                                        <label style="color:red">
                                            <span> @pers_2.todate </span>
                                        </label>
                                        @Html.EditorFor(model => model.toD, new { htmlAttributes = new { @class = "form-control EndDate", @type = "date", id = "td", Onchange = "Save()" } })
                                        @Html.ValidationMessageFor(model => model.toD, "", new { @class = "text-danger" })
                                    </div>

                                  
                                    <div class="col-md-4">
                                        <label>
                                            @pers_2.days
                                        </label>
                                        @Html.EditorFor(model => model.days, new { htmlAttributes = new { id = "day", @readonly = true, @class = "form-control" } })
                                    </div>
                                  
                                    <div class="col-md-4">
                                        <label>
                                            @pers_2.months
                                        </label>
                                        @Html.EditorFor(model => model.month, new { htmlAttributes = new { id = "m", @readonly = true, @class = "form-control" } })
                                    </div>
                                   
                                    <div class="col-md-4">
                                        <label>
                                            @pers_2.years
                                        </label>
                                        @Html.EditorFor(model => model.year, new { htmlAttributes = new { id = "y", @readonly = true, @class = "form-control" } })
                                    </div>
                                </div>

                                <div class="form-group">
                                   <div class="col-md-4">
                                       <label>
                                           @pers_2.fromtime
                                       </label> 
                                        @Html.EditorFor(model => model.fromT, new { htmlAttributes = new { @name = "fromT", id = "fromT", @class = "form-control timepicker", @data_template = "dropdown", @data_show_seconds = "true", @data_show_meridian = "true", @data_minute_step = "1" } })

                                    </div>
                                  
                                    <div class="col-md-4">
                                        <label>
                                            @pers_2.totime
                                        </label>
                                        @Html.EditorFor(model => model.toT, new { htmlAttributes = new { @name = "toT", id = "toT", @class = "form-control timepicker", @data_template = "dropdown", @data_show_seconds = "true", @data_show_meridian = "true", @data_minute_step = "1" } })

                                    </div>
                               
                                
                                    <div class="col-md-4">
                                        <label>
                                            @pers_2.reason
                                        </label>
                                        @Html.TextAreaFor(model => model.reason, 4, 100, new { htmlAttributes = new { @readonly = true, @class = "form-control" } })
                                    </div>

                                </div>

                            </div>

                            <div id="meals" class="tab-pane" style="overflow: hidden;width: auto;height: auto;">

                                <div class="form-group">
                                  
                                    <div class="col-md-4">
                                        <label>
                                            @pers_2.meals
                                        </label>
                                        @Html.CheckBoxFor(model => model.meal, new { @onclick = "sss()", htmlAttributes = new { @class = "form-control newcheck", id = "newcheck" } })
                                    </div>
                             
                                   
                                    <div class="col-md-4">
                                        <label>
                                            @pers_2.lunch_p
                                        </label>
                                        @Html.CheckBoxFor(model => model.lunch_basket, new { htmlAttributes = new { @class = "form-control newcheck", id = "newcheck" } })
                                    </div>
                                   
                                    <div class="col-md-4">
                                        <label>
                                            @pers_2.lunch_p
                                        </label>
                                        @Html.CheckBoxFor(model => model.lunch, new { htmlAttributes = new { @class = "form-control newcheck", id = "newcheck" } })
                                    </div>
                                 
                                    <div class="col-md-4">
                                        <label>
                                            @pers_2.dinner
                                        </label>
                                        @Html.CheckBoxFor(model => model.dinner, new { htmlAttributes = new { @class = "form-control newcheck", id = "newcheck" } })
                                    </div>
                                </div>




                            </div>




                        </div>

                    </div>


                }

            </div>

        </div>

    </section>
</div>

@section scripts{}
<script>
    $(function () {
        GetDataById2('@Model.fromD', "fd");
        GetDataById2('@Model.toD', "td");
        GetDataById2('@Model.date', "date");
        Save();
        if(@Model.fromT.Hours==0)
        {
            var def=12;
            var min=@Model.fromT.Minutes;
            var sec=@Model.fromT.Seconds;

            $("#froT").val(def +":" +min+":"+sec+" AM")
        }
        if(@Model.toT.Hours==0)
        {
            var def=12;
            var min=@Model.toT.Minutes;
            var sec=@Model.toT.Seconds;

            $("#toT").val(def +":" +min+":"+sec+" AM")
        }
        if(@Model.fromT.Hours>12)
        {
            var def=@Model.fromT.Hours-12;
            var min=@Model.fromT.Minutes;
            var sec=@Model.fromT.Seconds;

            $("#froT").val(def +":" +min+":"+sec+" pm")
        }
        if(@Model.toT.Hours>12)
        {
            var def=@Model.toT.Hours-12;
            var min=@Model.toT.Minutes;
            var sec=@Model.toT.Seconds;

            $("#toT").val(def +":" +min+":"+sec+" pm")
        }
    });
    function GetDataById2(date, id) {
        debugger
        var valx = new Date(date);
        var month;
        if ((valx.getMonth() + 1) < 10) {
            month = "0" + (valx.getMonth() + 1).toString();
        }
        else {
            month = date.getMonth() + 1;
        }
        var day = parseInt(valx.getDate());
        if (day < 10) {
            day = "0" + (valx.getDate()).toString();
        }
        else {
            day = valx.getDate();
        }
        var d = valx.getFullYear() + '-' + month + '-' + day;
        $('#' + id).val(d);
    }
    function Save()
    {
        var from = $(".StartDate").val();
        var to = $(".EndDate").val();
        if (to >= from) {
            GetDiffDates(from, to);
        }
        else
        {
            alert(@pers_2.error_date)
            $("#day").val("0");
        }
    }
    function GetDiffDates(StartDate, EndDate) {
        if (StartDate && EndDate) {
            $.get("/Employee_military_service_calling/DifferenceTwoDates?StartDate=" + StartDate + '&EndDate=' + EndDate, function (data, status) {

                if (data) {
                    debugger
                    $("#day").val(data.DateDiff.Days+1);
                    $("#m").val(data.DateDiff.Months);
                    $("#y").val(data.DateDiff.Years);

                }
            });
        }
    }
    function sss() {

        debugger
        var t = $(".newcheck");
        if ($("#newcheck").prop("checked") == true) {
            debugger
            $("#meal").attr("readonly", false);
        }
        else {
            debugger
            $("#meal").select2("val", 0);
            $("#meal").attr("readonly", true);
        }
    }
</script>

<style>
    /*Create Page*/


    .sec-nav {
        z-index: 9999;
        position: fixed;
        top: 47px;
        background: #faf9f8;
        border-bottom: 1px solid #bebbb8;
        display: block;
        width: 100%;
        left: 50px;
        padding-left: 10px;
        height: 60px;
        line-height: 60px;
    }

        .sec-nav div {
            display: inline-block;
            padding: 5px 8px;
            width: unset;
            border: 0;
            color: #000;
            font-size: 16px;
            height: 60px;
        }

            .sec-nav div:hover {
                background: #eee;
                color: #000;
            }

                .sec-nav div:hover input {
                    color: #000;
                }

    .create-btn {
        border: 0;
        height: 100%;
        background-color: transparent;
    }

    .sec-nav div svg {
        color: #2266e3;
        font-size: 17px;
    }

    .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
        /*float: unset*/
    }

    label {
        text-align: left;
        font: normal normal 400 12px/18px 'Segoe UI',tahoma,sans-serif;
        color: #605e5c;
        display: block;
        margin-bottom: 0;
        max-width: 220px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-weight: 600;
        margin-top: 15px;
    }

    .form-horizontal .form-group {
        margin: 0 !important;
    }

    input {
        height: 35px;
        color: #000;
    }

        input:active {
            border: 1px solid #2266e3;
        }

    .form-group .row > div {
        margin-bottom: 10px;
    }

    .content-wrapper {
        margin-left: 15px;
    }

    .col-md-4 {
        width: 20% !important;
    }
</style>