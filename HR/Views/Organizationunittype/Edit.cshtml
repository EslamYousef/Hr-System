@model HR.Models.Organization_Unit_Type

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}

@Scripts.Render("~/bundles/jqueryval")
<script>
    CountryName();
    CountryName2();
    function CountryName()
    {
        debugger
        var id= $("#Country").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetunitLevelcode",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#countryname").val(result.Name);
            },
            error: function () {
                debugger
                $("#countryname").val(" ");
            }
        });
    }
    function CountryName2() {
        debugger
        var id = $("#Country2").val();
        $.ajax({
            type: "post",
            url: "/Helper/Getunitschemacode",
            data: { "id": id },
            success: function (result) {
                debugger
                $("#countryname2").val(result.Name);
            },
            error: function () {
                debugger
                $("#countryname2").val(" ");
            }
        });
    }

</script>

<div class="content-wrapper">

    <section class="content-header">
        <h1>
            Edit Organization unit type
        </h1>
    </section>
    <!-- Main content -->
    <section class="content">
        <div class="box">
            <!-- /.box-header -->
            <div class="box-body">
                @using (Html.BeginForm("Edit", "Organizationunittype", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        <hr />
                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.unitLevelcode, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.unitLevelcode, new SelectList(ViewBag.Organization_Unit_Level, "ID", "Code"), "Select unit Level code", new { @class = "select2", @onchange = "CountryName()", @id = "Country" })
                                @Html.ValidationMessageFor(model => model.unitLevelcode, "", new { @class = "text-danger" })
                                <input type="text" value=" " class="form-control" id="countryname" disabled />
                            </div>

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.unitschemacode, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.unitschemacode, new SelectList(ViewBag.Organization_Unit_Schema, "ID", "Code"), "Select unit schema code", new { @class = "select2", @onchange = "CountryName2()", @id = "Country2" })
                                @Html.ValidationMessageFor(model => model.unitschemacode, "", new { @class = "text-danger" })
                                <input type="text" value=" " class="form-control" id="countryname2" disabled />
                            </div> 

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @readonly = true, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" id="btnSave" class="btn btn-success" name="Command" value="Save">Edit</button>
                                <a href="@Url.Action("index","Organizationunittype")" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i>Back</a>
                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>

    </section>
</div>



@section scripts{}