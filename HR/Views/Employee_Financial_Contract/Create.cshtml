@model HR.Models.CardPayroll.Employee_Financial_Contract_Header
@using HR.Resource;
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}
<script>
    $(document).ready(function () {
        $("#employeeId").attr("disabled", true);

        GetDataById5('@Model.From_Date', "Start");
        GetDataById5('@Model.To_Date', "End");

    });
       function go() {
           debugger
           $("#itemTR").empty();
        $.ajax({
            type: "post",
            url: "/Helper/GetDataBys",
           success: function (result) {
               debugger

                   $.each(result, function (i, r) {

                       var Exten = r.ExtendedFields_Code;

                       if (r.CodeGroupType == 0) {
                           var GroupType = "Code type";
                       }
                       else if (r.CodeGroupType == 1) {
                           var GroupType = "Earning";
                       }
                       else if (r.CodeGroupType == 2) {
                           var GroupType = "Deduction";
                       }
                       if (r.CodeValueType == 0) {
                           var Earning = "Code value type";
                       }
                       else if (r.CodeValueType == 1) {
                           var Earning = "Unkown";
                       }
                       else if (r.CodeValueType == 2) {
                           var Earning = "Minites";
                       }
                       else if (r.CodeValueType == 3) {
                           var Earning = "Hours";
                       }
                       else if (r.CodeValueType == 4) {
                           var Earning = "Days";
                       }
                       else if (r.CodeValueType == 5) {
                           var Earning = "Months";
                       }
                       else if (r.CodeValueType == 6) {
                           var Earning = "Years";
                       }
                       else if (r.CodeValueType == 7) {
                           var Earning = "Money";
                       }
                       else if (r.CodeValueType == 8) {
                           var Earning = "Piece";
                       }
                       else if (r.CodeValueType == 9) {
                           var Earning = "Calculated Value";
                       }
                       @*if (Exten = null) {
                           debugger

var y ="<tr><td class='col-md-1'><input readonly class = 'form-control' value='" + r.SalaryCodeID + "' name='codeid'></td>"  + "<td class='col-md-1'><input type='button' style='margin-left:3px' value=@organ.remove class='form-control remove btn btn-danger' onclick='remove($(this))' /></td></tr>"
                            $("#itemTR").append(y)}*@
                      
                           debugger
                            $("#itemTR").append("<tr><td class='col-md-1'><input readonly class = 'form-control' value='" + r.SalaryCodeID + "' name='codeid'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + r.SalaryCodeDesc + "' name='SalaryDes'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + GroupType + "' name='TypeE'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + Earning + "' name='ValueType'></td>" + "<td class='col-md-1'><input class = 'form-control' name='DefaultValue' value='0' min='0' type='number' /></td>" /*+ "<td class='col-md-1'><input readonly class = 'form-control' value='" + r.ExtendedFields_Code + "' name='Extendedco'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + r.ExtendedFields_Description + "' name='Extendedna'></td>"*/ + "<td class='col-md-1'><input type='button'  value=@organ.remove class='remove btn btn-danger' onclick='remove($(this))' /></td></tr>")
                     
                   })
            },
            error: function () {
                //$("#Extended").val(" ");
            }


        });
    }

</script>

<script>
    function employee() {

        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {

                $("#employeename").val(result.Name);
                $("#codeid").val(result.Employee_Code);
                $("#employeeId").attr("readonly", true);
                $("#employeeId").prop("readonly", true);
            },
            error: function () {

                $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }

    function GetDiffDates(StartDate, EndDate) {
        if (StartDate && EndDate) {
            $.get("/Employee_military_service_calling/DifferenceTwoDates?StartDate=" + StartDate + '&EndDate=' + EndDate, function (data, status) {

                if (data) {
                    $("#Days").val(data.DateDiff.Days);
                    $("#months").val(data.DateDiff.Months);
                    $("#Yearr").val(data.DateDiff.Years);
                }
            });
        }
    }

    function GetDataById5(date, id) {
        debugger
        var valx = new Date(date);
        var month;
        if ((valx.getMonth() + 1) < 10) {
            month = "0" + (valx.getMonth() + 1).toString();
        }
        else {
            month = date.getMonth() + 1;
        }
        var day = parseInt(valx.getDate());
        if (day < 10) {
            day = "0" + (valx.getDate()).toString();
        }
        else {
            day = valx.getDate();
        }
        var d = valx.getFullYear() + '-' + month + '-' + day;
        $('#' + id).val(d);
    }
</script>



<script>

    function additems()
    {
        debugger

            var f = $("#ite").val();
            if (f == "")
            {
                alert('you must choose salary item ');
            }
            else {
                var i = "";
                var d = $("#ite").val();
                var firstdrop = " ";
                $.ajax
                  ({
                    type: "post",
                    url: "/SalaryItemGroup_Header/salaryitem",
                    data: { "id": d },
                      success: function (result) {
                          debugger
                          var Exten = result.ExtendedFields_Code;
                          if (result.ExtendedFields_Code == null) {



                              if (result.CodeGroupType == 0) {
                                  var GroupType = "Code type";
                              }
                              else if (result.CodeGroupType == 1) {
                                  var GroupType = "Earning";
                              }
                              else if (result.CodeGroupType == 2) {
                                  var GroupType = "Deduction";
                              }
                              if (result.CodeValueType == 0) {
                                  var Earning = "Code value type";
                              }
                              else if (result.CodeValueType == 1) {
                                  var Earning = "Unkown";
                              }
                              else if (result.CodeValueType == 2) {
                                  var Earning = "Minites";
                              }
                              else if (result.CodeValueType == 3) {
                                  var Earning = "Hours";
                              }
                              else if (result.CodeValueType == 4) {
                                  var Earning = "Days";
                              }
                              else if (result.CodeValueType == 5) {
                                  var Earning = "Months";
                              }
                              else if (result.CodeValueType == 6) {
                                  var Earning = "Years";
                              }
                              else if (result.CodeValueType == 7) {
                                  var Earning = "Money";
                              }
                              else if (result.CodeValueType == 8) {
                                  var Earning = "Piece";
                              }
                              else if (result.CodeValueType == 9) {
                                  var Earning = "Calculated Value";
                              }
                              var pp = $("#itemTR").find("tr");
                              var flag = 0;
                              for (var o = 0; o < pp.length; o++) {
                                  debugger
                                  var inputs = pp[o].children;
                                  codeid_ = inputs[0].children;
                                  if (codeid_[0].value == result.SalaryCodeID) {
                                      flag = 1;
                                  }
                              }
                              if (flag == 0) {
                                  var i = "<tr><td class='col-md-1'><input readonly class = 'form-control' value='" + result.SalaryCodeID + "' name='codeid'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + result.SalaryCodeDesc + "' name='SalaryDes'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + GroupType + "' name='TypeE'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + Earning + "' name='ValueType'></td>" + "<td class='col-md-1'><input class = 'form-control' name='DefaultValue' value='0' min='0' type='number' /></td>" /*+ "<td class='col-md-1'><input readonly class = 'form-control' value='' name='Extendedco'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='' name='Extendedna'></td>"*/ + "<td class='col-md-1'><input type='button'  value=@organ.remove class='remove btn btn-danger' onclick='remove($(this))' /></td></tr>";
                                  debugger
                                  $("#itemTR").append(i);
                                  $("#ite").select2("val", "");

                              }
                          }
                              @*else {
                                  if (result.CodeGroupType == 0) {
                                      var GroupType = "Code type";
                                  }
                                  else if (result.CodeGroupType == 1) {
                                      var GroupType = "Earning";
                                  }
                                  else if (result.CodeGroupType == 2) {
                                      var GroupType = "Deduction";
                                  }
                                  if (result.CodeValueType == 0) {
                                      var Earning = "Code value type";
                                  }
                                  else if (result.CodeValueType == 1) {
                                      var Earning = "Unkown";
                                  }
                                  else if (result.CodeValueType == 2) {
                                      var Earning = "Minites";
                                  }
                                  else if (result.CodeValueType == 3) {
                                      var Earning = "Hours";
                                  }
                                  else if (result.CodeValueType == 4) {
                                      var Earning = "Days";
                                  }
                                  else if (result.CodeValueType == 5) {
                                      var Earning = "Months";
                                  }
                                  else if (result.CodeValueType == 6) {
                                      var Earning = "Years";
                                  }
                                  else if (result.CodeValueType == 7) {
                                      var Earning = "Money";
                                  }
                                  else if (result.CodeValueType == 8) {
                                      var Earning = "Piece";
                                  }
                                  else if (result.CodeValueType == 9) {
                                      var Earning = "Calculated Value";
                                  }

                                  $.ajax({
                                      type: "post",
                                      url: "/Helper/GetExtendedFields_Header",
                                      data: { "id": Exten },
                                      success: function (res) {
                                          debugger

                                          debugger
                                          var i = "<tr><td class='col-md-1'><input readonly class = 'form-control' value='" + result.SalaryCodeID + "' name='codeid'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + result.SalaryCodeDesc + "' name='SalaryDes'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + GroupType + "' name='TypeE'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + Earning + "' name='ValueType'></td>" + "<td class='col-md-1'><input class = 'form-control' name='DefaultValue' value='0' min='0' type='number' /></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + res.ExtendedFields_Code + "' name='Extendedco'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + res.ExtendedFields_Desc + "' name='Extendedna'></td>" + "<td class='col-md-1'><input type='button' style='margin-left:3px' value=@organ.remove class='form-control remove btn btn-danger' onclick='remove($(this))' /></td></tr>";
                                          debugger
                                          $("#itemTR").append(i);
                                          $("#ite").select2("val", "");
                                      },

                                      error: function () {

                                      }
                                  })
                              }*@

                         
                      }
                      })

            }
    }
    function remove(thi) {
        thi.parent().parent().remove();
    }

    function ch()
    {
        var t = check();
        if (t == 0) {
            $("#dd").submit();
        }

    }

</script>

@Scripts.Render("~/bundles/jqueryval")


<div class="content-wrapper">

    

    <!-- Main content -->
    <section class="content">
        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("Create", "Employee_Financial_Contract", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="sec-nav">
                        <div><i class="far fa-save"></i><button type="submit" class="create-btn" />@organ.create</div>
                        <div><i class="fas fa-plus"></i><a href="@Url.Action("create", "Employee_Financial_Contract")" class="create-btn">@pers_2.new_</a></div>
                        <div><i class="far fa-trash-alt"></i><input type="button" href="@Url.Action("index","Employee_Financial_Contract")" class="create-btn" style="background-color: transparent;" value=@organ.delete /></div>
                        <div><i class="fas fa-undo"></i><a style="" href="@Url.Action("index", "Employee_Financial_Contract",new {id=ViewBag.idemp})" class="create-btn"> @pers_2.Back</a></div>
                        <div><i class="far fa-save"></i> <button type="submit" id="btnSubmit" name="Command" value="Submit" class="create-btn" />@Personnel.EmployeeProfile</div>
                    </div>
                    <hr /><hr /><hr />
                    <section class="content-header">
                        <h1>
                            @Payroll.CreateEmployeeFinancialContract
                        </h1>
                    </section>
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m => m.Employee_Profile.ID)
                        @Html.HiddenFor(m => m.Employee_Profile.Name)
                        @Html.HiddenFor(m => m.Employee_Profile.Full_Name)
                        @Html.HiddenFor(m => m.Employee_Profile.Code)
                        @Html.HiddenFor(m => m.ID)

                        <input name="codeid" value="" hidden />
                        <input name="SalaryDes" value="" hidden />
                        <input name="TypeE" value="" hidden />
                        <input name="ValueType" value="" hidden />
                        <input name="DefaultValue" value="" hidden />
                        <input name="Extendedco" value="" hidden />
                        <input name="Extendedna" value="" hidden />

                        <div class="form-group">
                            <label class="control-label col-md-2" style="color:red">@Personnel.EmployeeName</label>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.Employee_Code, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), @Personnel.SelectEmployee, new { @readonly = true, @class = "select2", @onchange = "employee()", id = "employeeId" })
                                @Html.ValidationMessageFor(model => model.Employee_Code, "", new { @class = "text-danger" })
                            </div>
                           
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2" style="color:red">@Payroll.Contractnumber</label>
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.Contract_Number, new
                 {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control"@*, id = "codeid" *@,
@readonly = true
}
})
                                @Html.ValidationMessageFor(model => model.Employee_Code, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-md-2">@Payroll.Isactive</label>
                            <div class="col-md-1">
                                @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2" hidden>
                                <a href="@Url.Action("index","Employee_Financial_Contract",new {id=ViewBag.idemp})" class="btn btn-danger btn-sm" style="width:98px;"><i class="fa fa-trash-o"></i>@Personnel.Back</a>
                                <input type="submit" value="@Personnel.Create" class="btn btn-success" style="width:98px;" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Fromdate</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.From_Date, new { @value = "01/01/1900", htmlAttributes = new { @class = "form-control  StartDate yy", @onchange = "Save()", @id = "Start", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.From_Date, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                            </div>

                        </div>


                        <div class="form-group">
                            <label class="control-label col-md-2">@Personnel.Todate</label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.To_Date, new { @value = "01/01/1900", htmlAttributes = new { @class = "form-control  EndDate yyy", @onchange = "Save2()", @id = "End", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.To_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="col-md-12">
                            <ul class="nav nav-tabs bordered">
                                <!-- available classes "bordered", "right-aligned" -->
                                <li class="active">
                                    <a href="#Budgetdetails" data-toggle="tab">
                                        <span class="visible-xs"><i class="entypo-home"></i></span>
                                        <span class="hidden-xs">@pers_2.Salarycode</span>
                                    </a>
                                </li>

                            </ul>
                            <div class="tab-content">
                                <div class="tab-pane active" id="Budgetdetails" style="overflow: hidden;width: auto;height: auto;">

                                    <div style="margin-bottom:15px" class="form-group">
                                        <label class="control-label col-md-1">
                                            <span> @pers_2.salarycodeid </span>
                                        </label>
                                        <div class="col-md-3">
                                            @Html.DropDownList("items", new SelectList(ViewBag.salaryitem, "ID", "Code"), pers_2.salarycodeid, new { @class = "select2", @id = "ite" })
                                        </div>
                                        <div class="col-md-1">

                                        </div>
                                        <div class="control-label col-md-1">
                                            <a onclick="additems()" style="margin-right:3px" class="btn btn-success"> @organ.additems </a>
                                        </div>

                                        <div class="control-label col-md-1">

                                            <input type="button" value="@Payroll.AddAllFinancialContractItems" class="btn btn-success" id="searchbutton" onclick="go()" />

                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <table id="categories" class="table table-bordered table-striped text-center">
                                            <thead>
                                                <tr>
                                                    <td hidden></td>
                                                    <td class="col-md-1">
                                                        @Payroll.Salarycodeid
                                                    </td>
                                                    <td class="col-md-1">
                                                        @Payroll.Salarycodedescription
                                                    </td>
                                                    <td class="col-md-1">
                                                        @Payroll.Salarycodetype
                                                    </td>
                                                    <td class="col-md-1">
                                                        @Payroll.Salarycodevaluetype
                                                    </td>
                                                    <td class="col-md-1">
                                                        @Payroll.Salarycodevalue
                                                    </td>
                                                    @*<td class="col-md-1">
                                                @Payroll.Extendedfieldscode
                                            </td>
                                            <td class="col-md-1">
                                                @Payroll.Extendedfieldsdescription
                                            </td>*@
                                                    <td></td>
                                                </tr>
                                            </thead>
                                            <tbody id="itemTR"></tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
</div>

@section scripts{}
<style>

    /*Create Page*/


    .sec-nav {
        z-index: 9999;
        position: fixed;
        top: 47px;
        background: #faf9f8;
        border-bottom: 1px solid #bebbb8;
        display: block;
        width: 100%;
        left: 50px;
        padding-left: 10px;
        height: 60px;
        line-height: 60px;
    }

        .sec-nav div {
            display: inline-block;
            padding: 5px 8px;
            width: unset;
            border: 0;
            color: #000;
            font-size: 16px;
            height: 60px;
        }

            .sec-nav div:hover {
                background: #eee;
                color: #000;
            }

                .sec-nav div:hover input {
                    color: #000;
                }

    .create-btn {
        border: 0;
        height: 100%;
        background-color: transparent;
    }

    .sec-nav div svg {
        color: #2266e3;
        font-size: 17px;
    }

    .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
        /*float: unset*/
    }

    label {
        text-align: left;
        font: normal normal 400 12px/18px 'Segoe UI',tahoma,sans-serif;
        color: #605e5c;
        display: block;
        margin-bottom: 0;
        max-width: 220px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-weight: 600;
        margin-top: 15px;
    }

    .form-horizontal .form-group {
        margin: 0 !important;
    }

    input {
        height: 35px;
        color: #000;
    }

        input:active {
            border: 1px solid #2266e3;
        }

    .form-group .row > div {
        margin-bottom: 10px;
    }

    .content-wrapper {
        margin-left: 15px;
    }

    .col-md-4 {
        width: 20% !important;
        margin-bottom: 15px;
    }

    .col-md-3 {
        width: 20% !important;
        margin-bottom: 15px;
    }
</style>