@model HR.Models.CardPayroll.VMFin
@using HR.Resource
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}
<div class="panel panel-primary" data-collapsed="0">
    <div class="panel-body">
        @using (Html.BeginForm("edit", "Employee_Financial_Contract", FormMethod.Post, new { id = "dd", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <input name="codeid" value="" hidden />
            <input name="SalaryDes" value="" hidden />
            <input name="TypeE" value="" hidden />
            <input name="ValueType" value="" hidden />
            <input name="DefaultValue" value="" hidden />
            <input name="Extendedco" value="" hidden />
            <input name="Extendedna" value="" hidden />
            @Html.HiddenFor(m => m.Employee_Financial_Contract_Header.Employee_Profile.ID);

            @Html.HiddenFor(m => m.Employee_Financial_Contract_Header.ID);
            <div class="form-horizontal">
                <hr />
                @if (TempData["Message"] != null)
                {
                    <div class="alert alert-danger alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        @TempData["Message"]
                    </div>
                }
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <label class="control-label col-md-2">@Personnel.EmployeeName</label>
                    <div class="col-md-4">
                        @Html.DropDownListFor(m => m.Employee_Financial_Contract_Header.Employee_Code, new SelectList(ViewBag.Employee_Profile, "ID", "Code"), @Personnel.SelectEmployee, new { @readonly = true, @class = "select2", @onchange = "employee()", id = "employeeId" })
                        @Html.ValidationMessageFor(model => model.Employee_Financial_Contract_Header.Employee_Code, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2" style="color:black">
                        <button type="submit" id="btnSubmit" name="Command" value="Submit" class="btn btn-success">@Personnel.EmployeeProfile</button>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">@Payroll.Contractnumber</label>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Employee_Financial_Contract_Header.Contract_Number, new
         {
                            htmlAttributes = new
                            {
                                @class = "form-control"@*, id = "codeid" *@,
@readonly = true
}
})
                        @Html.ValidationMessageFor(model => model.Employee_Financial_Contract_Header.Employee_Code, "", new { @class = "text-danger" })
                    </div>
                    <label class="control-label col-md-2">@Payroll.Isactive</label>
                    <div class="col-md-1">
                        @Html.CheckBoxFor(model => model.Employee_Financial_Contract_Header.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Employee_Financial_Contract_Header.IsActive, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        <a href="@Url.Action("index","Employee_Financial_Contract",new {id=ViewBag.idemp})" class="btn btn-danger btn-sm" style="width:98px;"><i class="fa fa-trash-o"></i>@Personnel.Back</a>
                        <input type="submit" value="@Personnel.Edit" class="btn btn-success" style="width:98px;" />
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">@Personnel.Fromdate</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Employee_Financial_Contract_Header.From_Date, new { @value = "01/01/1900", htmlAttributes = new { @class = "form-control  StartDate yy", @onchange = "Save()", @id = "Start", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.Employee_Financial_Contract_Header.From_Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">@Personnel.Todate</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Employee_Financial_Contract_Header.To_Date, new { @value = "01/01/1900", htmlAttributes = new { @class = "form-control  EndDate yyy", @onchange = "Save2()", @id = "End", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.Employee_Financial_Contract_Header.To_Date, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="col-md-12">
                    <ul class="nav nav-tabs bordered">
                        <!-- available classes "bordered", "right-aligned" -->
                        <li class="active">
                            <a href="#Budgetdetails" data-toggle="tab">
                                <span class="visible-xs"><i class="entypo-home"></i></span>
                                <span class="hidden-xs">@pers_2.Salarycode</span>
                            </a>
                        </li>

                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane active" id="Budgetdetails" style="overflow: hidden;width: auto;height: auto;">

                            <div style="margin-bottom:15px" class="form-group">
                                <label class="control-label col-md-1">
                                    <span> @pers_2.salarycodeid </span>
                                </label>
                                <div class="col-md-3">
                                    @Html.DropDownList("items", new SelectList(ViewBag.salaryitem, "ID", "Code"), pers_2.salarycodeid, new { @class = "select2", @id = "ite" })
                                </div>
                                <div class="col-md-1">

                                </div>
                                <div class="control-label col-md-1">
                                    <a onclick="additems()" style="margin-right:3px" class="btn btn-success"> @organ.additems </a>
                                </div>
                                <div class="control-label col-md-1">

                                    <input type="button" value="click" class="btn btn-success" id="searchbutton" onclick="go()" />

                                </div>
                            </div>

                            <div class="form-group">
                                <table id="categories" class="table table-bordered table-striped text-center">
                                    <thead>
                                        <tr>
                                            <td hidden></td>
                                            <td class="col-md-1">
                                                @Payroll.Salarycodeid
                                            </td>
                                            <td class="col-md-1">
                                                @Payroll.Salarycodedescription
                                            </td>
                                            <td class="col-md-1">
                                                @Payroll.Salarycodetype
                                            </td>
                                            <td class="col-md-1">
                                                @Payroll.Salarycodevaluetype
                                            </td>
                                            <td class="col-md-1">
                                                @Payroll.Salarycodevalue
                                            </td>
                                            <td class="col-md-1">
                                                @Payroll.Extendedfieldscode
                                            </td>
                                            <td class="col-md-1">
                                                @Payroll.Extendedfieldsdescription
                                            </td>
                                            <td></td>
                                        </tr>
                                    </thead>

                                    <tbody id="itemTR">
                                        @foreach (var item in Model.Employee_Financial_Contract_Detail)
                                        {
                                        <tr>
                                            @*<td hidden><input hidden name='ID_item' value="@item.salary_code.ID" /></td>*@
                                            <td class="col-md-2"><input class='form-control' value="@item.SalaryCodeID" readonly name="codeid" /></td>
                                            <td class="col-md-2"><input class='form-control' value="@item.Salarycodedescription" readonly name="SalaryDes" /></td>
                                            <td class="col-md-2"><input class='form-control' value="@item.Type" readonly name="TypeE" /></td>
                                            <td class="col-md-2"><input class='form-control' value="@item.ValueType" readonly name="ValueType" /></td>
                                            <td class="col-md-1"><input class='form-control' name='DefaultValue' type="number" value="@item.SalaryCodeValue" min="0" /></td>
                                            <td class="col-md-2"><input class='form-control' value="@item.ExtendedFields_Code" readonly name="Extendedco" /></td>
                                            <td class="col-md-2"><input class='form-control' value="@item.ExtendedFields_Desc" readonly name="Extendedna" /></td>
                                            <td class="col-md-1"><input type='button' style='margin-left:3px' value=@organ.remove class='form-control remove btn btn-danger' onclick='remove($(this))' /></td>
                                        </tr>

                                        }
                                    </tbody>
                                </table>

                            </div>

                        </div>
                    </div>



                </div>
            </div>
        }
    </div>
</div>
@section scripts{}
<script>
    function remove(thi) {
        thi.parent().parent().remove();
    }
    function additems()
    {

            var f = $("#ite").val();
            if (f == "")
            {
                alert('you must choose salary item ');
            }
            else {

                var i = "";
                var d = $("#ite").val();
                var firstdrop = " ";
                $.ajax
                  ({
                    type: "post",
                    url: "/SalaryItemGroup_Header/salaryitem",
                    data: { "id": d },
                    success: function (result) {
                        debugger
                        var Exten = result.ExtendedFields_Code;
                        if (result.ExtendedFields_Code == null) {



                    if (result.CodeGroupType == 0) {
                        var GroupType = "Code type";
                    }
                        else if (result.CodeGroupType == 1) {
                        var GroupType = "Earning";
                    }
                    else if (result.CodeGroupType == 2) {
                        var GroupType = "Deduction";
                    }
                    if (result.CodeValueType == 0) {
                        var Earning = "Code value type";
                    }
                    else if (result.CodeValueType == 1) {
                        var Earning = "Unkown";
                    }
                    else if (result.CodeValueType == 2) {
                        var Earning = "Minites";
                    }
                    else if (result.CodeValueType == 3) {
                        var Earning = "Hours";
                    }
                    else if (result.CodeValueType == 4) {
                        var Earning = "Days";
                    }
                    else if (result.CodeValueType == 5) {
                        var Earning = "Months";
                    }
                    else if (result.CodeValueType == 6) {
                        var Earning = "Years";
                    }
                    else if (result.CodeValueType == 7) {
                        var Earning = "Money";
                    }
                    else if (result.CodeValueType == 8) {
                        var Earning = "Piece";
                    }
                    else if (result.CodeValueType == 9) {
                        var Earning = "Calculated Value";
                    }
                            var i = "<tr><td class='col-md-1'><input readonly class = 'form-control' value='" + result.SalaryCodeID + "' name='codeid'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + result.SalaryCodeDesc + "' name='SalaryDes'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + GroupType + "' name='TypeE'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + Earning + "' name='ValueType'></td>" + "<td class='col-md-1'><input class = 'form-control' name='DefaultValue' value='0' min='0' type='number' /></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='' name='Extendedco'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='' name='Extendedna'></td>" + "<td class='col-md-1'><input type='button' style='margin-left:3px' value=@organ.remove class='form-control remove btn btn-danger' onclick='remove($(this))' /></td></tr>";
                    debugger
                        $("#itemTR").append(i);
                            $("#ite").select2("val", "");
                        }
                        else {
                            if (result.CodeGroupType == 0) {
                                var GroupType = "Code type";
                            }
                            else if (result.CodeGroupType == 1) {
                                var GroupType = "Earning";
                            }
                            else if (result.CodeGroupType == 2) {
                                var GroupType = "Deduction";
                            }
                            if (result.CodeValueType == 0) {
                                var Earning = "Code value type";
                            }
                            else if (result.CodeValueType == 1) {
                                var Earning = "Unkown";
                            }
                            else if (result.CodeValueType == 2) {
                                var Earning = "Minites";
                            }
                            else if (result.CodeValueType == 3) {
                                var Earning = "Hours";
                            }
                              else if (result.CodeValueType == 4) {
                                  var Earning = "Days";
                              }
                              else if (result.CodeValueType == 5) {
                                  var Earning = "Months";
                              }
                              else if (result.CodeValueType == 6) {
                                  var Earning = "Years";
                              }
                              else if (result.CodeValueType == 7) {
                                  var Earning = "Money";
                              }
                              else if (result.CodeValueType == 8) {
                                  var Earning = "Piece";
                              }
                              else if (result.CodeValueType == 9) {
                                  var Earning = "Calculated Value";
                              }

                          $.ajax({
                              type: "post",
                              url: "/Helper/GetExtendedFields_Header",
                              data: { "id": Exten },
                              success: function (res) {
                                  debugger
                                  var i = "<tr><td class='col-md-1'><input readonly class = 'form-control' value='" + result.SalaryCodeID + "' name='codeid'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + result.SalaryCodeDesc + "' name='SalaryDes'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + GroupType + "' name='TypeE'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + Earning + "' name='ValueType'></td>" + "<td class='col-md-1'><input class = 'form-control' name='DefaultValue' value='0' min='0' type='number' /></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + res.ExtendedFields_Code + "' name='Extendedco'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + res.ExtendedFields_Desc + "' name='Extendedna'></td>" + "<td class='col-md-1'><input type='button' style='margin-left:3px' value=@organ.remove class='form-control remove btn btn-danger' onclick='remove($(this))' /></td></tr>";
                       debugger
                          $("#itemTR").append(i);
                                  $("#ite").select2("val", "");

                              },
                              error: function () {

                                  //$("#employeename").val(" ");
                                  //$("#codeid").val("");
                              }
                          });
                          }

                      }

                  });
            }
    }
    function remove(thi) {
        thi.parent().parent().remove();
    }

    function ch()
    {

        var t = check();
        if (t == 0) {


            $("#dd").submit();
        }

    }

</script>


<script>
    $(document).ready(function () {
        $("#employeeId").attr("disabled", true);

        GetDataById5('@Model.Employee_Financial_Contract_Header.From_Date', "Start");
        GetDataById5('@Model.Employee_Financial_Contract_Header.To_Date', "End");

    });
</script>

<script>
    function employee() {

        var id = $("#employeeId").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {

                $("#employeename").val(result.Name);
                $("#codeid").val(result.Employee_Code);
                $("#employeeId").attr("readonly", true);
                $("#employeeId").prop("readonly", true);
            },
            error: function () {

                $("#employeename").val(" ");
                $("#codeid").val("");
            }
        });
    }

    function GetDiffDates(StartDate, EndDate) {
        if (StartDate && EndDate) {
            $.get("/Employee_military_service_calling/DifferenceTwoDates?StartDate=" + StartDate + '&EndDate=' + EndDate, function (data, status) {

                if (data) {
                    $("#Days").val(data.DateDiff.Days);
                    $("#months").val(data.DateDiff.Months);
                    $("#Yearr").val(data.DateDiff.Years);
                }
            });
        }
    }

    function GetDataById5(date, id) {
        debugger
        var valx = new Date(date);
        var month;
        if ((valx.getMonth() + 1) < 10) {
            month = "0" + (valx.getMonth() + 1).toString();
        }
        else {
            month = date.getMonth() + 1;
        }
        var day = parseInt(valx.getDate());
        if (day < 10) {
            day = "0" + (valx.getDate()).toString();
        }
        else {
            day = valx.getDate();
        }
        var d = valx.getFullYear() + '-' + month + '-' + day;
        $('#' + id).val(d);
    }
           function go() {
        debugger

        $.ajax({
            type: "post",
            url: "/Helper/GetDataBysa",
           success: function (result) {
               debugger
               $.each(result, function (i, r) {

                   var Exten = r.ExtendedFields_Code;

                   if (r.CodeGroupType == 0) {
                       var GroupType = "Code type";
                   }
                   else if (r.CodeGroupType == 1) {
                       var GroupType = "Earning";
                   }
                   else if (r.CodeGroupType == 2) {
                       var GroupType = "Deduction";
                   }
                   if (r.CodeValueType == 0) {
                       var Earning = "Code value type";
                   }
                   else if (r.CodeValueType == 1) {
                       var Earning = "Unkown";
                   }
                   else if (r.CodeValueType == 2) {
                       var Earning = "Minites";
                   }
                   else if (r.CodeValueType == 3) {
                       var Earning = "Hours";
                   }
                   else if (r.CodeValueType == 4) {
                       var Earning = "Days";
                   }
                   else if (r.CodeValueType == 5) {
                       var Earning = "Months";
                   }
                   else if (r.CodeValueType == 6) {
                       var Earning = "Years";
                   }
                   else if (r.CodeValueType == 7) {
                       var Earning = "Money";
                   }
                   else if (r.CodeValueType == 8) {
                       var Earning = "Piece";
                   }
                   else if (r.CodeValueType == 9) {
                       var Earning = "Calculated Value";
                   }
                   $("#itemTR").append("<tr><td class='col-md-1'><input readonly class = 'form-control' value='" + r.SalaryCodeID + "' name='codeid'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + r.SalaryCodeDesc + "' name='SalaryDes'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + GroupType + "' name='TypeE'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + Earning + "' name='ValueType'></td>" + "<td class='col-md-1'><input class = 'form-control' name='DefaultValue' value='0' min='0' type='number' /></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + r.ExtendedFields_Code + "' name='Extendedco'></td>" + "<td class='col-md-1'><input readonly class = 'form-control' value='" + r.ExtendedFields_Description+"' name='Extendedna'></td>" + "<td class='col-md-1'><input type='button' style='margin-left:3px' value=@organ.remove class='form-control remove btn btn-danger' onclick='remove($(this))' /></td></tr>")
                })
                //$("#cars").val(result.Name);
            },
            error: function () {
                //$("#Extended").val(" ");
            }


        });
    }

</script>
