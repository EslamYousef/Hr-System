@model HR.Models.ViewModel.employee_recordVM

@{
    ViewBag.Title = "edit";
    Layout = "~/Views/Shared/MainLayOut.cshtml";
}

@using HR.Resource;

@Scripts.Render("~/bundles/jqueryval")

<script>
    $(function () {
        CountryName1();
        CountryName2();
        GetDataById2('@Model.record.Record_date', "Record_date_D");
        GetDataById2('@Model.record.Effictive_date', "Effictive_date_D");
        GetDataById2('@Model.record.Record_expire_date', "Record_expire_date_D");
    });

    function GetDataById2(date, id) {
        debugger
        var valx = new Date(date);
        var month;
        if ((valx.getMonth() + 1) < 10) {
            month = "0" + (valx.getMonth() + 1).toString();
        }
        else {
            month = date.getMonth() + 1;
        }
        var day = parseInt(valx.getDate());
        if (day < 10) {
            day = "0" + (valx.getDate()).toString();
        }
        else {
            day = valx.getDate();
        }
        var d = valx.getFullYear() + '-' + month + '-' + day;
        $('#' + id).val(d);
    }
    function CountryName1()
    {
         
        var id= $("#Country1").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployee",
            data: { "id": id },
            success: function (result) {
                 
                $("#countryname1").val(result.Full_Name);
            },
            error: function () {
                 
                $("#countryname1").val(" ");
            }
        });
    }
    function CountryName2() {
         
        var id = $("#Country2").val();
        $.ajax({
            type: "post",
            url: "/Helper/GetEmployeeRecodes",
            data: { "id": id },
            success: function (result) {
                 
                $("#countryname2").val(result.Record_Group_Description);
            },
            error: function () {
                 
                $("#countryname2").val(" ");
            }
        });
    }

</script>
<div class="content-wrapper">

   

    <!-- Main content -->
    <section class="content">

        <div class="box">

            <!-- /.box-header -->
            <div class="box-body">

                @using (Html.BeginForm("edit", "Employee_records", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="sec-nav">
                        <div><i class="far fa-save"></i><button type="submit" class="create-btn">@organ.Save </button></div>
                        <div><i class="fas fa-plus"></i><input type="button" class="create-btn" value="New" /></div>
                        <div><i class="far fa-trash-alt"></i><input type="button" class="create-btn" value="Delete" /></div>
                        <div><i class="fas fa-undo"></i><a style="" href="@Url.Action("index", "Employee_records")" class="create-btn"> @pers_2.Back</a></div>
                    </div>
                    <div class="form-horizontal">

                        <hr />

                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                @TempData["Message"]
                            </div>
                        }
                        <section style="margin-top: 30px" class="content-header">
                            <h1>
                                @pers_2.editemployeerecord1
                            </h1>
                        </section>
                        @Html.HiddenFor(m => m.record.ID);
                        <div class="form-group">
                           
                            <div class="col-md-4">
                                <label style="color:red">
                                    @organ.code
                                </label>
                                @Html.EditorFor(model => model.record.Code, new { htmlAttributes = new { @readonly = true, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.record.Code, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label style="color:red">
                                    @organ.name
                                </label>
                                @Html.EditorFor(model => model.record.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.record.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>
                                    @organ.description
                                </label>
                                @Html.EditorFor(model => model.record.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.record.Description, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label style="color:red">
                                    @pers_2.employee
                                </label>
                                @Html.DropDownListFor(m => m.selectedEmpoyee, new SelectList(ViewBag.employee, "ID", "Code"), pers_2.employee, new { @class = "select2", @onchange = "CountryName1()", @id = "Country1" })
                                @Html.ValidationMessageFor(model => model.selectedEmpoyee, "", new { @class = "text-danger" })
                                <input type="hidden" value=" " class="form-control" id="countryname1" disabled />
                            </div>
                            <div class="col-md-4">
                                <label>
                                    @pers_2.group
                                </label>
                                @Html.DropDownListFor(m => m.selectedgroup, new SelectList(ViewBag.group, "ID", "Code"), pers_2.group, new { @class = "select2", @onchange = "CountryName2()", @id = "Country2" })
                                @Html.ValidationMessageFor(model => model.selectedgroup, "", new { @class = "text-danger" })
                                <input type="hidden" value=" " class="form-control" id="countryname2" disabled />
                            </div>
                        </div>
                      
                       

                        <div class="form-group">
                            
                             <div class="col-md-4">
                                 <label>
                                     @pers_2.Recorddate
                                 </label>
                                @Html.EditorFor(model => model.record.Record_date, new { htmlAttributes = new { @class = "form-control",@type="date",id= "Record_date_D" } })
                                @Html.ValidationMessageFor(model => model.record.Record_date, "", new { @class = "text-danger" })
                            </div>
                                <div class="col-md-4">
                                    <label>
                                        @pers_2.EffectiveDate
                                    </label>
                                @Html.EditorFor(model => model.record.Effictive_date, new { htmlAttributes = new { @class = "form-control", @type = "date", id = "Effictive_date_D" } })
                                @Html.ValidationMessageFor(model => model.record.Effictive_date, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>
                                    @pers_2.Recordexpiredate
                                </label>
                                @Html.EditorFor(model => model.record.Record_expire_date, new { htmlAttributes = new { @class = "form-control", @type = "date", id = "Record_expire_date_D" } })
                                @Html.ValidationMessageFor(model => model.record.Record_expire_date, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <label>
                                    @pers_2.Recordvalue
                                </label>
                                @Html.EditorFor(model => model.record.record_value, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.record.record_value, "", new { @class = "text-danger" })
                            </div>



                            <div class="col-md-4">
                                <label>
                                    @pers_2.Recordamount
                                </label>
                                @Html.EditorFor(model => model.record.record_amount, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.record.record_amount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                      
                      
                       
                    </div>
                }

            </div>

        </div>

    </section>
</div>



@section scripts{}

<style>
    /*Create Page*/


    .sec-nav {
        z-index: 9999;
        position: fixed;
        top: 47px;
        background: #faf9f8;
        border-bottom: 1px solid #bebbb8;
        display: block;
        width: 100%;
        left: 50px;
        padding-left: 10px;
        height: 60px;
        line-height: 60px;
    }

        .sec-nav div {
            display: inline-block;
            padding: 5px 8px;
            width: unset;
            border: 0;
            color: #000;
            font-size: 16px;
            height: 60px;
        }

            .sec-nav div:hover {
                background: #eee;
                color: #000;
            }

                .sec-nav div:hover input {
                    color: #000;
                }

    .create-btn {
        border: 0;
        height: 100%;
        background-color: transparent;
    }

    .sec-nav div svg {
        color: #2266e3;
        font-size: 17px;
    }

    .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
        /*float: unset*/
    }

    label {
        text-align: left;
        font: normal normal 400 12px/18px 'Segoe UI',tahoma,sans-serif;
        color: #605e5c;
        display: block;
        margin-bottom: 0;
        max-width: 220px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-weight: 600;
        margin-top: 15px;
    }

    .col-md-4 {
        width: 20% !important;
    }

    .form-horizontal .form-group {
        margin: 0 !important;
    }

    input {
        height: 35px;
        color: #000;
    }

        input:active {
            border: 1px solid #2266e3;
        }

    .form-group .row > div {
        margin-bottom: 10px;
    }

    .content-wrapper {
        margin-left: 15px;
    }

    h1 {
        margin-top: 40px;
    }
</style>    