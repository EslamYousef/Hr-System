<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Air_ports" xml:space="preserve">
    <value>Air ports</value>
  </data>
  <data name="Authorities" xml:space="preserve">
    <value>Authorities</value>
  </data>
  <data name="Authority" xml:space="preserve">
    <value>Authority</value>
  </data>
  <data name="Authority_type" xml:space="preserve">
    <value>Authority type</value>
  </data>
  <data name="Basic" xml:space="preserve">
    <value>Basic module</value>
  </data>
  <data name="budget" xml:space="preserve">
    <value>Budget</value>
  </data>
  <data name="budget_card" xml:space="preserve">
    <value>Budget card</value>
  </data>
  <data name="budget_class" xml:space="preserve">
    <value>Budget class</value>
  </data>
  <data name="budget_class_items" xml:space="preserve">
    <value>Budget class items</value>
  </data>
  <data name="cards" xml:space="preserve">
    <value>Cards</value>
  </data>
  <data name="check_lists" xml:space="preserve">
    <value>Check lists</value>
  </data>
  <data name="check_lists_group" xml:space="preserve">
    <value>Check lists group</value>
  </data>
  <data name="check_lists_items" xml:space="preserve">
    <value>Check lists items</value>
  </data>
  <data name="check_request" xml:space="preserve">
    <value>Check request</value>
  </data>
  <data name="check_request_action" xml:space="preserve">
    <value>Check request action</value>
  </data>
  <data name="Check_requistion" xml:space="preserve">
    <value>Check requistion</value>
  </data>
  <data name="check_status" xml:space="preserve">
    <value>Check status</value>
  </data>
  <data name="check_type" xml:space="preserve">
    <value>Check type</value>
  </data>
  <data name="city" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="contract_type" xml:space="preserve">
    <value>Contract type</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="county" xml:space="preserve">
    <value>County</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="document" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="documents" xml:space="preserve">
    <value>Documents</value>
  </data>
  <data name="documents_group" xml:space="preserve">
    <value>Documents group</value>
  </data>
  <data name="education_level" xml:space="preserve">
    <value>Education level</value>
  </data>
  <data name="employee_profile_group" xml:space="preserve">
    <value>employee profile group</value>
  </data>
  <data name="Employee_record" xml:space="preserve">
    <value>Employee record</value>
  </data>
  <data name="employee_recordes_type" xml:space="preserve">
    <value>Employee recordes type</value>
  </data>
  <data name="employee_transactions" xml:space="preserve">
    <value>Employee transactions</value>
  </data>
  <data name="EOS" xml:space="preserve">
    <value>EOS</value>
  </data>
  <data name="EOS_group" xml:space="preserve">
    <value>EOS group</value>
  </data>
  <data name="EOS_questions_groups" xml:space="preserve">
    <value>EOS questions groups</value>
  </data>
  <data name="EOS_request" xml:space="preserve">
    <value>EOS request</value>
  </data>
  <data name="exchange_rate" xml:space="preserve">
    <value>Exchange rate</value>
  </data>
  <data name="experience_group" xml:space="preserve">
    <value>Experience group</value>
  </data>
  <data name="Extrnal_companies" xml:space="preserve">
    <value>Extrnal companies</value>
  </data>
  <data name="Footer" xml:space="preserve">
    <value>© 2015 Neon Admin Theme by Laborator</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home page</value>
  </data>
  <data name="inquery" xml:space="preserve">
    <value>inquery</value>
  </data>
  <data name="job_level" xml:space="preserve">
    <value>Job level</value>
  </data>
  <data name="job_level_card" xml:space="preserve">
    <value>Job level card</value>
  </data>
  <data name="job_level_class" xml:space="preserve">
    <value>Job level class</value>
  </data>
  <data name="job_level_grade" xml:space="preserve">
    <value>Job level grade</value>
  </data>
  <data name="job_title" xml:space="preserve">
    <value>Job title</value>
  </data>
  <data name="job_title_card" xml:space="preserve">
    <value>Job title card</value>
  </data>
  <data name="job_title_class" xml:space="preserve">
    <value>Job title class</value>
  </data>
  <data name="job_title_sub_class" xml:space="preserve">
    <value>Job title sub class</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="miliraty_service_rank" xml:space="preserve">
    <value>Miliraty service rank</value>
  </data>
  <data name="miliraty_service_status" xml:space="preserve">
    <value>Miliraty service status</value>
  </data>
  <data name="milirty" xml:space="preserve">
    <value>Milirty</value>
  </data>
  <data name="Nationality" xml:space="preserve">
    <value>Nationality</value>
  </data>
  <data name="organization" xml:space="preserve">
    <value>Organization module</value>
  </data>
  <data name="organization_chart" xml:space="preserve">
    <value>Organization chart</value>
  </data>
  <data name="organization_chart_card" xml:space="preserve">
    <value>Organization chart card</value>
  </data>
  <data name="organization_unit_level" xml:space="preserve">
    <value>Organization unit level</value>
  </data>
  <data name="organization_unit_schema" xml:space="preserve">
    <value>Organization unit schema</value>
  </data>
  <data name="organization_unit_type" xml:space="preserve">
    <value>Organization unit type</value>
  </data>
  <data name="organization_view_related_to_jobs" xml:space="preserve">
    <value>Organization view related to jobs</value>
  </data>
  <data name="personnel" xml:space="preserve">
    <value>Personnel</value>
  </data>
  <data name="personnel_transaction" xml:space="preserve">
    <value>personnel transaction</value>
  </data>
  <data name="Process" xml:space="preserve">
    <value>Process</value>
  </data>
  <data name="Qulifaication" xml:space="preserve">
    <value>Qualifications</value>
  </data>
  <data name="Qulification_category" xml:space="preserve">
    <value>Qulification category</value>
  </data>
  <data name="qulification_degree" xml:space="preserve">
    <value>Qulification degree</value>
  </data>
  <data name="qulification_main_provider" xml:space="preserve">
    <value>Qulification main provider</value>
  </data>
  <data name="qulification_name" xml:space="preserve">
    <value>Qulification name</value>
  </data>
  <data name="qulification_specialty" xml:space="preserve">
    <value>Qulification specialty</value>
  </data>
  <data name="qulification_sub_providor" xml:space="preserve">
    <value>Qulification sub providor</value>
  </data>
  <data name="Regions" xml:space="preserve">
    <value>Regions</value>
  </data>
  <data name="Rejection_reasons" xml:space="preserve">
    <value>Rejection_reasons</value>
  </data>
  <data name="Religion" xml:space="preserve">
    <value>Religion</value>
  </data>
  <data name="requirments" xml:space="preserve">
    <value>Requirments</value>
  </data>
  <data name="responsibilites" xml:space="preserve">
    <value>Responsibilites</value>
  </data>
  <data name="Risk" xml:space="preserve">
    <value>Risk</value>
  </data>
  <data name="Risk_type" xml:space="preserve">
    <value>Risk type</value>
  </data>
  <data name="Setup" xml:space="preserve">
    <value>Setup</value>
  </data>
  <data name="skill" xml:space="preserve">
    <value>Skill</value>
  </data>
  <data name="skills" xml:space="preserve">
    <value>Skills</value>
  </data>
  <data name="skills_group" xml:space="preserve">
    <value>Skills group</value>
  </data>
  <data name="Sponsor" xml:space="preserve">
    <value>Sponsor</value>
  </data>
  <data name="state_government" xml:space="preserve">
    <value>State/government</value>
  </data>
  <data name="subscription" xml:space="preserve">
    <value>Subscription</value>
  </data>
  <data name="Tickets_prices" xml:space="preserve">
    <value>Tickets prices</value>
  </data>
  <data name="Transactions" xml:space="preserve">
    <value>Transactions</value>
  </data>
  <data name="view_jobs" xml:space="preserve">
    <value>View jobs</value>
  </data>
  <data name="worklocation" xml:space="preserve">
    <value>worklocation</value>
  </data>
  <data name="zip_postal" xml:space="preserve">
    <value>zip postal</value>
  </data>
  <data name="contact_method" xml:space="preserve">
    <value>Contact method</value>
  </data>
  <data name="education_title" xml:space="preserve">
    <value>Education title</value>
  </data>
  <data name="Employee_record_tran" xml:space="preserve">
    <value>Employee record</value>
  </data>
  <data name="employee_transactions_tran" xml:space="preserve">
    <value>Employee transactions</value>
  </data>
  <data name="EOS_request_tran" xml:space="preserve">
    <value>EOS request</value>
  </data>
  <data name="Arabic" xml:space="preserve">
    <value>Arabic</value>
  </data>
  <data name="العربية" xml:space="preserve">
    <value>العربية</value>
  </data>
  <data name="d" xml:space="preserve">
    <value>ltr</value>
  </data>
  <data name="v" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="Mainpower" xml:space="preserve">
    <value>Mainpower</value>
  </data>
  <data name="request_new_contract" xml:space="preserve">
    <value>Request new contract</value>
  </data>
  <data name="mainpo" xml:space="preserve">
    <value>Mainpower</value>
  </data>
  <data name="requestconter" xml:space="preserve">
    <value>Request new contract</value>
  </data>
</root>