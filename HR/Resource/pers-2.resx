<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Activitynumber" xml:space="preserve">
    <value>Activity number</value>
  </data>
  <data name="addedSuccessfully" xml:space="preserve">
    <value>Added Successfully</value>
  </data>
  <data name="addemployeerecord" xml:space="preserve">
    <value>Add employee record</value>
  </data>
  <data name="addEOSRequest" xml:space="preserve">
    <value>Add EOS request</value>
  </data>
  <data name="addpersonneltransaction" xml:space="preserve">
    <value>Add personnel transaction</value>
  </data>
  <data name="addrequesttonewcontract" xml:space="preserve">
    <value>Add request to new contract</value>
  </data>
  <data name="allrecord" xml:space="preserve">
    <value>All record</value>
  </data>
  <data name="answer" xml:space="preserve">
    <value>Answer</value>
  </data>
  <data name="Approvedby" xml:space="preserve">
    <value>Approved by</value>
  </data>
  <data name="Approveddate" xml:space="preserve">
    <value>Approved date</value>
  </data>
  <data name="aretheemployeehasloanoradvanced" xml:space="preserve">
    <value>Are The Employee Has A Loan OR Advanced</value>
  </data>
  <data name="arethesettlementtransferredtopayroll" xml:space="preserve">
    <value>Are The Settlement Transferred To Payroll</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="checkList" xml:space="preserve">
    <value>check List</value>
  </data>
  <data name="check_status" xml:space="preserve">
    <value>check_status</value>
  </data>
  <data name="code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Commnets" xml:space="preserve">
    <value>Commnets</value>
  </data>
  <data name="contract" xml:space="preserve">
    <value>contract</value>
  </data>
  <data name="Contractenddate" xml:space="preserve">
    <value>Contract end date</value>
  </data>
  <data name="contractinformation" xml:space="preserve">
    <value>Contract information</value>
  </data>
  <data name="ContractNo" xml:space="preserve">
    <value>Contract No.</value>
  </data>
  <data name="Contractstartdate" xml:space="preserve">
    <value>Contract start date</value>
  </data>
  <data name="ContractType" xml:space="preserve">
    <value>Contract Type</value>
  </data>
  <data name="create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Createemployeerecord" xml:space="preserve">
    <value>Create employee record</value>
  </data>
  <data name="CreateEOSRequest" xml:space="preserve">
    <value>Create EOS Request</value>
  </data>
  <data name="CreatePersonnelTransaction" xml:space="preserve">
    <value>Create Personnel Transaction</value>
  </data>
  <data name="CreaterequesttonewContract" xml:space="preserve">
    <value>Create request to new Contract</value>
  </data>
  <data name="DateofEOS" xml:space="preserve">
    <value>Date of EOS</value>
  </data>
  <data name="dateofeosinterview" xml:space="preserve">
    <value>Date of eos interview</value>
  </data>
  <data name="dateofsettlement" xml:space="preserve">
    <value>Date of settlement</value>
  </data>
  <data name="Defaultlocationdesc" xml:space="preserve">
    <value>Default location</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="deletemessage" xml:space="preserve">
    <value>You Want Delete This Data?</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="editemployeerecord1" xml:space="preserve">
    <value>Edit employee record</value>
  </data>
  <data name="editEOSRequest" xml:space="preserve">
    <value>Edit EOS Request</value>
  </data>
  <data name="editrequesttonewContract" xml:space="preserve">
    <value>edit request to new Contract</value>
  </data>
  <data name="EffectiveDate" xml:space="preserve">
    <value>Effective Date</value>
  </data>
  <data name="empid" xml:space="preserve">
    <value>Emp-ID</value>
  </data>
  <data name="employee" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="Employmenttype" xml:space="preserve">
    <value>Employment type</value>
  </data>
  <data name="empname" xml:space="preserve">
    <value>Emp name</value>
  </data>
  <data name="Endofservicedate" xml:space="preserve">
    <value>End of service date</value>
  </data>
  <data name="EOSchecklist" xml:space="preserve">
    <value>EOS checklist</value>
  </data>
  <data name="eosdate" xml:space="preserve">
    <value>EOS-date</value>
  </data>
  <data name="Eosinterview" xml:space="preserve">
    <value>EOS-interview</value>
  </data>
  <data name="EOStype" xml:space="preserve">
    <value>EOS type</value>
  </data>
  <data name="EOS_reasons" xml:space="preserve">
    <value>EOS_reasons</value>
  </data>
  <data name="Faild" xml:space="preserve">
    <value>Faild</value>
  </data>
  <data name="Fixed_basic_salary_by" xml:space="preserve">
    <value>Fixed basic salary by</value>
  </data>
  <data name="fromdate" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="FromdateIssuebiggerdateExpire" xml:space="preserve">
    <value>From date Issue bigger date Expire</value>
  </data>
  <data name="group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="interpolation" xml:space="preserve">
    <value>Interpolation</value>
  </data>
  <data name="InterviewQuestions" xml:space="preserve">
    <value>Interview Questions</value>
  </data>
  <data name="items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="Joblevedesc" xml:space="preserve">
    <value>Job level </value>
  </data>
  <data name="job_descId" xml:space="preserve">
    <value>Title job </value>
  </data>
  <data name="lastDateofworkafternoticeperiod" xml:space="preserve">
    <value>Last Date of work after notice period</value>
  </data>
  <data name="lastworkdaybeforerequest" xml:space="preserve">
    <value>Last work day before request</value>
  </data>
  <data name="Lasworkingdate" xml:space="preserve">
    <value>Last working date</value>
  </data>
  <data name="Locationdesc" xml:space="preserve">
    <value>Location </value>
  </data>
  <data name="makenewcontract" xml:space="preserve">
    <value>Click To Make new contract</value>
  </data>
  <data name="Medicacommiterecomindation" xml:space="preserve">
    <value>Medical commite recomindation</value>
  </data>
  <data name="medicainformation" xml:space="preserve">
    <value>Medical information</value>
  </data>
  <data name="Medicalcommitecomments" xml:space="preserve">
    <value>Medical commite comments</value>
  </data>
  <data name="Medicaldate" xml:space="preserve">
    <value>Medical date</value>
  </data>
  <data name="Medicalentityname" xml:space="preserve">
    <value>Medical entity name</value>
  </data>
  <data name="Memodate" xml:space="preserve">
    <value>Memo date</value>
  </data>
  <data name="Memonumber" xml:space="preserve">
    <value>Memo number</value>
  </data>
  <data name="months" xml:space="preserve">
    <value>Months</value>
  </data>
  <data name="notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="Notfireason" xml:space="preserve">
    <value>Not fit reason</value>
  </data>
  <data name="Noticeperiod" xml:space="preserve">
    <value>Notice period</value>
  </data>
  <data name="Noticeperiodtype" xml:space="preserve">
    <value>Notice period type</value>
  </data>
  <data name="number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="positioninformation" xml:space="preserve">
    <value>position information</value>
  </data>
  <data name="Positiontransaction" xml:space="preserve">
    <value>Position transaction</value>
  </data>
  <data name="positiontransactioninformation" xml:space="preserve">
    <value>position transaction information</value>
  </data>
  <data name="PositionTransactionno" xml:space="preserve">
    <value>PositionTransaction number</value>
  </data>
  <data name="Position_status" xml:space="preserve">
    <value>Position status</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="Recommendedby" xml:space="preserve">
    <value>Recommended by</value>
  </data>
  <data name="Recordamount" xml:space="preserve">
    <value>Record amount</value>
  </data>
  <data name="Recorddate" xml:space="preserve">
    <value>Record date</value>
  </data>
  <data name="Recordexpiredate" xml:space="preserve">
    <value>Record expire date</value>
  </data>
  <data name="recordname" xml:space="preserve">
    <value>Record name</value>
  </data>
  <data name="recordnumber" xml:space="preserve">
    <value>Record number</value>
  </data>
  <data name="Recordvalue" xml:space="preserve">
    <value>Record value</value>
  </data>
  <data name="requestdate" xml:space="preserve">
    <value>Request-date</value>
  </data>
  <data name="Requsetdate" xml:space="preserve">
    <value>Requset date</value>
  </data>
  <data name="Resolutiondate" xml:space="preserve">
    <value>Resolution date</value>
  </data>
  <data name="Resolutionnumber" xml:space="preserve">
    <value>Resolution number</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="selectedchecklistgroup" xml:space="preserve">
    <value>Checklist group</value>
  </data>
  <data name="selectedEOSInterviewgroup" xml:space="preserve">
    <value>EOS Interview group</value>
  </data>
  <data name="selectedgroup" xml:space="preserve">
    <value>group</value>
  </data>
  <data name="specifidrecord" xml:space="preserve">
    <value>Specifed_record</value>
  </data>
  <data name="status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="thereiserrorininterview" xml:space="preserve">
    <value>There Is Error In Interview</value>
  </data>
  <data name="todate" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="TransactionDate" xml:space="preserve">
    <value>Transaction Date</value>
  </data>
  <data name="Transactiontype" xml:space="preserve">
    <value>Transaction type</value>
  </data>
  <data name="Transaction_Type_" xml:space="preserve">
    <value>Transaction_Type_</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Unitdesc" xml:space="preserve">
    <value>Unit desc</value>
  </data>
  <data name="viewcurrentpostion" xml:space="preserve">
    <value>View Current Postion</value>
  </data>
  <data name="years" xml:space="preserve">
    <value>Years</value>
  </data>
  <data name="youmustchooseemployee" xml:space="preserve">
    <value>You Must Choose Employee</value>
  </data>
  <data name="youmustchoosegroupofchicklistatfirst" xml:space="preserve">
    <value>You Must Choose Group Of Chick List At First</value>
  </data>
  <data name="youmustchoosejobtitle" xml:space="preserve">
    <value>You Must Choose Job Title</value>
  </data>
  <data name="youmustchooseslot" xml:space="preserve">
    <value>You Must Choose Slot</value>
  </data>
  <data name="Decisiontype" xml:space="preserve">
    <value>Decision Type</value>
  </data>
  <data name="Defaultdegree" xml:space="preserve">
    <value>Default Degree</value>
  </data>
  <data name="Evaluationelement" xml:space="preserve">
    <value>Evaluation element</value>
  </data>
  <data name="Fromscore" xml:space="preserve">
    <value>From Score</value>
  </data>
  <data name="modelanswer" xml:space="preserve">
    <value>Model Answer</value>
  </data>
  <data name="periods" xml:space="preserve">
    <value>Periods</value>
  </data>
  <data name="questiondescription" xml:space="preserve">
    <value>Questionde Scription</value>
  </data>
  <data name="Toscore" xml:space="preserve">
    <value>To Score</value>
  </data>
  <data name="withcompetencies" xml:space="preserve">
    <value>With Competencies</value>
  </data>
  <data name="createEvaluationElementCompetenies1" xml:space="preserve">
    <value>Create Evaluation Element Competenies</value>
  </data>
  <data name="createEvaluationgrade" xml:space="preserve">
    <value>Create Evaluation Grade</value>
  </data>
  <data name="createEvaluationobjective" xml:space="preserve">
    <value>Create Evaluation Objective</value>
  </data>
  <data name="createEvaluationtype1" xml:space="preserve">
    <value>Create Evaluation type</value>
  </data>
  <data name="createevaluitionquestionandanswer" xml:space="preserve">
    <value>Create Evalution Questions and Answers</value>
  </data>
  <data name="EvaluationElementCompetenies" xml:space="preserve">
    <value>Evaluation Element Competenies</value>
  </data>
  <data name="Evaluationgrade" xml:space="preserve">
    <value>Evaluation Grade</value>
  </data>
  <data name="Evaluationtype" xml:space="preserve">
    <value>Evaluation type</value>
  </data>
  <data name="evaluitionobjective" xml:space="preserve">
    <value>Evalution Objective</value>
  </data>
  <data name="evaluitionquestionandanswer" xml:space="preserve">
    <value>Evalution Questions and Answers</value>
  </data>
  <data name="fromscore1" xml:space="preserve">
    <value>From Score</value>
  </data>
  <data name="period" xml:space="preserve">
    <value>period</value>
  </data>
  <data name="removesuccessfully" xml:space="preserve">
    <value>Remove successfully</value>
  </data>
  <data name="toscore1" xml:space="preserve">
    <value>To Score</value>
  </data>
  <data name="Evalutionelement" xml:space="preserve">
    <value>Evaluation element</value>
  </data>
  <data name="addnewevalutationcompetenies" xml:space="preserve">
    <value>Add New Evalutation Competenies</value>
  </data>
  <data name="Evalutionelement1" xml:space="preserve">
    <value>Create Evaluation element</value>
  </data>
  <data name="CreatePerformanceEvaluationGroup" xml:space="preserve">
    <value>Create Performance Evaluation Group</value>
  </data>
  <data name="PerformanceEvaluationGroup" xml:space="preserve">
    <value>Performance Evaluation Group</value>
  </data>
  <data name="addelement" xml:space="preserve">
    <value>Add New Element</value>
  </data>
  <data name="addQ" xml:space="preserve">
    <value>Add Questions</value>
  </data>
</root>